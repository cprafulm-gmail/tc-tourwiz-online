[{"E:\\Amit\\Projects\\booking-engine\\src\\index.js":"1","E:\\Amit\\Projects\\booking-engine\\src\\App.js":"2","E:\\Amit\\Projects\\booking-engine\\src\\serviceWorker.js":"3","E:\\Amit\\Projects\\booking-engine\\src\\services\\messagelistener.js":"4","E:\\Amit\\Projects\\booking-engine\\src\\screens\\home.jsx":"5","E:\\Amit\\Projects\\booking-engine\\src\\screens\\results.jsx":"6","E:\\Amit\\Projects\\booking-engine\\src\\screens\\details.jsx":"7","E:\\Amit\\Projects\\booking-engine\\src\\screens\\booking-status.jsx":"8","E:\\Amit\\Projects\\booking-engine\\src\\screens\\bookings.jsx":"9","E:\\Amit\\Projects\\booking-engine\\src\\screens\\cart.jsx":"10","E:\\Amit\\Projects\\booking-engine\\src\\screens\\edit-profile.jsx":"11","E:\\Amit\\Projects\\booking-engine\\src\\screens\\payment.jsx":"12","E:\\Amit\\Projects\\booking-engine\\src\\screens\\splash.jsx":"13","E:\\Amit\\Projects\\booking-engine\\src\\screens\\view-booking.jsx":"14","E:\\Amit\\Projects\\booking-engine\\src\\screens\\balance.jsx":"15","E:\\Amit\\Projects\\booking-engine\\src\\screens\\voucher-invoice.jsx":"16","E:\\Amit\\Projects\\booking-engine\\src\\screens\\agent-login.jsx":"17","E:\\Amit\\Projects\\booking-engine\\src\\screens\\issue-documents.jsx":"18","E:\\Amit\\Projects\\booking-engine\\src\\screens\\profile.jsx":"19","E:\\Amit\\Projects\\booking-engine\\src\\screens\\signup.jsx":"20","E:\\Amit\\Projects\\booking-engine\\src\\screens\\add-cotraveler.jsx":"21","E:\\Amit\\Projects\\booking-engine\\src\\screens\\EWalletStatement.jsx":"22","E:\\Amit\\Projects\\booking-engine\\src\\screens\\notfound.jsx":"23","E:\\Amit\\Projects\\booking-engine\\src\\screens\\quotation.jsx":"24","E:\\Amit\\Projects\\booking-engine\\src\\screens\\dashboard.jsx":"25","E:\\Amit\\Projects\\booking-engine\\src\\screens\\failed-bookings.jsx":"26","E:\\Amit\\Projects\\booking-engine\\src\\screens\\add-customer.jsx":"27","E:\\Amit\\Projects\\booking-engine\\src\\screens\\manage-customers.jsx":"28","E:\\Amit\\Projects\\booking-engine\\src\\screens\\offline-bookings.jsx":"29","E:\\Amit\\Projects\\booking-engine\\src\\screens\\baggage-info.jsx":"30","E:\\Amit\\Projects\\booking-engine\\src\\screens\\quotation-list.jsx":"31","E:\\Amit\\Projects\\booking-engine\\src\\screens\\edit-cotraveler.jsx":"32","E:\\Amit\\Projects\\booking-engine\\src\\screens\\itinerary-email-view.jsx":"33","E:\\Amit\\Projects\\booking-engine\\src\\screens\\co-travelers.jsx":"34","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\footer.jsx":"35","E:\\Amit\\Projects\\booking-engine\\src\\screens\\umrah-package.jsx":"36","E:\\Amit\\Projects\\booking-engine\\src\\screens\\login.jsx":"37","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\header.jsx":"38","E:\\Amit\\Projects\\booking-engine\\src\\base\\environment.jsx":"39","E:\\Amit\\Projects\\booking-engine\\src\\services\\requester.jsx":"40","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\cart-icon.jsx":"41","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\MapComponent.jsx":"42","E:\\Amit\\Projects\\booking-engine\\src\\base\\result-base.jsx":"43","E:\\Amit\\Projects\\booking-engine\\src\\helpers\\amount.jsx":"44","E:\\Amit\\Projects\\booking-engine\\src\\components\\call-center\\call-center.jsx":"45","E:\\Amit\\Projects\\booking-engine\\src\\helpers\\translate.jsx":"46","E:\\Amit\\Projects\\booking-engine\\src\\helpers\\date.jsx":"47","E:\\Amit\\Projects\\booking-engine\\src\\helpers\\svg-icon.jsx":"48","E:\\Amit\\Projects\\booking-engine\\src\\helpers\\global.jsx":"49","E:\\Amit\\Projects\\booking-engine\\src\\helpers\\action-modal.jsx":"50","E:\\Amit\\Projects\\booking-engine\\src\\helpers\\model.jsx":"51","E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item-air-domestic.jsx":"52","E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-total.jsx":"53","E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-views.jsx":"54","E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget.jsx":"55","E:\\Amit\\Projects\\booking-engine\\src\\base\\booking-base.jsx":"56","E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-total-domestic.jsx":"57","E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item-air.jsx":"58","E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item-air-domestic-selected.jsx":"59","E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-wishlist.jsx":"60","E:\\Amit\\Projects\\booking-engine\\src\\components\\sorting\\sorting.jsx":"61","E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-loading.jsx":"62","E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\image-slider.jsx":"63","E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-wishlist-email.jsx":"64","E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item.jsx":"65","E:\\Amit\\Projects\\booking-engine\\src\\components\\pagination\\lazyloading.jsx":"66","E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item-withsupplierprice.jsx":"67","E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filters-domestic.jsx":"68","E:\\Amit\\Projects\\booking-engine\\src\\components\\pagination\\lazyloading-domestic.jsx":"69","E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\all-amenities.jsx":"70","E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\details-header.jsx":"71","E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filters.jsx":"72","E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\overview.jsx":"73","E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\details-loading.jsx":"74","E:\\Amit\\Projects\\booking-engine\\src\\components\\booking-management\\booking-pagination.jsx":"75","E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\schedule.jsx":"76","E:\\Amit\\Projects\\booking-engine\\src\\components\\booking-management\\booking-filters.jsx":"77","E:\\Amit\\Projects\\booking-engine\\src\\components\\sorting\\sorting-domestic.jsx":"78","E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\rooms.jsx":"79","E:\\Amit\\Projects\\booking-engine\\src\\components\\booking-management\\offline-booking-comments.jsx":"80","E:\\Amit\\Projects\\booking-engine\\src\\components\\booking-management\\failed-booking-popup.jsx":"81","E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\jump-menu.jsx":"82","E:\\Amit\\Projects\\booking-engine\\src\\components\\loading\\booking-loading-table.jsx":"83","E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-flight-details.jsx":"84","E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\amenities.jsx":"85","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-list-filters.jsx":"86","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\lang.jsx":"87","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\login-menu.jsx":"88","E:\\Amit\\Projects\\booking-engine\\src\\helpers\\dropdown-list.jsx":"89","E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-get-cart-item.jsx":"90","E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-itinerary-email.jsx":"91","E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-email.jsx":"92","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\form.jsx":"93","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\loader.jsx":"94","E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-results.jsx":"95","E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-info.jsx":"96","E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-details.jsx":"97","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\FileBase64.jsx":"98","E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-itinerary-details.jsx":"99","E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-search.jsx":"100","E:\\Amit\\Projects\\booking-engine\\src\\services\\requester-quotation.jsx":"101","E:\\Amit\\Projects\\booking-engine\\src\\services\\requester-location-img.jsx":"102","E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-itinerary-add-offline.jsx":"103","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-itinerary-details-item.jsx":"104","E:\\Amit\\Projects\\booking-engine\\src\\helpers\\coming-soon.jsx":"105","E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-create.jsx":"106","E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-cotraveler-info.jsx":"107","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\iconMapping.js":"108","E:\\Amit\\Projects\\booking-engine\\src\\base\\cart-base.jsx":"109","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\map.jsx":"110","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\vehicle-rental-condition-content.jsx":"111","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\book-to-confirm.jsx":"112","E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\room.jsx":"113","E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filter-starrating.jsx":"114","E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filter-select.jsx":"115","E:\\Amit\\Projects\\booking-engine\\src\\helpers\\html-parser.jsx":"116","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\star-rating.jsx":"117","E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filter-range.jsx":"118","E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filter-rangelist.jsx":"119","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\trip-advisor-rating.jsx":"120","E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filter-rangelist-domestic.jsx":"121","E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filter-map-autocomplete.jsx":"122","E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filter-checkbox-relative.jsx":"123","E:\\Amit\\Projects\\booking-engine\\src\\components\\booking-management\\failed-booking-popup-air.jsx":"124","E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filter-checkbox.jsx":"125","E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filter-checkbox-lookup.jsx":"126","E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-advertisement.jsx":"127","E:\\Amit\\Projects\\booking-engine\\src\\components\\booking-management\\failed-booking-popup-hotel.jsx":"128","E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filter-checkbox-domestic.jsx":"129","E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filter-name.jsx":"130","E:\\Amit\\Projects\\booking-engine\\src\\components\\booking-management\\failed-booking-popup-activity.jsx":"131","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\login.jsx":"132","E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-results-total.jsx":"133","E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-email-items-offline.jsx":"134","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\form-birthdate.jsx":"135","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\form-passport-expiry.jsx":"136","E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-details-items.jsx":"137","E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-email-items-fromlist.jsx":"138","E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-results-loading.jsx":"139","E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\quotation-result-item-air.jsx":"140","E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget-umrah-package.jsx":"141","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\form-text-area.jsx":"142","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\form-select.jsx":"143","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\form-date.jsx":"144","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\form-input.jsx":"145","E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-results-item.jsx":"146","E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-add-offline.jsx":"147","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\form-contact.jsx":"148","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\form-time-duration.jsx":"149","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\stops.jsx":"150","E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\hotel-pax-widget-umrah.jsx":"151","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-details-popup.jsx":"152","E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item-air-fare-rule.jsx":"153","E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\hotel-special-request.jsx":"154","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\pax-icons.jsx":"155","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\simple-slideshow.jsx":"156","E:\\Amit\\Projects\\booking-engine\\src\\components\\payment\\payment-mode.jsx":"157","E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-common.jsx":"158","E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item-air-tabs.jsx":"159","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\date-range.jsx":"160","E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget-mode-umrah-package.jsx":"161","E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item-air-fare.jsx":"162","E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\hotel-room-widgets-umrah.jsx":"163","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\amenities.jsx":"164","E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\umrah-package-quick-book.jsx":"165","E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\itenary-details.jsx":"166","E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\rules-regulations.jsx":"167","E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\quotation-result-item-air-item.jsx":"168","E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\inclusions-excusions.jsx":"169","E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item-air-details.jsx":"170","E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-details-popup.jsx":"171","E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget-mode-umrah-package-widget.jsx":"172","E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget-mode-umrah-package-tabs.jsx":"173","E:\\Amit\\Projects\\booking-engine\\src\\components\\call-center\\quotation-call-center.jsx":"174","E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-email-header.jsx":"175","E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\quotation-schedule.jsx":"176","E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\umrah-package-quickbook-groundservice.jsx":"177","E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\umrah-package-quickbook-transportation.jsx":"178","E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-email-items.jsx":"179","E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-email-footer.jsx":"180","E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\umrah-package-rooms.jsx":"181","E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\quick-book.jsx":"182","E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item-air-fare-domestic.jsx":"183","E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item-air-item-domestic.jsx":"184","E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item-air-item.jsx":"185","E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget-mode-home.jsx":"186","E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget-mode-modify-widget.jsx":"187","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\loader-call-center.jsx":"188","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\map-popup-container.jsx":"189","E:\\Amit\\Projects\\booking-engine\\src\\base\\call-center-base.jsx":"190","E:\\Amit\\Projects\\booking-engine\\src\\components\\call-center\\call-center-details.jsx":"191","E:\\Amit\\Projects\\booking-engine\\src\\helpers\\language.jsx":"192","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-list-loading.jsx":"193","E:\\Amit\\Projects\\booking-engine\\src\\components\\call-center\\call-center-selection.jsx":"194","E:\\Amit\\Projects\\booking-engine\\src\\helpers\\baggage-info.jsx":"195","E:\\Amit\\Projects\\booking-engine\\src\\helpers\\svg-icon-path.jsx":"196","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-get-cart-item.jsx":"197","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\itinerary-add-offline.jsx":"198","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\itinerary-email.jsx":"199","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-results-meta.jsx":"200","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-email.jsx":"201","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-search.jsx":"202","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\itinerary-details.jsx":"203","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-results.jsx":"204","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-create.jsx":"205","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-details.jsx":"206","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-info.jsx":"207","E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-groundservice-details.jsx":"208","E:\\Amit\\Projects\\booking-engine\\src\\components\\booking-management\\issue-documents-popup.jsx":"209","E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-transportation-details.jsx":"210","E:\\Amit\\Projects\\booking-engine\\src\\components\\loading\\view-booking-loading.jsx":"211","E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\groundservice-additionalsearvice-widget.jsx":"212","E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-add-comment.jsx":"213","E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\air-pax-widget.jsx":"214","E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\activity-pax-widget.jsx":"215","E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\transfers-pax-widget.jsx":"216","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-add-offline.jsx":"217","E:\\Amit\\Projects\\booking-engine\\src\\components\\export\\export-ewallet-statement.jsx":"218","E:\\Amit\\Projects\\booking-engine\\src\\components\\call-center\\quotation-call-center-selection.jsx":"219","E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\hotel-special-request.jsx":"220","E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\auto-complete.jsx":"221","E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\hotel-pax-widget.jsx":"222","E:\\Amit\\Projects\\booking-engine\\src\\components\\booking-management\\online-cancel.jsx":"223","E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-air-details.jsx":"224","E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-cancel-modify-comments.jsx":"225","E:\\Amit\\Projects\\booking-engine\\src\\components\\booking-management\\offline-cancel-modify.jsx":"226","E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-other-details-transfers.jsx":"227","E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-other-details-vehicle.jsx":"228","E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-travellers-air-details.jsx":"229","E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-item-details-activity.jsx":"230","E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-travellers-details.jsx":"231","E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\umrah-package-room.jsx":"232","E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-room-details.jsx":"233","E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-booked-by-details.jsx":"234","E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item-air-fare-rule-domestic.jsx":"235","E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\schedule-vehicle.jsx":"236","E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-item-details.jsx":"237","E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-fare-details.jsx":"238","E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-policy-details.jsx":"239","E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget-mode-home-tabs.jsx":"240","E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-reservation-details.jsx":"241","E:\\Amit\\Projects\\booking-engine\\src\\components\\payment\\payment-promocode.jsx":"242","E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\cart-items.jsx":"243","E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget-mode-home-widget.jsx":"244","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\booking-steps.jsx":"245","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\change-dates-occupancy.jsx":"246","E:\\Amit\\Projects\\booking-engine\\src\\components\\loading\\booking-loading.jsx":"247","E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\price-breakup.jsx":"248","E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\travellers.jsx":"249","E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\cart-loading.jsx":"250","E:\\Amit\\Projects\\booking-engine\\src\\components\\booking-status\\failure-booking-message.jsx":"251","E:\\Amit\\Projects\\booking-engine\\src\\components\\booking-status\\success-booking-message.jsx":"252","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-email-header.jsx":"253","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-email-items.jsx":"254","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-results-loading.jsx":"255","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-email-footer.jsx":"256","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-results-total.jsx":"257","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-email-items-fromlist.jsx":"258","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-email-items-offline.jsx":"259","E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget-quotation.jsx":"260","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-results-item.jsx":"261","E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\hotel-room-widgets.jsx":"262","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-details-items.jsx":"263","E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\cart-item-air.jsx":"264","E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\cart-item.jsx":"265","E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\price-breakup-air.jsx":"266","E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\traveller.jsx":"267","E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\price-breakup-hotel.jsx":"268","E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\traveller-umrah.jsx":"269","E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\contact-info.jsx":"270","E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\traveller-air.jsx":"271","E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget-mode-quotation.jsx":"272","E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\quotation-quick-book.jsx":"273","E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\guest-transfers.jsx":"274","E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\guest.jsx":"275","E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\guest-umrah.jsx":"276","E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\guest-air.jsx":"277","E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget-mode-quotation-tabs.jsx":"278","E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget-mode-quotation-widget.jsx":"279","E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\quotation-rooms.jsx":"280","E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\quotation-room.jsx":"281","E:\\Amit\\Projects\\booking-engine\\src\\screens\\inquiry-list.jsx":"282","E:\\Amit\\Projects\\booking-engine\\src\\screens\\backoffice.jsx":"283","E:\\Amit\\Projects\\booking-engine\\src\\screens\\dashboard-agent.jsx":"284","E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\customer-invoices.jsx":"285","E:\\Amit\\Projects\\booking-engine\\src\\screens\\manualbookingcart.jsx":"286","E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports.jsx":"287","E:\\Amit\\Projects\\booking-engine\\src\\screens\\inquiry.jsx":"288","E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\customer-reconciliation.jsx":"289","E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\suppliers-ledgers.jsx":"290","E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\supplier-invoice-form.jsx":"291","E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\supplier-payment.jsx":"292","E:\\Amit\\Projects\\booking-engine\\src\\screens\\manual-booking.jsx":"293","E:\\Amit\\Projects\\booking-engine\\src\\screens\\admin\\employee-form.jsx":"294","E:\\Amit\\Projects\\booking-engine\\src\\screens\\admin\\change-password.jsx":"295","E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\supplier-invoices.jsx":"296","E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\customer-ledgers.jsx":"297","E:\\Amit\\Projects\\booking-engine\\src\\screens\\admin\\employee.jsx":"298","E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\supplier-management.jsx":"299","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\form-payment-date.jsx":"300","E:\\Amit\\Projects\\booking-engine\\src\\services\\requester-report.jsx":"301","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-menu.jsx":"302","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-management-filter.jsx":"303","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-management-excel.jsx":"304","E:\\Amit\\Projects\\booking-engine\\src\\components\\loading\\table-loading.jsx":"305","E:\\Amit\\Projects\\booking-engine\\src\\components\\admin\\message-bar.jsx":"306","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-add-edit-modal.jsx":"307","E:\\Amit\\Projects\\booking-engine\\src\\components\\admin\\delete-confirmation-dialog.jsx":"308","E:\\Amit\\Projects\\booking-engine\\src\\components\\admin\\employee-excel.jsx":"309","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\customer-ledger-tablerow.jsx":"310","E:\\Amit\\Projects\\booking-engine\\src\\components\\admin\\employee-filtes.jsx":"311","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\customer-ledger-filter.jsx":"312","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-invoice-excel.jsx":"313","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-invoices-filter.jsx":"314","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\customer-selection.jsx":"315","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-invoice-details.jsx":"316","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-invoice-reconcilation-report-xls.jsx":"317","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-invoice-payment.jsx":"318","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-payment-form.jsx":"319","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-payment-steps.jsx":"320","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-invoice-details-print.jsx":"321","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-brn-payment.jsx":"322","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-invoice-details-pdf.jsx":"323","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\business-dropdown.jsx":"324","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-ledger-filter.jsx":"325","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\invoice-pdf.jsx":"326","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\manual-booking-add-offline.jsx":"327","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\invoice-print.jsx":"328","E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\manual-booking-search-tabs.jsx":"329","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\invoice-selection-list.jsx":"330","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\customer-payment-info-form.jsx":"331","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\brn-selection.jsx":"332","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\invoice-list-pdf.jsx":"333","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\invoice-list-excel.jsx":"334","E:\\Amit\\Projects\\booking-engine\\src\\base\\customer-reconciliation-base.jsx":"335","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\inquiry-form.jsx":"336","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\customerInvoice-filter.jsx":"337","E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\travellers-manualbooking.jsx":"338","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-details-table-row.jsx":"339","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-invoice-payment-filter.jsx":"340","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\customer-selection-popup.jsx":"341","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\reconciliationdetail-filters.jsx":"342","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\customerSelection-header.jsx":"343","E:\\Amit\\Projects\\booking-engine\\src\\screens\\admin\\category-management.jsx":"344","E:\\Amit\\Projects\\booking-engine\\src\\screens\\import-inquiries.jsx":"345","E:\\Amit\\Projects\\booking-engine\\src\\screens\\content-library.jsx":"346","E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\inquiry-report.jsx":"347","E:\\Amit\\Projects\\booking-engine\\src\\screens\\admin\\branch-management.jsx":"348","E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\collection-report.jsx":"349","E:\\Amit\\Projects\\booking-engine\\src\\screens\\admin\\update-profile.jsx":"350","E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\outstanding-report.jsx":"351","E:\\Amit\\Projects\\booking-engine\\src\\screens\\admin\\agent-wallet-management.jsx":"352","E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\revenue-report.jsx":"353","E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\sales-report.jsx":"354","E:\\Amit\\Projects\\booking-engine\\src\\screens\\import-customer.jsx":"355","E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\supplier-payment-report.jsx":"356","E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\booking-report.jsx":"357","E:\\Amit\\Projects\\booking-engine\\src\\components\\admin\\category-add-update-modal.jsx":"358","E:\\Amit\\Projects\\booking-engine\\src\\components\\admin\\branch-filters.jsx":"359","E:\\Amit\\Projects\\booking-engine\\src\\components\\admin\\branch-add-update-modal.jsx":"360","E:\\Amit\\Projects\\booking-engine\\src\\components\\admin\\agent-wallet-logs.jsx":"361","E:\\Amit\\Projects\\booking-engine\\src\\components\\admin\\agent-wallet-transaction.jsx":"362","E:\\Amit\\Projects\\booking-engine\\src\\components\\admin\\category-filters.jsx":"363","E:\\Amit\\Projects\\booking-engine\\src\\components\\admin\\agent-wallet-management-filtes.jsx":"364","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\inquiry-excel.jsx":"365","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\booking-report-excel.jsx":"366","E:\\Amit\\Projects\\booking-engine\\src\\screens\\about.jsx":"367","E:\\Amit\\Projects\\booking-engine\\src\\components\\admin\\show-logo.jsx":"368"},{"size":696,"mtime":1609940224075,"results":"369","hashOfConfig":"370"},{"size":15202,"mtime":1617276017208,"results":"371","hashOfConfig":"370"},{"size":5086,"mtime":1577429153547,"results":"372","hashOfConfig":"370"},{"size":758,"mtime":1617216640326,"results":"373","hashOfConfig":"370"},{"size":1113,"mtime":1615450357837,"results":"374","hashOfConfig":"370"},{"size":22639,"mtime":1617216640326,"results":"375","hashOfConfig":"370"},{"size":12629,"mtime":1615450357833,"results":"376","hashOfConfig":"370"},{"size":8785,"mtime":1615450357777,"results":"377","hashOfConfig":"370"},{"size":20053,"mtime":1617216640063,"results":"378","hashOfConfig":"370"},{"size":6810,"mtime":1617216640063,"results":"379","hashOfConfig":"370"},{"size":38150,"mtime":1615450357834,"results":"380","hashOfConfig":"370"},{"size":7715,"mtime":1615450357890,"results":"381","hashOfConfig":"370"},{"size":720,"mtime":1615450357941,"results":"382","hashOfConfig":"370"},{"size":21557,"mtime":1617216640326,"results":"383","hashOfConfig":"370"},{"size":6724,"mtime":1615450357776,"results":"384","hashOfConfig":"370"},{"size":8249,"mtime":1615450358013,"results":"385","hashOfConfig":"370"},{"size":56932,"mtime":1617275959524,"results":"386","hashOfConfig":"370"},{"size":9476,"mtime":1615450357860,"results":"387","hashOfConfig":"370"},{"size":9495,"mtime":1615450357891,"results":"388","hashOfConfig":"370"},{"size":17058,"mtime":1615450357940,"results":"389","hashOfConfig":"370"},{"size":18298,"mtime":1615450357761,"results":"390","hashOfConfig":"370"},{"size":11315,"mtime":1617216639941,"results":"391","hashOfConfig":"370"},{"size":730,"mtime":1615450357888,"results":"392","hashOfConfig":"370"},{"size":50488,"mtime":1617276053179,"results":"393","hashOfConfig":"370"},{"size":17240,"mtime":1617276017230,"results":"394","hashOfConfig":"370"},{"size":17264,"mtime":1615450357836,"results":"395","hashOfConfig":"370"},{"size":3302,"mtime":1615450357765,"results":"396","hashOfConfig":"370"},{"size":3607,"mtime":1615450357861,"results":"397","hashOfConfig":"370"},{"size":8080,"mtime":1615450357888,"results":"398","hashOfConfig":"370"},{"size":3634,"mtime":1615450357775,"results":"399","hashOfConfig":"370"},{"size":14257,"mtime":1617216640226,"results":"400","hashOfConfig":"370"},{"size":23494,"mtime":1615450357833,"results":"401","hashOfConfig":"370"},{"size":14160,"mtime":1615450357860,"results":"402","hashOfConfig":"370"},{"size":82165,"mtime":1617216640094,"results":"403","hashOfConfig":"370"},{"size":621,"mtime":1617216638259,"results":"404","hashOfConfig":"370"},{"size":25041,"mtime":1617216640326,"results":"405","hashOfConfig":"370"},{"size":23900,"mtime":1617216640195,"results":"406","hashOfConfig":"370"},{"size":1652,"mtime":1617275648157,"results":"407","hashOfConfig":"370"},{"size":5718,"mtime":1617216638058,"results":"408","hashOfConfig":"370"},{"size":4392,"mtime":1617216640342,"results":"409","hashOfConfig":"370"},{"size":7133,"mtime":1615450355684,"results":"410","hashOfConfig":"370"},{"size":8408,"mtime":1617216638237,"results":"411","hashOfConfig":"370"},{"size":93340,"mtime":1617216638058,"results":"412","hashOfConfig":"370"},{"size":2158,"mtime":1593159699213,"results":"413","hashOfConfig":"370"},{"size":1737,"mtime":1615450355505,"results":"414","hashOfConfig":"370"},{"size":290,"mtime":1582880201945,"results":"415","hashOfConfig":"370"},{"size":872,"mtime":1597808510416,"results":"416","hashOfConfig":"370"},{"size":1168,"mtime":1617216639894,"results":"417","hashOfConfig":"370"},{"size":6506,"mtime":1617216639740,"results":"418","hashOfConfig":"370"},{"size":1831,"mtime":1596740268905,"results":"419","hashOfConfig":"370"},{"size":1525,"mtime":1583243152800,"results":"420","hashOfConfig":"370"},{"size":2654,"mtime":1615450356466,"results":"421","hashOfConfig":"370"},{"size":682,"mtime":1615450356779,"results":"422","hashOfConfig":"370"},{"size":2141,"mtime":1615450356779,"results":"423","hashOfConfig":"370"},{"size":6000,"mtime":1617216639277,"results":"424","hashOfConfig":"370"},{"size":16502,"mtime":1596120766673,"results":"425","hashOfConfig":"370"},{"size":757,"mtime":1615450356778,"results":"426","hashOfConfig":"370"},{"size":5675,"mtime":1615450356750,"results":"427","hashOfConfig":"370"},{"size":10243,"mtime":1615450356465,"results":"428","hashOfConfig":"370"},{"size":5679,"mtime":1615450356780,"results":"429","hashOfConfig":"370"},{"size":2414,"mtime":1615450357636,"results":"430","hashOfConfig":"370"},{"size":3911,"mtime":1615450356777,"results":"431","hashOfConfig":"370"},{"size":3845,"mtime":1617216638522,"results":"432","hashOfConfig":"370"},{"size":16004,"mtime":1615450356780,"results":"433","hashOfConfig":"370"},{"size":36198,"mtime":1617216639108,"results":"434","hashOfConfig":"370"},{"size":876,"mtime":1615450356244,"results":"435","hashOfConfig":"370"},{"size":34232,"mtime":1617216639108,"results":"436","hashOfConfig":"370"},{"size":15760,"mtime":1615450356241,"results":"437","hashOfConfig":"370"},{"size":838,"mtime":1615450356244,"results":"438","hashOfConfig":"370"},{"size":1480,"mtime":1615450022135,"results":"439","hashOfConfig":"370"},{"size":4282,"mtime":1617275566035,"results":"440","hashOfConfig":"370"},{"size":11657,"mtime":1615450356241,"results":"441","hashOfConfig":"370"},{"size":10014,"mtime":1615450356188,"results":"442","hashOfConfig":"370"},{"size":2546,"mtime":1615450356179,"results":"443","hashOfConfig":"370"},{"size":2813,"mtime":1617275648119,"results":"444","hashOfConfig":"370"},{"size":5723,"mtime":1615450356198,"results":"445","hashOfConfig":"370"},{"size":17474,"mtime":1615450355402,"results":"446","hashOfConfig":"370"},{"size":2161,"mtime":1615450357636,"results":"447","hashOfConfig":"370"},{"size":7535,"mtime":1617216638559,"results":"448","hashOfConfig":"370"},{"size":16201,"mtime":1615450355493,"results":"449","hashOfConfig":"370"},{"size":8833,"mtime":1615450355492,"results":"450","hashOfConfig":"370"},{"size":5997,"mtime":1615450356187,"results":"451","hashOfConfig":"370"},{"size":2172,"mtime":1615450356243,"results":"452","hashOfConfig":"370"},{"size":7023,"mtime":1617216639339,"results":"453","hashOfConfig":"370"},{"size":832,"mtime":1615450356139,"results":"454","hashOfConfig":"370"},{"size":3824,"mtime":1615450356352,"results":"455","hashOfConfig":"370"},{"size":4012,"mtime":1615450355808,"results":"456","hashOfConfig":"370"},{"size":19665,"mtime":1617275648188,"results":"457","hashOfConfig":"370"},{"size":27778,"mtime":1617275648204,"results":"458","hashOfConfig":"370"},{"size":11232,"mtime":1617275566116,"results":"459","hashOfConfig":"370"},{"size":20550,"mtime":1617216639377,"results":"460","hashOfConfig":"370"},{"size":10322,"mtime":1617216639339,"results":"461","hashOfConfig":"370"},{"size":10260,"mtime":1617275648157,"results":"462","hashOfConfig":"370"},{"size":355,"mtime":1615450355809,"results":"463","hashOfConfig":"370"},{"size":9692,"mtime":1617275566116,"results":"464","hashOfConfig":"370"},{"size":1422,"mtime":1615450357646,"results":"465","hashOfConfig":"370"},{"size":2287,"mtime":1615450357640,"results":"466","hashOfConfig":"370"},{"size":2137,"mtime":1615450355671,"results":"467","hashOfConfig":"370"},{"size":7832,"mtime":1617216639377,"results":"468","hashOfConfig":"370"},{"size":913,"mtime":1615450357670,"results":"469","hashOfConfig":"370"},{"size":734,"mtime":1603179818548,"results":"470","hashOfConfig":"370"},{"size":526,"mtime":1603878635174,"results":"471","hashOfConfig":"370"},{"size":1643,"mtime":1615450357648,"results":"472","hashOfConfig":"370"},{"size":38997,"mtime":1615450356351,"results":"473","hashOfConfig":"370"},{"size":996,"mtime":1617216639424,"results":"474","hashOfConfig":"370"},{"size":19541,"mtime":1617216639277,"results":"475","hashOfConfig":"370"},{"size":3198,"mtime":1615450357682,"results":"476","hashOfConfig":"370"},{"size":4630,"mtime":1615450020947,"results":"477","hashOfConfig":"370"},{"size":55512,"mtime":1617216638058,"results":"478","hashOfConfig":"370"},{"size":622,"mtime":1615450355814,"results":"479","hashOfConfig":"370"},{"size":1189,"mtime":1615450356139,"results":"480","hashOfConfig":"370"},{"size":4692,"mtime":1615450355679,"results":"481","hashOfConfig":"370"},{"size":13613,"mtime":1617216638553,"results":"482","hashOfConfig":"370"},{"size":1943,"mtime":1615450356240,"results":"483","hashOfConfig":"370"},{"size":1546,"mtime":1615450356238,"results":"484","hashOfConfig":"370"},{"size":1926,"mtime":1591027350274,"results":"485","hashOfConfig":"370"},{"size":541,"mtime":1615450356136,"results":"486","hashOfConfig":"370"},{"size":3890,"mtime":1617275566064,"results":"487","hashOfConfig":"370"},{"size":3504,"mtime":1615450356237,"results":"488","hashOfConfig":"370"},{"size":535,"mtime":1615450356138,"results":"489","hashOfConfig":"370"},{"size":3538,"mtime":1615450356233,"results":"490","hashOfConfig":"370"},{"size":7067,"mtime":1615450356207,"results":"491","hashOfConfig":"370"},{"size":6486,"mtime":1615450356206,"results":"492","hashOfConfig":"370"},{"size":5917,"mtime":1615450355490,"results":"493","hashOfConfig":"370"},{"size":6127,"mtime":1615450356207,"results":"494","hashOfConfig":"370"},{"size":4560,"mtime":1615450356206,"results":"495","hashOfConfig":"370"},{"size":744,"mtime":1615450356463,"results":"496","hashOfConfig":"370"},{"size":6005,"mtime":1615450355491,"results":"497","hashOfConfig":"370"},{"size":5604,"mtime":1615450356205,"results":"498","hashOfConfig":"370"},{"size":2183,"mtime":1615450356208,"results":"499","hashOfConfig":"370"},{"size":6198,"mtime":1615450355429,"results":"500","hashOfConfig":"370"},{"size":23613,"mtime":1617216638490,"results":"501","hashOfConfig":"370"},{"size":3033,"mtime":1617275566116,"results":"502","hashOfConfig":"370"},{"size":41455,"mtime":1615450357642,"results":"503","hashOfConfig":"370"},{"size":5189,"mtime":1615450355696,"results":"504","hashOfConfig":"370"},{"size":2884,"mtime":1617216638290,"results":"505","hashOfConfig":"370"},{"size":74958,"mtime":1617275566099,"results":"506","hashOfConfig":"370"},{"size":35192,"mtime":1615450357641,"results":"507","hashOfConfig":"370"},{"size":2489,"mtime":1615450357668,"results":"508","hashOfConfig":"370"},{"size":5805,"mtime":1617216639108,"results":"509","hashOfConfig":"370"},{"size":3479,"mtime":1615450357608,"results":"510","hashOfConfig":"370"},{"size":599,"mtime":1615450355709,"results":"511","hashOfConfig":"370"},{"size":1101,"mtime":1615450020310,"results":"512","hashOfConfig":"370"},{"size":5245,"mtime":1615450355700,"results":"513","hashOfConfig":"370"},{"size":706,"mtime":1615450355704,"results":"514","hashOfConfig":"370"},{"size":11756,"mtime":1617216639393,"results":"515","hashOfConfig":"370"},{"size":32420,"mtime":1617216639277,"results":"516","hashOfConfig":"370"},{"size":3642,"mtime":1617216638290,"results":"517","hashOfConfig":"370"},{"size":709,"mtime":1615450355710,"results":"518","hashOfConfig":"370"},{"size":360,"mtime":1615450356138,"results":"519","hashOfConfig":"370"},{"size":5779,"mtime":1617216639177,"results":"520","hashOfConfig":"370"},{"size":9695,"mtime":1615450356284,"results":"521","hashOfConfig":"370"},{"size":6448,"mtime":1615450356747,"results":"522","hashOfConfig":"370"},{"size":837,"mtime":1615450355570,"results":"523","hashOfConfig":"370"},{"size":491,"mtime":1615450355814,"results":"524","hashOfConfig":"370"},{"size":1338,"mtime":1615450355815,"results":"525","hashOfConfig":"370"},{"size":5831,"mtime":1615450356245,"results":"526","hashOfConfig":"370"},{"size":63795,"mtime":1617275566080,"results":"527","hashOfConfig":"370"},{"size":1156,"mtime":1617216639108,"results":"528","hashOfConfig":"370"},{"size":12549,"mtime":1617216638259,"results":"529","hashOfConfig":"370"},{"size":766,"mtime":1617216639277,"results":"530","hashOfConfig":"370"},{"size":6707,"mtime":1615450356748,"results":"531","hashOfConfig":"370"},{"size":5096,"mtime":1617216639208,"results":"532","hashOfConfig":"370"},{"size":3885,"mtime":1615450355672,"results":"533","hashOfConfig":"370"},{"size":8505,"mtime":1617216639108,"results":"534","hashOfConfig":"370"},{"size":770,"mtime":1615450356186,"results":"535","hashOfConfig":"370"},{"size":766,"mtime":1615450356196,"results":"536","hashOfConfig":"370"},{"size":6641,"mtime":1617216639092,"results":"537","hashOfConfig":"370"},{"size":1831,"mtime":1615450356185,"results":"538","hashOfConfig":"370"},{"size":5155,"mtime":1615450356464,"results":"539","hashOfConfig":"370"},{"size":11050,"mtime":1615450357639,"results":"540","hashOfConfig":"370"},{"size":47049,"mtime":1617216639261,"results":"541","hashOfConfig":"370"},{"size":8636,"mtime":1617216639261,"results":"542","hashOfConfig":"370"},{"size":1604,"mtime":1615450355506,"results":"543","hashOfConfig":"370"},{"size":815,"mtime":1615450357641,"results":"544","hashOfConfig":"370"},{"size":6120,"mtime":1615450356190,"results":"545","hashOfConfig":"370"},{"size":5811,"mtime":1617216638575,"results":"546","hashOfConfig":"370"},{"size":11051,"mtime":1617216638575,"results":"547","hashOfConfig":"370"},{"size":36460,"mtime":1615450357642,"results":"548","hashOfConfig":"370"},{"size":1996,"mtime":1615450357640,"results":"549","hashOfConfig":"370"},{"size":7789,"mtime":1615450356204,"results":"550","hashOfConfig":"370"},{"size":41375,"mtime":1617216639092,"results":"551","hashOfConfig":"370"},{"size":7295,"mtime":1615450356745,"results":"552","hashOfConfig":"370"},{"size":5859,"mtime":1615450356748,"results":"553","hashOfConfig":"370"},{"size":6457,"mtime":1617216639108,"results":"554","hashOfConfig":"370"},{"size":985,"mtime":1615450357206,"results":"555","hashOfConfig":"370"},{"size":33148,"mtime":1617216639239,"results":"556","hashOfConfig":"370"},{"size":558,"mtime":1615450355808,"results":"557","hashOfConfig":"370"},{"size":3268,"mtime":1617216638490,"results":"558","hashOfConfig":"370"},{"size":4341,"mtime":1592205340574,"results":"559","hashOfConfig":"370"},{"size":4880,"mtime":1615450355504,"results":"560","hashOfConfig":"370"},{"size":244381,"mtime":1617216639740,"results":"561","hashOfConfig":"370"},{"size":1359,"mtime":1615450356353,"results":"562","hashOfConfig":"370"},{"size":2769,"mtime":1615450355505,"results":"563","hashOfConfig":"370"},{"size":6465,"mtime":1591027350272,"results":"564","hashOfConfig":"370"},{"size":420612,"mtime":1617216639863,"results":"565","hashOfConfig":"370"},{"size":11196,"mtime":1617216638838,"results":"566","hashOfConfig":"370"},{"size":1577,"mtime":1615450356276,"results":"567","hashOfConfig":"370"},{"size":23141,"mtime":1617216638791,"results":"568","hashOfConfig":"370"},{"size":15724,"mtime":1615450356426,"results":"569","hashOfConfig":"370"},{"size":10263,"mtime":1615450356291,"results":"570","hashOfConfig":"370"},{"size":866,"mtime":1615454145236,"results":"571","hashOfConfig":"370"},{"size":6745,"mtime":1615450356277,"results":"572","hashOfConfig":"370"},{"size":7298,"mtime":1615450356428,"results":"573","hashOfConfig":"370"},{"size":8485,"mtime":1617275648188,"results":"574","hashOfConfig":"370"},{"size":2273,"mtime":1615450356285,"results":"575","hashOfConfig":"370"},{"size":1152,"mtime":1615450356350,"results":"576","hashOfConfig":"370"},{"size":6047,"mtime":1615450357686,"results":"577","hashOfConfig":"370"},{"size":6470,"mtime":1615450355493,"results":"578","hashOfConfig":"370"},{"size":5546,"mtime":1615450357738,"results":"579","hashOfConfig":"370"},{"size":4921,"mtime":1615450356243,"results":"580","hashOfConfig":"370"},{"size":9828,"mtime":1617216639177,"results":"581","hashOfConfig":"370"},{"size":1817,"mtime":1615450357672,"results":"582","hashOfConfig":"370"},{"size":9501,"mtime":1617216639108,"results":"583","hashOfConfig":"370"},{"size":7050,"mtime":1615450356822,"results":"584","hashOfConfig":"370"},{"size":4723,"mtime":1615450357621,"results":"585","hashOfConfig":"370"},{"size":32546,"mtime":1617216638791,"results":"586","hashOfConfig":"370"},{"size":1828,"mtime":1615450356205,"results":"587","hashOfConfig":"370"},{"size":2834,"mtime":1615450355506,"results":"588","hashOfConfig":"370"},{"size":560,"mtime":1615450357671,"results":"589","hashOfConfig":"370"},{"size":5587,"mtime":1617216639139,"results":"590","hashOfConfig":"370"},{"size":10214,"mtime":1615450357024,"results":"591","hashOfConfig":"370"},{"size":3026,"mtime":1615450355494,"results":"592","hashOfConfig":"370"},{"size":3848,"mtime":1615450357673,"results":"593","hashOfConfig":"370"},{"size":2884,"mtime":1615450357674,"results":"594","hashOfConfig":"370"},{"size":7798,"mtime":1615450355494,"results":"595","hashOfConfig":"370"},{"size":11103,"mtime":1615450357688,"results":"596","hashOfConfig":"370"},{"size":5942,"mtime":1615450357688,"results":"597","hashOfConfig":"370"},{"size":5399,"mtime":1615450357739,"results":"598","hashOfConfig":"370"},{"size":6190,"mtime":1615450357687,"results":"599","hashOfConfig":"370"},{"size":2853,"mtime":1615450357740,"results":"600","hashOfConfig":"370"},{"size":16685,"mtime":1617216638591,"results":"601","hashOfConfig":"370"},{"size":2457,"mtime":1615450357736,"results":"602","hashOfConfig":"370"},{"size":1972,"mtime":1615450357673,"results":"603","hashOfConfig":"370"},{"size":5958,"mtime":1615450356745,"results":"604","hashOfConfig":"370"},{"size":7142,"mtime":1615450356197,"results":"605","hashOfConfig":"370"},{"size":2668,"mtime":1617216639408,"results":"606","hashOfConfig":"370"},{"size":3601,"mtime":1615450357683,"results":"607","hashOfConfig":"370"},{"size":1199,"mtime":1615450357689,"results":"608","hashOfConfig":"370"},{"size":2346,"mtime":1617216639223,"results":"609","hashOfConfig":"370"},{"size":7545,"mtime":1617216639424,"results":"610","hashOfConfig":"370"},{"size":5273,"mtime":1615450356246,"results":"611","hashOfConfig":"370"},{"size":8106,"mtime":1617216638190,"results":"612","hashOfConfig":"370"},{"size":39419,"mtime":1617216639239,"results":"613","hashOfConfig":"370"},{"size":1879,"mtime":1615450355683,"results":"614","hashOfConfig":"370"},{"size":4557,"mtime":1615450355692,"results":"615","hashOfConfig":"370"},{"size":4913,"mtime":1615450356243,"results":"616","hashOfConfig":"370"},{"size":9201,"mtime":1617216638221,"results":"617","hashOfConfig":"370"},{"size":15045,"mtime":1617216638237,"results":"618","hashOfConfig":"370"},{"size":2276,"mtime":1615450355533,"results":"619","hashOfConfig":"370"},{"size":1366,"mtime":1615450355495,"results":"620","hashOfConfig":"370"},{"size":5069,"mtime":1617216638159,"results":"621","hashOfConfig":"370"},{"size":809,"mtime":1615450356287,"results":"622","hashOfConfig":"370"},{"size":36454,"mtime":1615450356290,"results":"623","hashOfConfig":"370"},{"size":2856,"mtime":1615450356407,"results":"624","hashOfConfig":"370"},{"size":1990,"mtime":1615450356286,"results":"625","hashOfConfig":"370"},{"size":2930,"mtime":1615450356426,"results":"626","hashOfConfig":"370"},{"size":35186,"mtime":1615450356288,"results":"627","hashOfConfig":"370"},{"size":41449,"mtime":1615450356289,"results":"628","hashOfConfig":"370"},{"size":2875,"mtime":1615450357607,"results":"629","hashOfConfig":"370"},{"size":7229,"mtime":1615450356407,"results":"630","hashOfConfig":"370"},{"size":2819,"mtime":1615450357026,"results":"631","hashOfConfig":"370"},{"size":71679,"mtime":1617216638822,"results":"632","hashOfConfig":"370"},{"size":10317,"mtime":1615450355516,"results":"633","hashOfConfig":"370"},{"size":28656,"mtime":1617216638190,"results":"634","hashOfConfig":"370"},{"size":5651,"mtime":1615450355590,"results":"635","hashOfConfig":"370"},{"size":7304,"mtime":1617216638237,"results":"636","hashOfConfig":"370"},{"size":3791,"mtime":1617216638221,"results":"637","hashOfConfig":"370"},{"size":5885,"mtime":1617216638237,"results":"638","hashOfConfig":"370"},{"size":7164,"mtime":1615450355534,"results":"639","hashOfConfig":"370"},{"size":6278,"mtime":1617216638237,"results":"640","hashOfConfig":"370"},{"size":738,"mtime":1615454012608,"results":"641","hashOfConfig":"370"},{"size":5165,"mtime":1615450356461,"results":"642","hashOfConfig":"370"},{"size":53096,"mtime":1617216638190,"results":"643","hashOfConfig":"370"},{"size":28266,"mtime":1617216638190,"results":"644","hashOfConfig":"370"},{"size":21752,"mtime":1617216638190,"results":"645","hashOfConfig":"370"},{"size":27945,"mtime":1617216638190,"results":"646","hashOfConfig":"370"},{"size":1784,"mtime":1615983426556,"results":"647","hashOfConfig":"370"},{"size":41448,"mtime":1617216639261,"results":"648","hashOfConfig":"370"},{"size":7640,"mtime":1615450356189,"results":"649","hashOfConfig":"370"},{"size":16920,"mtime":1615450356189,"results":"650","hashOfConfig":"370"},{"size":24640,"mtime":1617216640179,"results":"651","hashOfConfig":"370"},{"size":3076,"mtime":1617130419644,"results":"652","hashOfConfig":"370"},{"size":21635,"mtime":1617275648235,"results":"653","hashOfConfig":"370"},{"size":18123,"mtime":1617276017230,"results":"654","hashOfConfig":"370"},{"size":5619,"mtime":1615450357888,"results":"655","hashOfConfig":"370"},{"size":2239,"mtime":1617130419660,"results":"656","hashOfConfig":"370"},{"size":7616,"mtime":1617216640195,"results":"657","hashOfConfig":"370"},{"size":18280,"mtime":1617275377457,"results":"658","hashOfConfig":"370"},{"size":10119,"mtime":1617276017230,"results":"659","hashOfConfig":"370"},{"size":62573,"mtime":1617275377557,"results":"660","hashOfConfig":"370"},{"size":18407,"mtime":1617275377658,"results":"661","hashOfConfig":"370"},{"size":24039,"mtime":1617216640226,"results":"662","hashOfConfig":"370"},{"size":42084,"mtime":1617275377288,"results":"663","hashOfConfig":"370"},{"size":9898,"mtime":1617275377257,"results":"664","hashOfConfig":"370"},{"size":19445,"mtime":1617276017230,"results":"665","hashOfConfig":"370"},{"size":13871,"mtime":1617276017230,"results":"666","hashOfConfig":"370"},{"size":15329,"mtime":1617275648219,"results":"667","hashOfConfig":"370"},{"size":11972,"mtime":1617276017230,"results":"668","hashOfConfig":"370"},{"size":1599,"mtime":1617275648141,"results":"669","hashOfConfig":"370"},{"size":586,"mtime":1617216640342,"results":"670","hashOfConfig":"370"},{"size":45148,"mtime":1617216638860,"results":"671","hashOfConfig":"370"},{"size":4670,"mtime":1617276017228,"results":"672","hashOfConfig":"370"},{"size":1577,"mtime":1617276017228,"results":"673","hashOfConfig":"370"},{"size":758,"mtime":1617216638707,"results":"674","hashOfConfig":"370"},{"size":1386,"mtime":1617275424223,"results":"675","hashOfConfig":"370"},{"size":25353,"mtime":1617276017225,"results":"676","hashOfConfig":"370"},{"size":1991,"mtime":1617275424170,"results":"677","hashOfConfig":"370"},{"size":1151,"mtime":1617275424192,"results":"678","hashOfConfig":"370"},{"size":3406,"mtime":1617276017223,"results":"679","hashOfConfig":"370"},{"size":4048,"mtime":1617275424207,"results":"680","hashOfConfig":"370"},{"size":2767,"mtime":1617275427800,"results":"681","hashOfConfig":"370"},{"size":2163,"mtime":1617275428280,"results":"682","hashOfConfig":"370"},{"size":7323,"mtime":1617275428449,"results":"683","hashOfConfig":"370"},{"size":5667,"mtime":1617276017223,"results":"684","hashOfConfig":"370"},{"size":15383,"mtime":1617276017226,"results":"685","hashOfConfig":"370"},{"size":8829,"mtime":1617275428433,"results":"686","hashOfConfig":"370"},{"size":11783,"mtime":1617275428402,"results":"687","hashOfConfig":"370"},{"size":17774,"mtime":1617276017229,"results":"688","hashOfConfig":"370"},{"size":3718,"mtime":1617275428549,"results":"689","hashOfConfig":"370"},{"size":11680,"mtime":1617275428233,"results":"690","hashOfConfig":"370"},{"size":12044,"mtime":1617275428179,"results":"691","hashOfConfig":"370"},{"size":13089,"mtime":1617275428217,"results":"692","hashOfConfig":"370"},{"size":4243,"mtime":1617275427785,"results":"693","hashOfConfig":"370"},{"size":6514,"mtime":1617276017226,"results":"694","hashOfConfig":"370"},{"size":10971,"mtime":1617275428063,"results":"695","hashOfConfig":"370"},{"size":31227,"mtime":1615450356280,"results":"696","hashOfConfig":"370"},{"size":11205,"mtime":1617275428086,"results":"697","hashOfConfig":"370"},{"size":1101,"mtime":1615450357075,"results":"698","hashOfConfig":"370"},{"size":11171,"mtime":1617275428101,"results":"699","hashOfConfig":"370"},{"size":17443,"mtime":1617275427847,"results":"700","hashOfConfig":"370"},{"size":11681,"mtime":1617275427763,"results":"701","hashOfConfig":"370"},{"size":8946,"mtime":1617276017225,"results":"702","hashOfConfig":"370"},{"size":1851,"mtime":1617275428017,"results":"703","hashOfConfig":"370"},{"size":5180,"mtime":1617216638058,"results":"704","hashOfConfig":"370"},{"size":12306,"mtime":1617216638722,"results":"705","hashOfConfig":"370"},{"size":3515,"mtime":1617275427963,"results":"706","hashOfConfig":"370"},{"size":4466,"mtime":1615450355656,"results":"707","hashOfConfig":"370"},{"size":2542,"mtime":1617276017226,"results":"708","hashOfConfig":"370"},{"size":3751,"mtime":1617275428386,"results":"709","hashOfConfig":"370"},{"size":8813,"mtime":1617276017223,"results":"710","hashOfConfig":"370"},{"size":2564,"mtime":1617275428132,"results":"711","hashOfConfig":"370"},{"size":2141,"mtime":1617275427985,"results":"712","hashOfConfig":"370"},{"size":12622,"mtime":1617275377241,"results":"713","hashOfConfig":"370"},{"size":18918,"mtime":1617276017230,"results":"714","hashOfConfig":"370"},{"size":2650,"mtime":1617216640094,"results":"715","hashOfConfig":"370"},{"size":13373,"mtime":1617275377473,"results":"716","hashOfConfig":"370"},{"size":14459,"mtime":1617275377219,"results":"717","hashOfConfig":"370"},{"size":2593,"mtime":1617275377388,"results":"718","hashOfConfig":"370"},{"size":28045,"mtime":1617276017229,"results":"719","hashOfConfig":"370"},{"size":2596,"mtime":1617275377488,"results":"720","hashOfConfig":"370"},{"size":13084,"mtime":1617275377172,"results":"721","hashOfConfig":"370"},{"size":2584,"mtime":1617275377520,"results":"722","hashOfConfig":"370"},{"size":2581,"mtime":1617275377542,"results":"723","hashOfConfig":"370"},{"size":2650,"mtime":1617216640126,"results":"724","hashOfConfig":"370"},{"size":2609,"mtime":1617275377635,"results":"725","hashOfConfig":"370"},{"size":12206,"mtime":1617275377357,"results":"726","hashOfConfig":"370"},{"size":10993,"mtime":1617275424123,"results":"727","hashOfConfig":"370"},{"size":11367,"mtime":1617275424107,"results":"728","hashOfConfig":"370"},{"size":25553,"mtime":1617276017208,"results":"729","hashOfConfig":"370"},{"size":13101,"mtime":1617276017208,"results":"730","hashOfConfig":"370"},{"size":19025,"mtime":1617275424054,"results":"731","hashOfConfig":"370"},{"size":2206,"mtime":1617275424154,"results":"732","hashOfConfig":"370"},{"size":2677,"mtime":1617275424038,"results":"733","hashOfConfig":"370"},{"size":1774,"mtime":1617275428001,"results":"734","hashOfConfig":"370"},{"size":2347,"mtime":1617275427731,"results":"735","hashOfConfig":"370"},{"size":24992,"mtime":1617275648219,"results":"736","hashOfConfig":"370"},{"size":2355,"mtime":1617276017208,"results":"737","hashOfConfig":"370"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n7eb6r",{"filePath":"740","messages":"741","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"744","messages":"745","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"746","messages":"747","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"750","messages":"751","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"752","messages":"753","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"754","messages":"755","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"756","messages":"757","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"758","messages":"759","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"760","messages":"761","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"762","messages":"763","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"764","messages":"765","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"770","messages":"771","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"772","messages":"773","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"774","messages":"775","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"776","messages":"777","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"778","messages":"779","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"780","messages":"781","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"782","messages":"783","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"784","messages":"785","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"786","messages":"787","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"790","messages":"791","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"794","messages":"795","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"796","messages":"797","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},{"filePath":"798","messages":"799","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"800","messages":"801","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"802","messages":"803","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"804","messages":"805","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"806","messages":"807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"808","messages":"809","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"810","messages":"811","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"814"},{"filePath":"815","messages":"816","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"817","messages":"818","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"819","messages":"820","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"821","messages":"822","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"823","messages":"824","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"825","messages":"826","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"827","messages":"828","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"829","messages":"830","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"831","messages":"832","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"833","messages":"834","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"835","messages":"836","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},{"filePath":"837","messages":"838","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"839","messages":"840","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"841","messages":"842","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"843","messages":"844","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"845","messages":"846","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"847","messages":"848","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"849","messages":"850","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"851","messages":"852","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"853","messages":"854","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"855","messages":"856","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"857","messages":"858","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"859","messages":"860","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"861","messages":"862","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"863","messages":"864","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"865","messages":"866","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"867","messages":"868","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"869","messages":"870","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"871","messages":"872","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"873","messages":"874","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"875","messages":"876","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"877","messages":"878","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"879","messages":"880","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"881","messages":"882","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"883","messages":"884","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"885","messages":"886","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"887","messages":"888","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"814"},{"filePath":"889","messages":"890","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"891","messages":"892","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"893","messages":"894","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"895","messages":"896","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"897","messages":"898","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"899","messages":"900","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"901","messages":"902","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"903","messages":"904","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"905","messages":"906","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"907","messages":"908","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"909","messages":"910","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"911","messages":"912","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"913","messages":"914","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"915","usedDeprecatedRules":"814"},{"filePath":"916","messages":"917","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"814"},{"filePath":"918","messages":"919","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"920","messages":"921","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"922","messages":"923","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"924","messages":"925","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"926","usedDeprecatedRules":"814"},{"filePath":"927","messages":"928","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"929","messages":"930","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"931","messages":"932","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"933","messages":"934","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"935","messages":"936","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"937","messages":"938","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"939","messages":"940","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"941","messages":"942","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"943","messages":"944","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"945","messages":"946","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"947","messages":"948","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"949","messages":"950","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"951","messages":"952","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"953","messages":"954","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"955","messages":"956","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"957","messages":"958","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"959","messages":"960","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"961","messages":"962","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"963","messages":"964","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"965","messages":"966","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"967","messages":"968","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"969","messages":"970","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"971","messages":"972","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"973","messages":"974","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"975","messages":"976","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"977","messages":"978","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"979","messages":"980","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"981","messages":"982","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"983","messages":"984","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"985","messages":"986","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"987","messages":"988","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"989","messages":"990","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"991","messages":"992","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"993","messages":"994","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"995","messages":"996","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"997","messages":"998","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"999","messages":"1000","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1001","messages":"1002","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1003","messages":"1004","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1005","messages":"1006","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1007","messages":"1008","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1009","messages":"1010","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1011","messages":"1012","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1013","messages":"1014","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1015","messages":"1016","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1017","messages":"1018","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1019","messages":"1020","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1021","messages":"1022","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1023","messages":"1024","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1025","messages":"1026","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1027","messages":"1028","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1029","messages":"1030","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1031","messages":"1032","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1033","messages":"1034","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1035","messages":"1036","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1037","messages":"1038","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1039","messages":"1040","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1041","messages":"1042","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1043","messages":"1044","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1045","messages":"1046","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1047","messages":"1048","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1049","messages":"1050","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1051","messages":"1052","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"1053","messages":"1054","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1055","messages":"1056","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":5,"source":null},{"filePath":"1057","messages":"1058","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1059","messages":"1060","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1061","messages":"1062","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1063","messages":"1064","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1065","messages":"1066","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1067","messages":"1068","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1069","messages":"1070","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1071","messages":"1072","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1073","messages":"1074","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1075","messages":"1076","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1077","messages":"1078","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1079","messages":"1080","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1081","messages":"1082","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1083","messages":"1084","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1085","messages":"1086","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1087","messages":"1088","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1089","messages":"1090","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1091","messages":"1092","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1093","messages":"1094","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1095","messages":"1096","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1097","messages":"1098","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1099","messages":"1100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1101","messages":"1102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1103","messages":"1104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1105","messages":"1106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1107","messages":"1108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1109","messages":"1110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1111","messages":"1112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1113","messages":"1114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1115","messages":"1116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1117","messages":"1118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1119","messages":"1120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1121","messages":"1122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1123","messages":"1124","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1125","messages":"1126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1127","messages":"1128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1129","messages":"1130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1131","messages":"1132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1133","messages":"1134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1135","messages":"1136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1137","messages":"1138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1139","messages":"1140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1141","messages":"1142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1143","messages":"1144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1145","messages":"1146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1147","messages":"1148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1149","messages":"1150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1151","usedDeprecatedRules":"814"},{"filePath":"1152","messages":"1153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1154","messages":"1155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1156","messages":"1157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1158","messages":"1159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1160","messages":"1161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1162","messages":"1163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1164","messages":"1165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1166","messages":"1167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1168","messages":"1169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1170","messages":"1171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1172","messages":"1173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1174","messages":"1175","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1176","messages":"1177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1178","messages":"1179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1180","messages":"1181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1182","messages":"1183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1184","messages":"1185","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1186","messages":"1187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1188","messages":"1189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1190","messages":"1191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1192","messages":"1193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1194","messages":"1195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1196","messages":"1197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1198","messages":"1199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"1200","messages":"1201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1202","messages":"1203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1204","messages":"1205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1206","messages":"1207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1208","messages":"1209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1210","messages":"1211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1212","messages":"1213","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1214","messages":"1215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1216","messages":"1217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1218","messages":"1219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1220","messages":"1221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1222","messages":"1223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1224","messages":"1225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1226","messages":"1227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1228","messages":"1229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1230","messages":"1231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1232","messages":"1233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1234","messages":"1235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1236","messages":"1237","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1238","messages":"1239","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1240","messages":"1241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1242","messages":"1243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1244","messages":"1245","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"1246","messages":"1247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1248","messages":"1249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1250","messages":"1251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1252","messages":"1253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1254","messages":"1255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1256","messages":"1257","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1258","messages":"1259","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1260","messages":"1261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1262","messages":"1263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1264","messages":"1265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1266","messages":"1267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1268","messages":"1269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1270","messages":"1271","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1272","messages":"1273","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1274","messages":"1275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1276","messages":"1277","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1278","messages":"1279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1280","messages":"1281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1282","messages":"1283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1284","messages":"1285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1286","messages":"1287","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1288","messages":"1289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1290","messages":"1291","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1292","messages":"1293","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1294","messages":"1295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1296","messages":"1297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1298","messages":"1299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1300","messages":"1301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1302","messages":"1303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1304","messages":"1305","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1306","messages":"1307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1308","messages":"1309","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1310","messages":"1311","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1312","messages":"1313","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1314","messages":"1315","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1316","messages":"1317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1318","messages":"1319","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1320","usedDeprecatedRules":"814"},{"filePath":"1321","messages":"1322","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1323","messages":"1324","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1325","usedDeprecatedRules":"814"},{"filePath":"1326","messages":"1327","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1328","usedDeprecatedRules":"814"},{"filePath":"1329","messages":"1330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1331","messages":"1332","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1333","usedDeprecatedRules":"814"},{"filePath":"1334","messages":"1335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"814"},{"filePath":"1336","messages":"1337","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1338","messages":"1339","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1340","messages":"1341","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1342","messages":"1343","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1344","messages":"1345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"814"},{"filePath":"1346","messages":"1347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1348","messages":"1349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1350","messages":"1351","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1352","messages":"1353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1354","messages":"1355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1356","messages":"1357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1358","usedDeprecatedRules":"814"},{"filePath":"1359","messages":"1360","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1361","messages":"1362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"814"},{"filePath":"1363","messages":"1364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"814"},{"filePath":"1365","messages":"1366","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1367","messages":"1368","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1369","usedDeprecatedRules":"814"},{"filePath":"1370","messages":"1371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"814"},{"filePath":"1372","messages":"1373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1374","usedDeprecatedRules":"814"},{"filePath":"1375","messages":"1376","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1377","usedDeprecatedRules":"814"},{"filePath":"1378","messages":"1379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1380","messages":"1381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1382","messages":"1383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1384","usedDeprecatedRules":"814"},{"filePath":"1385","messages":"1386","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1387","usedDeprecatedRules":"814"},{"filePath":"1388","messages":"1389","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1390","messages":"1391","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1392","usedDeprecatedRules":"814"},{"filePath":"1393","messages":"1394","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1395","usedDeprecatedRules":"814"},{"filePath":"1396","messages":"1397","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1398","usedDeprecatedRules":"814"},{"filePath":"1399","messages":"1400","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1401","usedDeprecatedRules":"814"},{"filePath":"1402","messages":"1403","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1404","usedDeprecatedRules":"814"},{"filePath":"1405","messages":"1406","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1407","messages":"1408","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1409","usedDeprecatedRules":"814"},{"filePath":"1410","messages":"1411","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1412","messages":"1413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"814"},{"filePath":"1414","messages":"1415","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1416","messages":"1417","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1418","usedDeprecatedRules":"814"},{"filePath":"1419","messages":"1420","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1421","usedDeprecatedRules":"814"},{"filePath":"1422","messages":"1423","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1424","usedDeprecatedRules":"814"},{"filePath":"1425","messages":"1426","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1427","messages":"1428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1429","usedDeprecatedRules":"814"},{"filePath":"1430","messages":"1431","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1432","messages":"1433","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1434","messages":"1435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"814"},{"filePath":"1436","messages":"1437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1438","messages":"1439","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1440","messages":"1441","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1442","usedDeprecatedRules":"814"},{"filePath":"1443","messages":"1444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1445","messages":"1446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"814"},{"filePath":"1447","messages":"1448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"814"},{"filePath":"1449","messages":"1450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"814"},{"filePath":"1451","messages":"1452","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1453","messages":"1454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1455","messages":"1456","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1457","usedDeprecatedRules":"814"},{"filePath":"1458","messages":"1459","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1460","usedDeprecatedRules":"814"},{"filePath":"1461","messages":"1462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"814"},{"filePath":"1463","messages":"1464","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1465","messages":"1466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"814"},{"filePath":"1467","messages":"1468","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1469","usedDeprecatedRules":"814"},{"filePath":"1470","messages":"1471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"814"},{"filePath":"1472","messages":"1473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"814"},{"filePath":"1474","messages":"1475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1476","messages":"1477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"814"},{"filePath":"1478","messages":"1479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"814"},{"filePath":"1480","messages":"1481","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1482","usedDeprecatedRules":"814"},{"filePath":"1483","messages":"1484","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1485","usedDeprecatedRules":"814"},{"filePath":"1486","messages":"1487","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1488","messages":"1489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1490","messages":"1491","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1492","usedDeprecatedRules":"814"},{"filePath":"1493","messages":"1494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"814"},{"filePath":"1495","messages":"1496","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1497","usedDeprecatedRules":"814"},{"filePath":"1498","messages":"1499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"814"},{"filePath":"1500","messages":"1501","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1502","usedDeprecatedRules":"814"},{"filePath":"1503","messages":"1504","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1505","messages":"1506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Amit\\Projects\\booking-engine\\src\\index.js",[],"E:\\Amit\\Projects\\booking-engine\\src\\App.js",["1507","1508"],"E:\\Amit\\Projects\\booking-engine\\src\\serviceWorker.js",[],"E:\\Amit\\Projects\\booking-engine\\src\\services\\messagelistener.js",["1509","1510"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\home.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\results.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\details.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\booking-status.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\bookings.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\cart.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\edit-profile.jsx",["1511","1512","1513","1514"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\payment.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\splash.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\view-booking.jsx",["1515"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\balance.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\voucher-invoice.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\agent-login.jsx",["1516","1517","1518","1519","1520","1521","1522","1523","1524","1525","1526","1527","1528"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\issue-documents.jsx",["1529"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\profile.jsx",["1530"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\signup.jsx",["1531","1532"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\add-cotraveler.jsx",["1533"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\EWalletStatement.jsx",["1534","1535","1536","1537"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\notfound.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\quotation.jsx",["1538","1539","1540","1541"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\dashboard.jsx",["1542"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\failed-bookings.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\add-customer.jsx",["1543"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\manage-customers.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\offline-bookings.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\baggage-info.jsx",["1544","1545","1546","1547"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\quotation-list.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\edit-cotraveler.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\itinerary-email-view.jsx",["1548","1549","1550"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\co-travelers.jsx",["1551","1552","1553","1554","1555"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\footer.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\umrah-package.jsx",["1556","1557","1558","1559","1560","1561","1562"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\login.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\header.jsx",[],["1563","1564"],"E:\\Amit\\Projects\\booking-engine\\src\\base\\environment.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\services\\requester.jsx",["1565","1566"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\cart-icon.jsx",["1567","1568","1569"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\MapComponent.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\base\\result-base.jsx",["1570","1571","1572","1573","1574","1575","1576","1577","1578","1579","1580","1581","1582","1583","1584","1585","1586","1587","1588","1589","1590","1591","1592"],"E:\\Amit\\Projects\\booking-engine\\src\\helpers\\amount.jsx",["1593","1594"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\call-center\\call-center.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\helpers\\translate.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\helpers\\date.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\helpers\\svg-icon.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\helpers\\global.jsx",["1595","1596","1597","1598"],"E:\\Amit\\Projects\\booking-engine\\src\\helpers\\action-modal.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\helpers\\model.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item-air-domestic.jsx",["1599","1600","1601","1602","1603","1604"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-total.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-views.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget.jsx",["1605","1606"],"E:\\Amit\\Projects\\booking-engine\\src\\base\\booking-base.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-total-domestic.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item-air.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item-air-domestic-selected.jsx",["1607"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-wishlist.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\sorting\\sorting.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-loading.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\image-slider.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-wishlist-email.jsx",["1608"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item.jsx",["1609","1610","1611","1612","1613","1614","1615","1616"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\pagination\\lazyloading.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item-withsupplierprice.jsx",["1617","1618","1619","1620","1621","1622","1623"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filters-domestic.jsx",["1624","1625","1626"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\pagination\\lazyloading-domestic.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\all-amenities.jsx",["1627"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\details-header.jsx",["1628","1629","1630","1631","1632","1633","1634"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filters.jsx",["1635"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\overview.jsx",["1636"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\details-loading.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\booking-management\\booking-pagination.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\schedule.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\booking-management\\booking-filters.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\sorting\\sorting-domestic.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\rooms.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\booking-management\\offline-booking-comments.jsx",["1637"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\booking-management\\failed-booking-popup.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\jump-menu.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\loading\\booking-loading-table.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-flight-details.jsx",["1638"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\amenities.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-list-filters.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\lang.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\login-menu.jsx",["1639"],"import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Login from \"./login\";\r\nimport { Trans } from \"../../helpers/translate\";\r\nimport SVGIcon from \"../../helpers/svg-icon\";\r\nimport Amount from \"../../helpers/amount\";\r\nimport * as Global from \"../../helpers/global\";\r\n\r\nclass LoginMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isUserMenu: false,\r\n      quotationMode: true,\r\n    };\r\n    this.nodeUserMenu = React.createRef();\r\n    this.nodeUserMenuLink = React.createRef();\r\n  }\r\n\r\n  handleUserMenu = (data) => {\r\n    if (data !== undefined)\r\n      this.setState({\r\n        isUserMenu: false,\r\n      });\r\n    else {\r\n      this.setState({\r\n        isUserMenu: !this.state.isUserMenu,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleClickOutside = (event) => {\r\n    if (this.nodeUserMenu.current !== null && this.nodeUserMenu.current.contains(event.target)) {\r\n      return true;\r\n    } else if (\r\n      this.nodeUserMenuLink.current !== null &&\r\n      this.nodeUserMenuLink.current.contains(event.target)\r\n    ) {\r\n      this.handleUserMenu();\r\n      return true;\r\n    } else {\r\n      this.handleUserMenu(false);\r\n    }\r\n    return true;\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  getAutoCancelBookingDetails = () => {\r\n    let { userInfo } = this.props;\r\n\r\n    if (\r\n      userInfo.todaysBooking === 0 &&\r\n      userInfo.pastBooking === 0 &&\r\n      userInfo.upcommingBooking === 0\r\n    ) {\r\n      return Trans(\"_autoCancel_NoRecordMessage\");\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          {userInfo.todaysBooking > 0 && (\r\n            <span className=\"\">\r\n              {Trans(\"_autoCancel_TodaysDateBookingCountMsg\").replace(\r\n                \"##TodaysDateBookingCount##\",\r\n                userInfo.todaysBooking\r\n              )}\r\n            </span>\r\n          )}\r\n          {userInfo.pastBooking > 0 && (\r\n            <span className=\"ml-2 \">\r\n              {Trans(\"_autoCancel_PastDateBookingCountMsg\").replace(\r\n                \"##PastDateBookingCount##\",\r\n                userInfo.pastBooking\r\n              )}\r\n            </span>\r\n          )}\r\n          {userInfo.upcommingBooking > 0 && (\r\n            <span className=\"ml-2 \">\r\n              {Trans(\"_autoCancel_UpcomingDateBookingCountMsg\").replace(\r\n                \"##UpcomingDateBookingCount##\",\r\n                userInfo.upcommingBooking\r\n              )}\r\n            </span>\r\n          )}\r\n          <span className=\"ml-2 \">{Trans(\"_autoCancel_TotalBookingCountForAdminMsg\")}</span>\r\n        </Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { isLoginMenu, isLoggedIn, isLoginBox, userInfo } = this.props;\r\n    const portalType = Global.getEnvironmetKeyValue(\"portalType\");\r\n    const isB2C = portalType === \"B2C\";\r\n    const isB2B = portalType === \"B2B\";\r\n    const isAdmin = portalType === \"BOTH\";\r\n    const isOfflineBookingEnabled = Global.getEnvironmetKeyValue(\"isOfflineBookingEnabled\");\r\n    const isIssueDocumentEnabled = Global.getEnvironmetKeyValue(\"isIssueDocumentEnabled\");\r\n    const isFailTransactionEnabled = Global.getEnvironmetKeyValue(\"isFailTransactionEnabled\");\r\n    const isLedgerBalanceEnabled = Global.getEnvironmetKeyValue(\"isLedgerBalanceEnabled\");\r\n\r\n    const isShowEWalletStatement = Global.getEnvironmetKeyValue(\"isShowEWalletStatement\");\r\n\r\n    const isCustomerManagementEnabled = Global.getEnvironmetKeyValue(\"isCustomerManagementEnabled\");\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {/* {isLoggedIn && isOfflineBookingEnabled && (\r\n          <div\r\n            className=\"mr-1 mb-1 shadow-center btn btn-secondary\"\r\n            style={{\r\n              position: \"fixed\",\r\n              left: \"20px\",\r\n              bottom: \"15px\",\r\n              zIndex: \"1000\",\r\n              width: \"300px\",\r\n            }}\r\n          >\r\n            <marquee>\r\n              <div className=\"\">{this.getAutoCancelBookingDetails()}</div>\r\n            </marquee>\r\n          </div>\r\n        )} */}\r\n\r\n        {isLoginMenu && localStorage.getItem(\"ssotoken\") === null && (\r\n          <div className=\"navbar pull-right p-0 pr-3\">\r\n            {this.state.quotationMode && (isB2B || isAdmin) && isLoggedIn && (\r\n              <a\r\n                className=\"btn btn-link p-0 m-0 mr-3 text-secondary\"\r\n                href=\"/#/aboutus\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                About Us\r\n              </a>\r\n            )}\r\n            <a\r\n              className=\"btn btn-sm btn-outline-primary btn-tourwiz-feedback\"\r\n              href=\"https://forms.gle/74tH7Sz9nvTmG1Ea6\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Feedback\r\n            </a>\r\n\r\n            {isLoggedIn ? (\r\n              <ul className=\"row list-unstyled p-0 m-0\">\r\n                {this.state.quotationMode && (isB2B || isAdmin) && (\r\n                  <li className=\"ml-3\">\r\n                    <Link\r\n                      to=\"/\"\r\n                      className=\"btn btn-sm m-0 btn-outline-primary d-flex dashboard-btn\"\r\n                    >\r\n                      <SVGIcon\r\n                        name=\"list-ul\"\r\n                        className=\"mr-2 d-flex \"\r\n                        width=\"20\"\r\n                        height=\"20\"\r\n                      ></SVGIcon>\r\n                      {Trans(\"_dashboard\")}\r\n                    </Link>\r\n                  </li>\r\n                )}\r\n\r\n                <li className=\"ml-3\">\r\n                  <button\r\n                    className=\"btn btn-link p-0 m-0 text-secondary\"\r\n                    ref={this.nodeUserMenuLink}\r\n                  >\r\n                    <SVGIcon\r\n                      name=\"user-circle\"\r\n                      className=\"align-text-top mr-2\"\r\n                      type=\"fill\"\r\n                      width=\"20\"\r\n                      height=\"20\"\r\n                    ></SVGIcon>\r\n                    {isB2C === true && userInfo.firstName !== \"\" && userInfo.lastName !== \"\"\r\n                      ? userInfo.firstName + \" \" + userInfo.lastName\r\n                      : userInfo.userDisplayName}\r\n                  </button>\r\n                  {this.state.isUserMenu && (\r\n                    <ul\r\n                      className=\"login-menu list-unstyled position-absolute p-3 m-0 border bg-white shadow\"\r\n                      ref={this.nodeUserMenu}\r\n                      style={\r\n                        isB2C\r\n                          ? { minWidth: \"200px\" }\r\n                          : {\r\n                              minWidth: \"200px\",\r\n                              maxWidth: \"250px\",\r\n                              right: \"0px\",\r\n                            }\r\n                      }\r\n                    >\r\n                      {isB2C && (\r\n                        <li className=\"pb-2 mb-2 border-bottom\">\r\n                          <Link\r\n                            onClick={() => this.handleUserMenu()}\r\n                            to=\"/Profile\"\r\n                            className=\"btn btn-link p-0 m-0 text-secondary\"\r\n                          >\r\n                            {Trans(\"_myProfile\")}\r\n                          </Link>\r\n                        </li>\r\n                      )}\r\n\r\n                      {this.state.quotationMode && (isB2B || isAdmin) && (\r\n                        <li className=\"pb-2 mb-2 border-bottom\">\r\n                          <Link\r\n                            onClick={() => this.handleUserMenu()}\r\n                            to=\"/\"\r\n                            className=\"btn btn-link p-0 m-0 text-secondary\"\r\n                          >\r\n                            {Trans(\"_dashboard\")}\r\n                          </Link>\r\n                        </li>\r\n                      )}\r\n\r\n                      {this.state.quotationMode && (isB2B || isAdmin) && (\r\n                        <li className=\"pb-2 mb-2 border-bottom\">\r\n                          <Link\r\n                            onClick={() => this.handleUserMenu()}\r\n                            to=\"/Inquiry\"\r\n                            className=\"btn btn-link p-0 m-0 text-secondary\"\r\n                          >\r\n                            {Trans(\"Create Inquiry\")}\r\n                          </Link>\r\n                        </li>\r\n                      )}\r\n\r\n                      {this.state.quotationMode && (isB2B || isAdmin) && (\r\n                        <li className=\"pb-2 mb-2 border-bottom\">\r\n                          <Link\r\n                            onClick={() => this.handleUserMenu()}\r\n                            to=\"/InquiryList\"\r\n                            className=\"btn btn-link p-0 m-0 text-secondary\"\r\n                          >\r\n                            {Trans(\"Manage Inquiries\")}s\r\n                          </Link>\r\n                        </li>\r\n                      )}\r\n\r\n                      {this.state.quotationMode && (isB2B || isAdmin) && (\r\n                        <li className=\"pb-2 mb-2 border-bottom\">\r\n                          <Link\r\n                            onClick={() => this.handleUserMenu()}\r\n                            to=\"/Quotation/Create\"\r\n                            className=\"btn btn-link p-0 m-0 text-secondary\"\r\n                          >\r\n                            {Trans(\"_createQuotation\")}\r\n                          </Link>\r\n                        </li>\r\n                      )}\r\n\r\n                      {this.state.quotationMode && (isB2B || isAdmin) && (\r\n                        <li className=\"pb-2 mb-2 border-bottom\">\r\n                          <Link\r\n                            onClick={() => this.handleUserMenu()}\r\n                            to=\"/QuotationList\"\r\n                            className=\"btn btn-link p-0 m-0 text-secondary\"\r\n                          >\r\n                            {Trans(\"_manageQuotation\")}s\r\n                          </Link>\r\n                        </li>\r\n                      )}\r\n\r\n                      {this.state.quotationMode && (isB2B || isAdmin) && (\r\n                        <li className=\"pb-2 mb-2 border-bottom\">\r\n                          <Link\r\n                            onClick={() => this.handleUserMenu()}\r\n                            to=\"/Itinerary/Create\"\r\n                            className=\"btn btn-link p-0 m-0 text-secondary\"\r\n                          >\r\n                            {Trans(\"Create Itinerary\")}\r\n                          </Link>\r\n                        </li>\r\n                      )}\r\n\r\n                      {this.state.quotationMode && (isB2B || isAdmin) && (\r\n                        <li className=\"pb-2 mb-2 border-bottom\">\r\n                          <Link\r\n                            onClick={() => this.handleUserMenu()}\r\n                            to=\"/ItineraryList\"\r\n                            className=\"btn btn-link p-0 m-0 text-secondary\"\r\n                          >\r\n                            {Trans(\"Manage Itineraries\")}\r\n                          </Link>\r\n                        </li>\r\n                      )}\r\n\r\n                      {this.state.quotationMode && isCustomerManagementEnabled && (\r\n                        <li className=\"pb-2 mb-2 border-bottom\">\r\n                          <Link\r\n                            onClick={() => this.handleUserMenu()}\r\n                            to=\"/Customer/list\"\r\n                            className=\"btn btn-link p-0 m-0 text-secondary\"\r\n                          >\r\n                            {Trans(\"_manageCustomers\")}\r\n                          </Link>\r\n                        </li>\r\n                      )}\r\n\r\n                      <li className=\"pb-2 mb-2 border-bottom\">\r\n                        <Link\r\n                          onClick={() => this.handleUserMenu()}\r\n                          to=\"/Bookings\"\r\n                          className=\"btn btn-link p-0 m-0 text-secondary\"\r\n                        >\r\n                          {Trans(\"_myBookings\")}\r\n                        </Link>\r\n                      </li>\r\n\r\n                      {!this.state.quotationMode && (isB2B || isAdmin) && (\r\n                        <React.Fragment>\r\n                          {!localStorage.getItem(\"isUmrahPortal\") && isLedgerBalanceEnabled && (\r\n                            <li className=\"pb-2 mb-2 border-bottom\">\r\n                              <Link\r\n                                onClick={() => this.handleUserMenu()}\r\n                                to=\"/Balance\"\r\n                                className=\"btn btn-link p-0 m-0 text-secondary\"\r\n                              >\r\n                                {Trans(\"_myBalance\")}\r\n                              </Link>\r\n                            </li>\r\n                          )}\r\n\r\n                          {isShowEWalletStatement && (\r\n                            <li className=\"pb-2 mb-2 border-bottom\">\r\n                              <Link\r\n                                onClick={() => this.handleUserMenu()}\r\n                                to=\"/EWalletStatement\"\r\n                                className=\"btn btn-link p-0 m-0 text-secondary\"\r\n                              >\r\n                                {Trans(\"_EWalletStatement\")}\r\n                              </Link>\r\n                            </li>\r\n                          )}\r\n\r\n                          {isFailTransactionEnabled && (\r\n                            <li className=\"pb-2 mb-2 border-bottom\">\r\n                              <Link\r\n                                onClick={() => this.handleUserMenu()}\r\n                                to=\"/FailedBookings\"\r\n                                className=\"btn btn-link p-0 m-0 text-secondary\"\r\n                              >\r\n                                {Trans(\"_failedBookings\")}\r\n                              </Link>\r\n                            </li>\r\n                          )}\r\n                          {isOfflineBookingEnabled && (\r\n                            <li className=\"pb-2 mb-2 border-bottom\">\r\n                              <Link\r\n                                onClick={() => this.handleUserMenu()}\r\n                                to=\"/OfflineBookings\"\r\n                                className=\"btn btn-link p-0 m-0 text-secondary\"\r\n                              >\r\n                                {Trans(\"_offlineBookings\")}\r\n                              </Link>\r\n                            </li>\r\n                          )}\r\n                          {isIssueDocumentEnabled && (\r\n                            <li className=\"pb-2 mb-2 border-bottom\">\r\n                              <Link\r\n                                onClick={() => this.handleUserMenu()}\r\n                                to=\"/IssueDocuments\"\r\n                                className=\"btn btn-link p-0 m-0 text-secondary\"\r\n                              >\r\n                                {Trans(\"_issueDocuments\")}\r\n                              </Link>\r\n                            </li>\r\n                          )}\r\n                          {isCustomerManagementEnabled && (\r\n                            <li className=\"pb-2 mb-2 border-bottom\">\r\n                              <Link\r\n                                onClick={() => this.handleUserMenu()}\r\n                                to=\"/Customer/list\"\r\n                                className=\"btn btn-link p-0 m-0 text-secondary\"\r\n                              >\r\n                                {Trans(\"_manageCustomers\")}\r\n                              </Link>\r\n                            </li>\r\n                          )}\r\n                        </React.Fragment>\r\n                      )}\r\n\r\n                      {isB2C && (\r\n                        <li className=\"pb-2 mb-2 border-bottom\">\r\n                          <Link\r\n                            onClick={() => this.handleUserMenu()}\r\n                            to=\"/CoTraveller/list\"\r\n                            className=\"btn btn-link p-0 m-0 text-secondary\"\r\n                          >\r\n                            {Trans(\"_myCoTravelers\")}\r\n                          </Link>\r\n                        </li>\r\n                      )}\r\n\r\n                      {isB2C && (\r\n                        <li>\r\n                          <Link\r\n                            onClick={() => this.props.handleLogOut()}\r\n                            to=\"/\"\r\n                            className=\"btn btn-link p-0 m-0 text-secondary\"\r\n                          >\r\n                            {Trans(\"_signOut\")}\r\n                          </Link>\r\n                        </li>\r\n                      )}\r\n                      {isB2C === false && (\r\n                        <li>\r\n                          <Link\r\n                            onClick={() => this.props.handleLogOut()}\r\n                            className=\"btn btn-link p-0 m-0 text-secondary\"\r\n                          >\r\n                            {Trans(\"_signOut\")}\r\n                          </Link>\r\n                        </li>\r\n                      )}\r\n                    </ul>\r\n                  )}\r\n                </li>\r\n                {userInfo.agentBalance !== undefined &&\r\n                  userInfo.agentBalance !== \"\" &&\r\n                  userInfo.agentBalance !== 0.0 &&\r\n                  !localStorage.getItem(\"isUmrahPortal\") && (\r\n                    <li className=\"ml-3 d-none\">\r\n                      <b className=\"ml-3 pt-1 d-flex\" title=\"Available balance\">\r\n                        <SVGIcon\r\n                          name=\"money-bill-alt\"\r\n                          className=\"align-sub mr-3\"\r\n                          type=\"fill\"\r\n                          width=\"24\"\r\n                          height=\"34\"\r\n                        ></SVGIcon>\r\n                        <Amount amount={userInfo.agentBalance} />\r\n                      </b>\r\n                    </li>\r\n                  )}\r\n              </ul>\r\n            ) : (\r\n              isB2C && (\r\n                <ul className=\"row list-unstyled p-0 m-0\">\r\n                  <li className=\"ml-3\">\r\n                    <button\r\n                      className=\"btn btn-link p-0 m-0 text-secondary\"\r\n                      onClick={() => this.props.handleLoginBox()}\r\n                      ref={(node) => {\r\n                        this.node = node;\r\n                      }}\r\n                    >\r\n                      <SVGIcon name=\"sign-in\" className=\"mr-2\" type=\"fill\" width=\"16\"></SVGIcon>\r\n                      {Trans(\"_signIn\")}\r\n                    </button>\r\n                    {isLoginBox && (\r\n                      <Login\r\n                        onLoginSuccess={this.props.handleLoginBox}\r\n                        onRef={this.nodea}\r\n                        parentref={this.node}\r\n                      />\r\n                    )}\r\n                  </li>\r\n                  <li className=\"ml-3\">\r\n                    <Link to=\"/Signup\" className=\"btn btn-link p-0 m-0 text-secondary\">\r\n                      <SVGIcon\r\n                        name=\"sign-up\"\r\n                        className=\"mr-2 align-middle\"\r\n                        type=\"fill\"\r\n                        width=\"16\"\r\n                      ></SVGIcon>\r\n                      {Trans(\"_signUp\")}\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              )\r\n            )}\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginMenu;\r\n","E:\\Amit\\Projects\\booking-engine\\src\\helpers\\dropdown-list.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-get-cart-item.jsx",["1640","1641"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-itinerary-email.jsx",["1642","1643","1644"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-email.jsx",["1645"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\form.jsx",["1646","1647","1648","1649","1650","1651"],"import React, { Component } from \"react\";\r\nimport TimeDuration from \"./form-time-duration\";\r\nimport Input from \"./form-input\";\r\nimport Textarea from \"./form-text-area\";\r\nimport Select from \"./form-select\";\r\nimport ContactInput from \"./form-contact\";\r\nimport DateInput from \"./form-date\";\r\nimport BirhtDateInput from \"./form-birthdate\";\r\nimport PassportExpiryDateInput from \"./form-passport-expiry\";\r\nimport PaymentDateInput from \"./form-payment-date\";\r\nimport moment from \"moment\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n    this.setState({ data });\r\n  };\r\n\r\n  onTimeFocus = (event) => {\r\n    if (event.target.value === \"HH:MM\") {\r\n      const data = { ...this.state.data };\r\n      data[event.target.name] = \"00:00\";\r\n      this.setState({ data });\r\n    }\r\n  };\r\n  onTimeBlur = (event) => {\r\n    if (event.target.value === \"00:00\") {\r\n      const data = { ...this.state.data };\r\n      data[event.target.name] = \"HH:MM\";\r\n      this.setState({ data });\r\n    }\r\n  };\r\n\r\n  onTimeChange = (event, value) => {\r\n    value = value.replace(/H/g, \"0\").replace(/M/g, \"0\");\r\n    const newTime = value.replace(/-/g, \":\");\r\n    const time = newTime.substr(0, 5);\r\n    const timeSeconds = newTime.substr(0, 5);\r\n    const timeSecondsCustomColon = newTime.substr(0, 5);\r\n\r\n    const data = { ...this.state.data };\r\n    data[event.target.name] =\r\n      value === \"00:00\" ? \"HH:MM\" : time.split(\":\")[0] + \"h \" + time.split(\":\")[1] + \"m\";\r\n    this.setState({ data });\r\n  };\r\n\r\n  handleDateChange = ({ currentTarget: input }, picker) => {\r\n    const data = { ...this.state.data };\r\n    data[input.firstChild.name] = picker.startDate.format(\"YYYY-MM-DD\");\r\n    this.setState({ data });\r\n  };\r\n\r\n  handleDateChangeEvent = ({ currentTarget: input }, picker) => {\r\n    const data = { ...this.state.data };\r\n\r\n    input.parentElement.classList.forEach((c) => {\r\n      if (c.startsWith(\"fromName-\")) {\r\n        data[c.replace(\"fromName-\", \"\")] = picker.startDate.format(\"YYYY-MM-DD\");\r\n      } else if (c.startsWith(\"toName-\")) {\r\n        data[c.replace(\"toName-\", \"\")] = picker.endDate.format(\"YYYY-MM-DD\");\r\n      }\r\n    });\r\n    this.setState({ data });\r\n  };\r\n\r\n  onPhoneNumberBlur = (status, value, country, number, id, event) => {\r\n    const data = { ...this.state.data };\r\n    data[event.currentTarget.name] = \"+\" + country.dialCode + \"-\" + value;\r\n    this.setState({ data });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button onClick={this.handleSubmit} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\", disable = false) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        label={label}\r\n        value={data[name]}\r\n        disabled={disable}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderTextarea(name, label, placeholder, type = \"textarea\", disable = false) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Textarea\r\n        type={type}\r\n        name={name}\r\n        label={label}\r\n        value={data[name]}\r\n        disabled={disable}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n        placeholder={placeholder}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options, dataProperty, displayProperty) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n        dataProperty={dataProperty}\r\n        displayProperty={displayProperty}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderBirthDate(name, label, typestring, conditiondate, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <BirhtDateInput\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleDateChange}\r\n        error={errors[name]}\r\n        typestring={typestring}\r\n        conditiondate={conditiondate}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderPassportExpiryDate(name, label, startdate, type = \"text\", stayIndays = 0) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <PassportExpiryDateInput\r\n        type={type === \"textTransfers\" ? \"text\" : \"text\"}\r\n        name={name}\r\n        value={\r\n          data[name] !== \"\" && data[name] !== \"0001-01-01\" && data[name] !== \"0001-01-01T00:00:00\"\r\n            ? data[name]\r\n            : \"\"\r\n        }\r\n        startdate={startdate}\r\n        label={label}\r\n        onChange={this.handleDateChange}\r\n        error={errors[name]}\r\n        istransfers={type === \"textTransfers\" ? \"true\" : \"false\"}\r\n        stayInDays={stayIndays}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderCurrentDate(name, label, startdate, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <PassportExpiryDateInput\r\n        type={type === \"textTransfers\" ? \"text\" : \"text\"}\r\n        name={name}\r\n        value={\r\n          data[name] !== \"\" && data[name] !== \"0001-01-01\" && data[name] !== \"0001-01-01T00:00:00\"\r\n            ? data[name]\r\n            : \"\"\r\n        }\r\n        startdate={startdate}\r\n        label={label}\r\n        onChange={this.handleDateChange}\r\n        error={errors[name]}\r\n        istransfers={type === \"textTransfers\" ? \"true\" : \"false\"}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderPaymentDate(name, label) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <PaymentDateInput\r\n        type={\"text\"}\r\n        name={name}\r\n        value={\r\n          data[name] !== \"\" && data[name] !== \"0001-01-01\" && data[name] !== \"0001-01-01T00:00:00\"\r\n            ? data[name]\r\n            : \"\"\r\n        }\r\n        label={label}\r\n        onChange={this.handleDateChange}\r\n        error={errors[name]}\r\n        istransfers={\"false\"}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderDate(\r\n    fromName,\r\n    toName,\r\n    fromLabel,\r\n    toLabel,\r\n    singledatepicker,\r\n    showdropdowns,\r\n    type = \"text\",\r\n    minDate\r\n  ) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <DateInput\r\n        type={type}\r\n        fromName={fromName}\r\n        toName={toName}\r\n        fromdate={data[fromName]}\r\n        todate={data[toName]}\r\n        mindate={new Date()}\r\n        maxdate={new Date()}\r\n        showdropdowns={showdropdowns}\r\n        singledatepicker={singledatepicker}\r\n        fromLabel={fromLabel}\r\n        toLabel={toLabel}\r\n        onChange={this.handleDateChangeEvent}\r\n        error={errors[fromName]}\r\n        conditiondate={\"conditiondate\"}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderContactInput(name, label, type = \"text\", isDefaultLoad) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <ContactInput\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        onPhoneNumberBlur={this.onPhoneNumberBlur}\r\n        error={errors[name]}\r\n        isDefaultLoad={isDefaultLoad}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderTimeDuration(name, label, type = \"time\", disable = false) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <TimeDuration\r\n        name={name}\r\n        label={label}\r\n        value={\r\n          data[name] === \"\"\r\n            ? \"HH:MM\"\r\n            : data[name].replace(\"h\", \"\").replace(\"m\", \"\").replace(\" \", \":\")\r\n        }\r\n        disabled={disable}\r\n        onChange={this.onTimeChange}\r\n        onFocus={this.onTimeFocus}\r\n        onBlur={this.onTimeBlur}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  validateFormData(data, type, options) {\r\n    if (typeof data === \"string\") data = data.trim();\r\n    let output = false;\r\n    switch (type) {\r\n      case \"require\":\r\n        output = data !== \"\";\r\n        break;\r\n      case \"require_date\":\r\n        output = data !== \"\" && data !== \"0001-01-01T00:00:00\";\r\n        break;\r\n      case \"require_phoneNumber\":\r\n        output = data.indexOf(\"-\") > -1 && data.split(\"-\")[1] !== \"\";\r\n        output = output || (data.indexOf(\"-\") > -1 && data !== \"\");\r\n        break;\r\n      case \"length\":\r\n        if (options.min !== undefined && options.max !== undefined)\r\n          output = data.length >= options.min && data.length <= options.max;\r\n        else if (options.min) output = data.length >= options.min;\r\n        else if (options.max) output = data.length <= options.max;\r\n        else output = false;\r\n        break;\r\n      case \"numeric\":\r\n        output = /^[0-9]$/g.test(data);\r\n        break;\r\n      case \"alpha_space\":\r\n        output = /^[a-zA-Z ]+$/g.test(data);\r\n        break;\r\n      case \"alpha_numeric\":\r\n        output = /^[a-zA-Z0-9]+$/g.test(data);\r\n        break;\r\n      case \"email\":\r\n        var regxEmail = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        output = regxEmail.test(data);\r\n        break;\r\n      case \"phonenumber\":\r\n        output = data.indexOf(\"+\") === data.lastIndexOf(\"+\");\r\n        output = output && data.indexOf(\"-\") === data.lastIndexOf(\"-\");\r\n        output =\r\n          output &&\r\n          data.replace(\"+\", \"\").replace(\"-\", \"\").length ===\r\n            data.replace(\"+\", \"\").replace(\"-\", \"\").replace(/\\D/g, \"\").length;\r\n        break;\r\n      case \"phonenumber_length\":\r\n        output =\r\n          data.indexOf(\"-\") > -1 &&\r\n          data.split(\"-\")[1].length >= 8 &&\r\n          data.split(\"-\")[1].length <= 14;\r\n        output = output || (data.indexOf(\"-\") === -1 && data.length >= 8 && data.length <= 14);\r\n        break;\r\n      case \"pastdate\":\r\n        let dateValue = moment(new Date(data));\r\n        let conditionDate =\r\n          options.conditionDate === undefined ? new Date() : new Date(options.conditionDate);\r\n        let maxDate = moment(conditionDate.setMonth(conditionDate.getMonth() + options.addMonth));\r\n        output = maxDate.isBefore(dateValue);\r\n        break;\r\n      default:\r\n        output = false;\r\n        break;\r\n    }\r\n    return output;\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\loader.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-results.jsx",["1652"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-info.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-details.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\FileBase64.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-itinerary-details.jsx",["1653","1654","1655","1656","1657"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-search.jsx",["1658"],"E:\\Amit\\Projects\\booking-engine\\src\\services\\requester-quotation.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\services\\requester-location-img.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-itinerary-add-offline.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-itinerary-details-item.jsx",["1659"],"E:\\Amit\\Projects\\booking-engine\\src\\helpers\\coming-soon.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-create.jsx",["1660","1661"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-cotraveler-info.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\iconMapping.js",[],"E:\\Amit\\Projects\\booking-engine\\src\\base\\cart-base.jsx",["1662","1663","1664","1665","1666","1667","1668","1669","1670","1671","1672","1673","1674","1675","1676","1677","1678","1679","1680","1681","1682","1683","1684","1685","1686","1687","1688"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\map.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\vehicle-rental-condition-content.jsx",["1689"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\book-to-confirm.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\room.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filter-starrating.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filter-select.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\helpers\\html-parser.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\star-rating.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filter-range.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filter-rangelist.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\trip-advisor-rating.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filter-rangelist-domestic.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filter-map-autocomplete.jsx",["1690","1691","1692","1693"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filter-checkbox-relative.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\booking-management\\failed-booking-popup-air.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filter-checkbox.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filter-checkbox-lookup.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-advertisement.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\booking-management\\failed-booking-popup-hotel.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filter-checkbox-domestic.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\filters\\filter-name.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\booking-management\\failed-booking-popup-activity.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\login.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-results-total.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-email-items-offline.jsx",["1694","1695","1696","1697","1698","1699"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\form-birthdate.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\form-passport-expiry.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-details-items.jsx",["1700","1701"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-email-items-fromlist.jsx",["1702","1703","1704","1705","1706","1707"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-results-loading.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\quotation-result-item-air.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget-umrah-package.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\form-text-area.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\form-select.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\form-date.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\form-input.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-results-item.jsx",["1708","1709","1710"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-add-offline.jsx",["1711","1712","1713","1714"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\form-contact.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\form-time-duration.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\stops.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\hotel-pax-widget-umrah.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-details-popup.jsx",["1715","1716"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item-air-fare-rule.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\hotel-special-request.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\pax-icons.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\simple-slideshow.jsx",["1717","1718"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\payment\\payment-mode.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-common.jsx",["1719","1720","1721","1722","1723","1724","1725","1726","1727"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item-air-tabs.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\date-range.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget-mode-umrah-package.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item-air-fare.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\hotel-room-widgets-umrah.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\amenities.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\umrah-package-quick-book.jsx",["1728","1729"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\itenary-details.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\rules-regulations.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\quotation-result-item-air-item.jsx",["1730","1731"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\inclusions-excusions.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item-air-details.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-details-popup.jsx",["1732","1733","1734"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget-mode-umrah-package-widget.jsx",["1735","1736"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget-mode-umrah-package-tabs.jsx",["1737","1738"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\call-center\\quotation-call-center.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-email-header.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\quotation-schedule.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\umrah-package-quickbook-groundservice.jsx",["1739","1740"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\umrah-package-quickbook-transportation.jsx",["1741"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-email-items.jsx",["1742","1743"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\umrah-package\\umrah-package-email-footer.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\umrah-package-rooms.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\quick-book.jsx",["1744","1745","1746","1747","1748"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item-air-fare-domestic.jsx",["1749"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item-air-item-domestic.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item-air-item.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget-mode-home.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget-mode-modify-widget.jsx",["1750","1751","1752","1753","1754"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\loader-call-center.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\map-popup-container.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\base\\call-center-base.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\call-center\\call-center-details.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\helpers\\language.jsx",["1755","1756","1757","1758","1759","1760","1761","1762","1763","1764","1765","1766","1767","1768","1769","1770","1771","1772","1773","1774","1775","1776","1777","1778","1779","1780","1781"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-list-loading.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\call-center\\call-center-selection.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\helpers\\baggage-info.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\helpers\\svg-icon-path.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-get-cart-item.jsx",["1782","1783","1784"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\itinerary-add-offline.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\itinerary-email.jsx",["1785","1786","1787"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-results-meta.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-email.jsx",["1788"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-search.jsx",["1789"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\itinerary-details.jsx",["1790","1791"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-results.jsx",["1792"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-create.jsx",["1793"],"import React, { Component } from \"react\";\r\nimport Form from \"../common/form\";\r\nimport * as Global from \"../../helpers/global\";\r\nimport { Trans } from \"../../helpers/translate\";\r\nimport CallCenter from \"../../components/call-center/quotation-call-center\";\r\nimport DateRangePicker from \"../common/date-range\";\r\nimport moment from \"moment\";\r\nimport SVGIcon from \"../../helpers/svg-icon\";\r\n\r\nclass QuotationCreate extends Form {\r\n  state = {\r\n    data: {\r\n      customerName: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      title: \"\",\r\n      duration: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      dates: \"\",\r\n      datesIsValid: \"valid\",\r\n      cutOfDays: 1,\r\n      stayInDays: 4,\r\n      createdDate: \"\",\r\n      status: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  validate = () => {\r\n    const errors = {};\r\n    const { data } = this.state;\r\n\r\n    if (!this.validateFormData(data.customerName, \"require\"))\r\n      errors.customerName = \"Customer Name required\";\r\n\r\n    if (!this.validateFormData(data.title, \"require\")) errors.title = \"Quotation title required\";\r\n\r\n    return Object.keys(errors).length === 0 ? null : errors;\r\n  };\r\n\r\n  handleCreate = () => {\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n    this.props.handleCreate(this.state.data);\r\n  };\r\n\r\n  setData = () => {\r\n    let defautData = { ...this.state.data };\r\n\r\n    let bookingForInfo = JSON.parse(sessionStorage.getItem(\"bookingForInfo\"));\r\n\r\n    defautData.title = this.props.title ? this.props.title : \"\";\r\n\r\n    defautData.customerName =\r\n      bookingForInfo && bookingForInfo.firstName\r\n        ? bookingForInfo.firstName\r\n        : this.props.customerName || \"\";\r\n\r\n    defautData.email =\r\n      bookingForInfo && bookingForInfo.contactInformation\r\n        ? bookingForInfo.contactInformation.email\r\n        : this.props.email || \"\";\r\n\r\n    defautData.phone =\r\n      bookingForInfo && bookingForInfo.contactInformation\r\n        ? bookingForInfo.contactInformation.phoneNumber\r\n        : this.props.phone || \"\";\r\n\r\n    defautData.startDate =\r\n      bookingForInfo && bookingForInfo.startDate\r\n        ? bookingForInfo.startDate\r\n        : this.props.startDate || new Date();\r\n\r\n    defautData.endDate =\r\n      bookingForInfo && bookingForInfo.endDate\r\n        ? bookingForInfo.endDate\r\n        : this.props.endDate || new Date(new Date().getTime() + 4 * 24 * 60 * 60 * 1000);\r\n\r\n    defautData.duration = this.GetDuration(defautData.startDate, defautData.endDate);\r\n\r\n    defautData.createdDate =\r\n      bookingForInfo && bookingForInfo.createdDate\r\n        ? bookingForInfo.createdDate\r\n        : this.props.createdDate || new Date();\r\n\r\n    defautData.status = this.props.status ? this.props.status : \"\";\r\n\r\n    this.setState({ data: defautData });\r\n  };\r\n\r\n  setDate = (startDate, endDate) => {\r\n    let newData = { ...this.state.data };\r\n    newData.dates = { checkInDate: startDate, checkOutDate: endDate };\r\n    newData.datesIsValid = \"valid\";\r\n    newData.startDate = startDate;\r\n    newData.endDate = endDate;\r\n    newData.duration = this.GetDuration(startDate, endDate);\r\n    this.setState({ data: newData });\r\n  };\r\n\r\n  GetDuration = (startDate, endDate) => {\r\n    var tmpStartDate = moment([\r\n      moment(startDate)._d.getFullYear(),\r\n      moment(startDate)._d.getMonth(),\r\n      moment(startDate)._d.getDate(),\r\n    ]);\r\n    var tmpEndDate = moment([\r\n      moment(endDate)._d.getFullYear(),\r\n      moment(endDate)._d.getMonth(),\r\n      moment(endDate)._d.getDate(),\r\n    ]);\r\n    var totaldaysduration = tmpEndDate.diff(tmpStartDate, \"days\") + 1;\r\n    return totaldaysduration;\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setData();\r\n  }\r\n\r\n  render() {\r\n    let isPersonateEnabled = Global.getEnvironmetKeyValue(\"isPersonateEnabled\");\r\n    const { type } = this.props;\r\n\r\n    return (\r\n      <div className=\"quotation-create border p-3 mt-3 bg-white shadow-sm mb-3 position-relative\">\r\n        <div className=\"row\">\r\n          {type === \"Quotation\" && (\r\n            <React.Fragment>\r\n              <div className=\"col-lg-3 position-relative\">\r\n                {this.renderInput(\"customerName\", Trans(\"_customerNamewithstar\"))}{\" \"}\r\n                {isPersonateEnabled && (\r\n                  <div className=\"position-absolute\" style={{ right: \"20px\", top: \"32px\" }}>\r\n                    <CallCenter />\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"col-lg-3\">\r\n                {this.renderInput(\"email\", Trans(\"_lblEmailWithStar\"))}\r\n              </div>\r\n\r\n              <div className=\"col-lg-2\">\r\n                {this.renderInput(\"phone\", Trans(\"_lblContactPhoneWithStar\"))}\r\n              </div>\r\n\r\n              <div className=\"col-lg-3\">\r\n                {this.renderInput(\"title\", Trans(\"_quotationTitleWithStar\"))}\r\n              </div>\r\n\r\n              <div className=\"col-lg-1\">\r\n                <div className=\"form-group phone\">\r\n                  <label>&nbsp;&nbsp;</label>\r\n                  <button onClick={this.handleCreate} className=\"btn btn-primary\">\r\n                    {this.props.customerName ? Trans(\"_update\") : Trans(\"_create\")}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n\r\n          {type === \"Itinerary\" && (\r\n            <React.Fragment>\r\n              <div className=\"col-lg-4 position-relative\">\r\n                {this.renderInput(\"customerName\", Trans(\"_customerNamewithstar\"))}{\" \"}\r\n                {isPersonateEnabled && (\r\n                  <div className=\"position-absolute\" style={{ right: \"20px\", top: \"32px\" }}>\r\n                    <CallCenter />\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"col-lg-4\">\r\n                {this.renderInput(\"email\", Trans(\"_lblEmailWithStar\"))}\r\n              </div>\r\n\r\n              <div className=\"col-lg-4\">\r\n                {this.renderContactInput(\"phone\", Trans(\"_lblContactPhoneWithStar\"))}\r\n              </div>\r\n\r\n              <div className=\"col-lg-4\">\r\n                {this.renderInput(\"title\", Trans(\"Itinerary Title *\"))}\r\n              </div>\r\n\r\n              <div className=\"col-lg-4\">\r\n                <DateRangePicker\r\n                  isValid={this.props.datesIsValid}\r\n                  cutOfDays={this.state.data.cutOfDays}\r\n                  stayInDays={this.state.data.stayInDays}\r\n                  minDays={localStorage.getItem(\"isUmrahPortal\") ? 5 : 1}\r\n                  maxDays={localStorage.getItem(\"isUmrahPortal\") ? 30 : 5}\r\n                  isSingleDateRangePicker={false}\r\n                  handleDateChange={this.setDate}\r\n                  dates={\r\n                    this.props.startDate\r\n                      ? {\r\n                          checkInDate: this.state.data.startDate\r\n                            ? this.state.data.startDate\r\n                            : this.props.startDate,\r\n                          checkOutDate: this.state.data.endDate\r\n                            ? this.state.data.endDate\r\n                            : this.props.endDate,\r\n                        }\r\n                      : this.props.dates\r\n                  }\r\n                  business={\"createItinerary\"}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"col-lg-2\">\r\n                {this.renderInput(\"duration\", Trans(\"Duration (Days)\"))}\r\n              </div>\r\n\r\n              <div className=\"col-lg-2\">\r\n                <div className=\"form-group phone\">\r\n                  <label className=\"d-block\">&nbsp;&nbsp;</label>\r\n                  <button onClick={this.handleCreate} className=\"btn btn-primary w-100\">\r\n                    {this.props.customerName ? Trans(\"_update\") : Trans(\"_create\")} Itinerary\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n\r\n        {this.props.customerName && (\r\n          <button\r\n            className=\"btn btn-sm position-absolute p-1 border-left border-bottom rounded-0 bg-light\"\r\n            style={{ top: \"0px\", right: \"0px\" }}\r\n            onClick={this.handleCreate}\r\n          >\r\n            <SVGIcon\r\n              name=\"times\"\r\n              width=\"16\"\r\n              height=\"16\"\r\n              className=\"d-flex align-items-center text-secondary\"\r\n            ></SVGIcon>\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuotationCreate;\r\n","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-details.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-info.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-groundservice-details.jsx",["1794"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\booking-management\\issue-documents-popup.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-transportation-details.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\loading\\view-booking-loading.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\groundservice-additionalsearvice-widget.jsx",["1795","1796"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-add-comment.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\air-pax-widget.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\activity-pax-widget.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\transfers-pax-widget.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-add-offline.jsx",["1797","1798","1799","1800"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\export\\export-ewallet-statement.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\call-center\\quotation-call-center-selection.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\hotel-special-request.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\auto-complete.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\hotel-pax-widget.jsx",["1801","1802","1803","1804"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\booking-management\\online-cancel.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-air-details.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-cancel-modify-comments.jsx",["1805","1806"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\booking-management\\offline-cancel-modify.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-other-details-transfers.jsx",["1807"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-other-details-vehicle.jsx",["1808"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-travellers-air-details.jsx",["1809"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-item-details-activity.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-travellers-details.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\umrah-package-room.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-room-details.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-booked-by-details.jsx",["1810"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\result-item-air-fare-rule-domestic.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\schedule-vehicle.jsx",["1811","1812","1813","1814","1815","1816"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-item-details.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-fare-details.jsx",["1817"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-policy-details.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget-mode-home-tabs.jsx",["1818","1819","1820"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\view\\view-reservation-details.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\payment\\payment-promocode.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\cart-items.jsx",["1821"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget-mode-home-widget.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\booking-steps.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\change-dates-occupancy.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\loading\\booking-loading.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\price-breakup.jsx",["1822","1823","1824","1825"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\travellers.jsx",["1826","1827","1828"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\cart-loading.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\booking-status\\failure-booking-message.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\booking-status\\success-booking-message.jsx",["1829","1830","1831","1832"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-email-header.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-email-items.jsx",["1833","1834"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-results-loading.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-email-footer.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-results-total.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-email-items-fromlist.jsx",["1835","1836","1837","1838","1839","1840"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-email-items-offline.jsx",["1841","1842","1843","1844","1845","1846"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget-quotation.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-results-item.jsx",["1847"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\hotel-room-widgets.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-details-items.jsx",["1848","1849"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\cart-item-air.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\cart-item.jsx",["1850","1851","1852","1853","1854","1855","1856","1857"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\price-breakup-air.jsx",["1858","1859","1860"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\traveller.jsx",["1861"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\price-breakup-hotel.jsx",["1862","1863","1864","1865"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\traveller-umrah.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\contact-info.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\traveller-air.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget-mode-quotation.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\results\\quotation-quick-book.jsx",["1866","1867"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\guest-transfers.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\guest.jsx",["1868","1869","1870","1871","1872","1873","1874","1875","1876","1877","1878","1879"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\guest-umrah.jsx",["1880","1881","1882","1883","1884","1885","1886","1887","1888"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\guest-air.jsx",["1889"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget-mode-quotation-tabs.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\search-widget-mode-quotation-widget.jsx",["1890"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\quotation-rooms.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\details\\quotation-room.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\inquiry-list.jsx",["1891","1892","1893"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\backoffice.jsx",["1894"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\dashboard-agent.jsx",["1895","1896","1897","1898","1899","1900","1901","1902","1903","1904","1905","1906","1907","1908","1909","1910","1911","1912","1913","1914","1915","1916","1917","1918","1919","1920","1921","1922","1923"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\customer-invoices.jsx",["1924","1925","1926","1927","1928","1929","1930"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\manualbookingcart.jsx",["1931","1932","1933"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports.jsx",["1934","1935"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\inquiry.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\customer-reconciliation.jsx",["1936","1937","1938","1939","1940"],"import React from \"react\";\nimport ManageBooking from \"../../assets/images/dashboard/manage-booking.png\";\nimport CustomerPaymentInfoForm from \"../../components/reports/customer-payment-info-form\";\nimport BRNSelection from \"../../components/reports/brn-selection\";\nimport InvoiceSelection from \"../../components/reports/invoice-selection-list\";\nimport CustomerReconciliationBase from \"../../base/customer-reconciliation-base\";\nimport InvoicePrint from \"../../components/reports/invoice-print\";\nimport InvoicePdf from \"../../components/reports/invoice-pdf\";\nimport Customerselection from \"../../components/reports/customer-selection\";\nimport QuotationMenu from \"../../components/quotation/quotation-menu\";\nimport moment from \"moment\";\nclass CustomerReconciliation extends CustomerReconciliationBase {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isFilters: false,\n            isLoading: true,\n            showPrint: false,\n            printData: {},\n            errors: {},\n            display: \"InvoiceSelection\",\n            breadcrumb: [],\n            customerData: {},\n            InvoiceTab: {\n                result: [],\n                pageInfo: {\n                    currentPage: 0,\n                    pageLength: 10,\n                    hasNextPage: false,\n                    hasPreviousPage: false,\n                    totalResults: 0\n                },\n                filters: { fromDate: moment().add(-1, 'M').format('YYYY-MM-DD'), toDate: moment().format('YYYY-MM-DD') },\n                selectedRecords: [],\n                isLoading: true,\n                selectedRecordIds: []\n            },\n            BRNTab: {\n                result: [],\n                pageInfo: {\n                    currentPage: 0,\n                    pageLength: 10,\n                    hasNextPage: false,\n                    hasPreviousPage: false,\n                    totalResults: 0\n                },\n                filters: { fromDate: moment().add(-1, 'M').format('YYYY-MM-DD'), toDate: moment().format('YYYY-MM-DD') },\n                selectedRecords: [],\n                isLoading: true,\n                selectedRecordIds: []\n            },\n            paymentType: \"full\",\n            isCustomerSet: false\n        };\n    }\n    componentDidMount() {\n        if (this.state.isCustomerSet) {\n            this.getCustomerInvoices();\n        }\n    }\n    showHideFilters = () => {\n        this.setState({ isFilters: !this.state.isFilters })\n    }\n    showHideBRNFilters = () => {\n        this.setState({ isBRNFilters: !this.state.isBRNFilters })\n    }\n    showSaveForm = (amount, selectedRecords, paymentType, selectedRecordIds) => {\n        let InvoiceTab = this.state.InvoiceTab;\n        let BRNTab = this.state.BRNTab;\n        if (paymentType === \"full\") {\n            InvoiceTab.selectedRecordIds = selectedRecordIds;\n            InvoiceTab.selectedRecords = selectedRecords;\n        } else if (paymentType === \"brnPayment\") {\n            BRNTab.selectedRecordIds = selectedRecordIds;\n            BRNTab.selectedRecords = selectedRecords;\n        }\n\n        let breadcrumb = this.state.breadcrumb;\n        switch (paymentType) {\n            case \"full\":\n                breadcrumb.push({\n                    display: \"SaveForm\",\n                    name: \"Pay Invoice(s)\"\n                });\n                break;\n            case \"brnPayment\":\n                breadcrumb.push({\n                    display: \"SaveForm\",\n                    name: \"Pay\"\n                });\n                break;\n            default:\n                breadcrumb.push({\n                    display: \"BRNSelection\",\n                    name: \"Pay by BRNs\"\n                });\n                break;\n        }\n        this.setState({ display: paymentType === \"full\" || paymentType === \"brnPayment\" ? \"SaveForm\" : \"BRNSelection\", Amount: amount, breadcrumb, InvoiceTab, BRNTab, paymentType });\n        if (paymentType !== \"full\" && paymentType !== \"brnPayment\" && this.state.BRNTab.isLoading === true) {\n            this.getCustomerBRNs();\n        }\n    }\n    back = () => {\n        let breadcrumb = this.state.breadcrumb;\n        let index = breadcrumb.findIndex((item) => item.display === this.state.display);\n        breadcrumb.length = index;\n        this.setState({ display: breadcrumb[breadcrumb.length - 1].display, breadcrumb: breadcrumb });\n    }\n    breadcrumbClick = (display) => {\n        let breadcrumb = this.state.breadcrumb;\n        let index = breadcrumb.findIndex((item) => item.display === display);\n        breadcrumb.length = index + 1;\n        this.setState({ display: display, breadcrumb: breadcrumb });\n    }\n    Breadcrumbs = () => (\n        <div className=\"row\">\n            <div className=\"col-lg-12\">\n\n                <ol className=\"breadcrumb  breadcrumb-arrow\">\n                    {this.state.breadcrumb.map((item, index) => {\n                        return <li key={index} className={this.state.breadcrumb.length === index + 1 ? 'breadcrumb-item active' : 'breadcrumb-item completed'}><a onClick={() => { this.breadcrumbClick(item.display) }}>\n                            {item.name}</a></li>\n                    })}\n                </ol>\n\n            </div>\n        </div>\n    );\n    steps = () => (\n        <div className=\"row\">\n\n            <div className=\"col-lg-12 col-md-12 col-sm-12\">\n                <div className=\"report-steps\">\n                    <div className=\"container\">\n                        <div className=\"row pt-3 pb-3 justify-content-center\">\n                            <div className={this.state.isCustomerSet ?\n                                \"step col-3 d-flex flex-wrap justify-content-center active completed\" :\n                                \"step col-3 d-flex flex-wrap justify-content-center \"}>\n                                <span className=\"d-flex\">\n                                    <a className=\"d-flex\" onClick={() => { this.breadcrumbClick(\"InvoiceSelection\") }} disabled={!this.state.isCustomerSet}>1</a>\n                                </span>\n                                <label className=\"text-secondary m-0 w-100 text-center mt-1\">Select Customer</label>\n                            </div>\n                            {this.state.display === \"BRNSelection\" || (this.state.display === \"SaveForm\" && this.state.paymentType === \"brnPayment\") ? (\n                                <div className={this.state.display !== \"BRNSelection\" ?\n                                    \"step col-3 d-flex flex-wrap justify-content-center active completed\" :\n                                    \"step col-3 d-flex flex-wrap justify-content-center \"}>\n                                    <span className=\"d-flex\">\n                                        <a className=\"d-flex\" onClick={() => { this.breadcrumbClick(\"BRNSelection\") }} disabled={this.state.display === \"BRNSelection\"}>2</a>\n                                    </span>\n                                    <label className=\"text-secondary m-0 w-100 text-center mt-1\">Select BRN(s)</label>\n                                </div>\n                            ) :\n                                <div className={this.state.display === \"SaveForm\" ?\n                                    \"step col-3 d-flex flex-wrap justify-content-center active completed\" :\n                                    \"step col-3 d-flex flex-wrap justify-content-center \"}>\n                                    <span className=\"d-flex\">\n                                        <a className=\"d-flex\" onClick={() => { this.breadcrumbClick(\"InvoiceSelection\") }} disabled={this.state.display !== \"SaveForm\"}>2</a>\n                                    </span>\n                                    <label className=\"text-secondary m-0 w-100 text-center mt-1\">Select Invoices</label>\n                                </div>\n                            }\n                            <div className={\"step col-3 d-flex flex-wrap justify-content-center \"}>\n                                <span className=\"d-flex\">\n                                    <a className=\"d-flex\" onClick={() => { this.breadcrumbClick(\"InvoiceSelection\") }} disabled={true}>3</a>\n                                </span>\n                                <label className=\"text-secondary m-0 w-100 text-center mt-2\">Payment Information</label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n    handleInvoicePaginationResults = (pageNumber, pageLength) => {\n        let invoiceTab = this.state.InvoiceTab;\n        invoiceTab.pageInfo.currentPage = pageNumber;\n        invoiceTab.pageInfo.pageLength = pageLength;\n        invoiceTab.isLoading = true;\n        this.setState({ InvoiceTab: invoiceTab });\n        this.getCustomerInvoices();\n    }\n    handleInvoiceFilters = (filters) => {\n        let invoiceTab = this.state.InvoiceTab;\n        invoiceTab.filters = filters;\n        invoiceTab.isLoading = true;\n        invoiceTab.SelectedRecords = [];\n        invoiceTab.selectedRecordIds = [];\n        this.setState({ InvoiceTab: invoiceTab });\n        this.getCustomerInvoices();\n    }\n    handleBRNFilters = (filters) => {\n        let BRNTab = this.state.BRNTab;\n        BRNTab.filters = filters;\n        BRNTab.isLoading = true;\n        BRNTab.SelectedRecords = [];\n        BRNTab.selectedRecordIds = [];\n        this.setState({ BRNTab });\n        this.getCustomerBRNs();\n    }\n    handleBRNPaginationResults = (pageNumber, pageLength) => {\n        let BRNTab = this.state.BRNTab;\n        BRNTab.pageInfo.currentPage = pageNumber;\n        BRNTab.pageInfo.pageLength = pageLength;\n        BRNTab.isLoading = true;\n        this.setState({ BRNTab });\n        this.getCustomerBRNs();\n    }\n    handleBRNPaginationResults = (pageNumber, pageLength) => {\n        let BRNTab = this.state.BRNTab;\n        BRNTab.pageInfo.currentPage = pageNumber;\n        BRNTab.pageInfo.pageLength = pageLength;\n        BRNTab.isLoading = true;\n        this.setState({ BRNTab });\n        this.getCustomerBRNs();\n    }\n    actionHide = () => {\n        this.setState({ showPrint: false, showPDF: false, printData: {} });\n    }\n    btnaction = (agentcustomerInvoiceId, type) => {\n        this.getInvoiceDetailData(agentcustomerInvoiceId, type);\n    }\n    selectCustomer = (data) => {\n        this.setState({ isCustomerSet: false }, () => {\n            let InvoiceTab = {\n                result: [],\n                pageInfo: {\n                    currentPage: 0,\n                    pageLength: 10,\n                    hasNextPage: false,\n                    hasPreviousPage: false,\n                    totalResults: 0\n                },\n                filters: { fromDate: moment().add(-1, 'M').format('YYYY-MM-DD'), toDate: moment().format('YYYY-MM-DD') },\n                selectedRecords: [],\n                isLoading: true,\n                selectedRecordIds: []\n            };\n            let BRNTab = {\n                result: [],\n                pageInfo: {\n                    currentPage: 0,\n                    pageLength: 10,\n                    hasNextPage: false,\n                    hasPreviousPage: false,\n                    totalResults: 0\n                },\n                filters: { fromDate: moment().add(-1, 'M').format('YYYY-MM-DD'), toDate: moment().format('YYYY-MM-DD') },\n                selectedRecords: [],\n                isLoading: true,\n                selectedRecordIds: []\n            };\n            this.setState({ customerData: data, isCustomerSet: true, display: \"InvoiceSelection\", BRNTab, InvoiceTab, breadcrumb: [{ display: \"InvoiceSelection\", name: data.displayName }], paymentType: \"full\" }, () => {\n                this.getCustomerInvoices();\n            });\n        });\n    }\n    onSaveSuccess = () => {\n        let InvoiceTab = {\n            result: [],\n            pageInfo: {\n                currentPage: 0,\n                pageLength: 10,\n                hasNextPage: false,\n                hasPreviousPage: false,\n                totalResults: 0\n            },\n            filters: { fromDate: moment().add(-1, 'M').format('YYYY-MM-DD'), toDate: moment().format('YYYY-MM-DD') },\n            selectedRecords: [],\n            isLoading: true,\n            selectedRecordIds: []\n        };\n        let BRNTab = {\n            result: [],\n            pageInfo: {\n                currentPage: 0,\n                pageLength: 10,\n                hasNextPage: false,\n                hasPreviousPage: false,\n                totalResults: 0\n            },\n            filters: { fromDate: moment().add(-1, 'M').format('YYYY-MM-DD'), toDate: moment().format('YYYY-MM-DD') },\n            selectedRecords: [],\n            isLoading: true,\n            selectedRecordIds: []\n        }\n        this.setState({ display: \"InvoiceSelection\", BRNTab, InvoiceTab, breadcrumb: [{ display: \"InvoiceSelection\", name: this.state.customerData.displayName }], paymentType: \"full\" }, () => {\n            this.getCustomerInvoices();\n        });\n    }\n    handleMenuClick = (req, redirect) => {\n        if (redirect) {\n            if (redirect === \"back-office\")\n                this.props.history.push(`/Backoffice/${req}`);\n            else {\n                this.props.history.push(`/Reports`);\n            }\n            window.location.reload();\n        } else {\n            this.props.history.push(`${req}`);\n        }\n    };\n    render() {\n        const { userInfo: { agentID } } = this.props;\n        return (\n            <div className=\"quotation quotation-list\">\n                <div className=\"title-bg pt-3 pb-3 mb-3\">\n                    <div className=\"container\">\n                        <h1 className=\"text-white m-0 p-0 f30\">\n                            <img\n                                width=\"24\"\n                                height=\"24\"\n                                className=\"mr-3\"\n                                src={ManageBooking}\n                                alt=\"\"\n                            />\n                                Customer Reconciliation\n                                {this.state.isCustomerSet && this.state.display === \"InvoiceSelection\" && (\n                                <button\n                                    className=\"btn btn-sm btn-light pull-right mr-2\"\n                                    onClick={this.showHideFilters}\n                                >\n                                    Filters\n                                </button>\n                            )}\n                            {this.state.isCustomerSet && this.state.display === \"BRNSelection\" && (\n                                <button\n                                    className=\"btn btn-sm btn-light pull-right mr-2\"\n                                    onClick={this.showHideBRNFilters}\n                                >\n                                    Filters\n                                </button>\n                            )}\n                        </h1>\n                    </div>\n                </div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-3 hideMenu\">\n                            <QuotationMenu handleMenuClick={this.handleMenuClick} />\n                        </div>\n                        <div className=\"col-lg-9 col-md-12 col-sm-12\">\n                            {this.steps()}\n                            {this.state.display !== \"InvoiceSelection\" && this.Breadcrumbs()}\n                            {this.state.display === \"InvoiceSelection\" &&\n                                <div className=\"row\">\n                                    <div className=\"col-sm-12 col-md-12 col-lg-12 mb-2 ml-1\">\n                                        <Customerselection agentID={agentID} selectCustomer={this.selectCustomer.bind(this)} customerData={this.state.customerData} />\n                                    </div>\n                                </div>\n                            }\n                            {this.state.isCustomerSet && this.state.display === \"InvoiceSelection\" && (\n                                <InvoiceSelection isFilters={this.state.isFilters} showHideFilters={this.showHideFilters} handleFilters={this.handleInvoiceFilters} showSaveForm={this.showSaveForm} {...this.state.InvoiceTab} handlePaginationResults={this.handleInvoicePaginationResults} btnaction={this.btnaction} />\n                            )}\n                            {this.state.isCustomerSet && this.state.display === \"BRNSelection\" && (\n                                <BRNSelection isFilters={this.state.isBRNFilters} showHideFilters={this.showHideBRNFilters} handleFilters={this.handleBRNFilters} showSaveForm={this.showSaveForm} {...this.state.BRNTab} BRNList={this.state.BRNList} back={this.back} handlePaginationResults={this.handleBRNPaginationResults} />\n                            )}\n                            {\n                                this.state.display === \"SaveForm\" && (this.state.paymentType === \"full\" || this.state.paymentType === \"brnPayment\") && (\n                                    <CustomerPaymentInfoForm Amount={this.state.Amount} back={this.back} SelectedRecords={this.state.paymentType === \"full\" ? this.state.InvoiceTab.selectedRecords : this.state.BRNTab.selectedRecords} paymentType={this.state.paymentType} onSaveSuccess={this.onSaveSuccess} />\n                                )\n                            }\n                            {this.state.showPrint &&\n                                <div style={{ display: \"none\" }}>\n                                    < InvoicePrint actionHide={this.actionHide} printData={this.state.printData} customerData={this.state.customerData} />\n                                </div>\n                            }\n                            {this.state.showPDF &&\n                                <div>\n                                    < InvoicePdf actionHide={this.actionHide} printData={this.state.printData} customerData={this.state.customerData} />\n                                </div>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div >\n        )\n    }\n}\nexport default CustomerReconciliation;\n","E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\suppliers-ledgers.jsx",["1941","1942","1943","1944"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\supplier-invoice-form.jsx",["1945","1946","1947"],"import React from 'react'\nimport Form from \"../../components/common/form\";\nimport QuotationMenu from \"../../components/quotation/quotation-menu\";\nimport SVGIcon from \"../../helpers/svg-icon\";\nimport { Trans } from \"../../helpers/translate\";\nimport TableLoading from \"../../components/loading/table-loading\";\nimport Datecomp from \"./../../helpers/date\";\nimport BusinessDropdown from \"../../components/reports/business-dropdown\";\nimport { apiRequester } from \"../../services/requester-report\";\nimport SingleDate from \"../../components/common/form-birthdate\";\nimport Pagination from \"./../../components/booking-management/booking-pagination\";\nimport moment from \"moment\";\nimport Loader from \"../../components/common/loader\";\nimport MessageBar from '../../components/admin/message-bar';\nclass SupplierInvoice extends Form {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {\n                \"SupplierId\": \"\",\n                \"BusinessId\": \"\",\n                \"InvoiceDate\": \"\",\n                \"InvoiceNumber\": \"\",\n                \"InvoiceDurationStartDate\": \"\",\n                \"InvoiceDurationEndDate\": \"\",\n                \"InvoiceCurrencyCode\": \"\",\n                \"InvoiceAmount\": \"\",\n                \"InvoiceTax1\": \"\",\n                \"InvoiceNetAmount\": \"\",\n                \"NoOfConfirmBooking\": \"\",\n                \"NoOfCancelBooking\": \"\",\n                \"NoOfBookingReconciled\": \"\",\n                \"InvoiceReconciliationStatus\": \"Pending\",\n                \"DueAmount\": \"\",\n                \"Comment\": \"\",\n                \"CreatedBy\": \"\"\n            },\n            errors: {},\n            PendingInvoicedBooking: {\n                result: [],\n                pageInfo: {\n                    currentPage: 0,\n                    pageLength: 10,\n                    hasNextPage: false,\n                    hasPreviousPage: false,\n                    totalResults: 0\n                },\n                filters: {},\n                isLoading: false,\n                selectedRecordIds: []\n            },\n            SelectedBookingToInvoice: {\n                result: [],\n                isLoading: false,\n                selectedRecordIds: []\n            },\n            SavedRemovedBookings: {\n                result: [],\n                selectedRecordIds: []\n            },\n            supplierList: [],\n            isLoading: false,\n            isEditModeLoading: false,\n            mode: \"add\",\n            commentHistory: [],\n            selectedTab: \"PendingBookings\"\n        };\n    }\n    handleMenuClick = (req, redirect) => {\n        if (redirect) {\n            if (redirect === \"back-office\")\n                this.props.history.push(`/Backoffice/${req}`);\n            else {\n                this.props.history.push(`/Reports`);\n            }\n            window.location.reload();\n        } else {\n            this.props.history.push(`${req}`);\n        }\n    };\n    setDates = (id, mode) => {\n        let newData = { ...this.state.data };\n        const date = moment(new Date()).format(\"YYYY-MM-DD\");\n        newData.InvoiceDate = date;\n        newData.InvoiceDurationStartDate = moment().add(-1, 'M').format('YYYY-MM-DD');\n        newData.InvoiceDurationEndDate = date;\n        newData.DueDate = date;\n        if (mode === \"add\") {\n            let reportBusinessSupplier = JSON.parse(sessionStorage.getItem(\"reportBusinessSupplier\"))\n            if (reportBusinessSupplier && reportBusinessSupplier[\"supplierList\"]\n                && reportBusinessSupplier[\"businessID\"]\n                && reportBusinessSupplier[\"supplierId\"]) {\n                newData[\"SupplierId\"] = reportBusinessSupplier[\"supplierId\"];\n                newData[\"BusinessId\"] = reportBusinessSupplier[\"businessID\"];\n                this.setState({ supplierList: reportBusinessSupplier[\"supplierList\"] });\n                const SelectedSupplier = reportBusinessSupplier[\"supplierList\"].filter((param) => { return param.providerId === parseInt(newData[\"SupplierId\"]) })[0];\n                newData[\"InvoiceCurrencyCode\"] = SelectedSupplier[\"currencySymbol\"];\n            }\n        }\n        this.setState({ data: newData, invoiceId: id, mode });\n    };\n    componentDidMount() {\n        const { mode, id } = this.props.match.params;\n        this.setDates(id, mode.toLowerCase());\n        if (mode.toLowerCase() === \"edit\") {\n            this.getInvoiceDetails(id);\n            this.getCommentHistory(id);\n        }\n    }\n    getCommentHistory(id) {\n        let reqURL = \"reconciliation/supplier/invoice/comments?invoiceid=\" + id;\n        apiRequester(\n            reqURL,\n            {},\n            function (resonsedata) {\n                this.setState({ commentHistory: resonsedata.response });\n            }.bind(this),\n            \"GET\"\n        );\n    }\n    getInvoiceDetails = (id) => {\n        this.setState({ isLoading: true, isEditModeLoading: true });\n        let reqURL = \"reconciliation/supplier/invoice/details?invoiceid=\" + id;\n        apiRequester(\n            reqURL,\n            {},\n            function (resonsedata) {\n                let { data } = this.state;\n                if (resonsedata.response.length > 0) {\n                    const InvoiceDetail = resonsedata.response[0];\n                    data = {\n\n                        \"SupplierId\": InvoiceDetail.supplierId,\n                        \"BusinessId\": InvoiceDetail.businessId,\n                        \"InvoiceDate\": InvoiceDetail.invoiceDate,\n                        \"InvoiceNumber\": InvoiceDetail.invoiceNumber,\n                        \"InvoiceDurationStartDate\": InvoiceDetail.invoiceDurationStartDate,\n                        \"InvoiceDurationEndDate\": InvoiceDetail.invoiceDurationEndDate,\n                        \"InvoiceCurrencyCode\": InvoiceDetail.invoiceCurrencyCode,\n                        \"InvoiceAmount\": InvoiceDetail.invoiceAmount,\n                        \"InvoiceTax1\": InvoiceDetail.invoiceTax1,\n                        \"InvoiceNetAmount\": InvoiceDetail.invoiceNetAmount,\n                        \"NoOfConfirmBooking\": InvoiceDetail.noOfConfirmBooking,\n                        \"NoOfCancelBooking\": InvoiceDetail.noOfCancelBooking,\n                        \"NoOfBookingReconciled\": InvoiceDetail.noOfBookingReconciled,\n                        \"InvoiceReconciliationStatus\": InvoiceDetail.invoiceReconciliationStatus,\n                        \"DueAmount\": InvoiceDetail.dueAmount,\n                        \"DueDate\": InvoiceDetail.dueDate,\n                        \"Comment\": \"\",\n                        \"invoiceId\": InvoiceDetail.supplierInvoicesAndReconciliationId\n                    }\n                }\n                this.setState({ data, isLoading: false, isEditModeLoading: false }, () => {\n                    this.getPendingInvoicedBooking();\n                    this.getSelectedBooking()\n                });\n                this.getSupplier(data.BusinessId);\n            }.bind(this),\n            \"GET\"\n        );\n    }\n    getSupplier = (businessID) => {\n        this.setState({ isLoading: true });\n        const { userInfo: { agentID } } = this.props;\n        let reqURL = \"reconciliation/supplier/business/suppliers?businessid=\" + businessID + \"&providerid=\" + agentID;\n        apiRequester(\n            reqURL,\n            {},\n            function (data) {\n                this.setState({ isLoading: false, supplierList: data.response });\n            }.bind(this),\n            \"GET\"\n        );\n    }\n    getPendingInvoicedBooking = () => {\n        let { PendingInvoicedBooking, data } = this.state;\n        if (!data.BusinessId || data.BusinessId === \"\" || !data.SupplierId || data.SupplierId === \"\" || !data.InvoiceDurationStartDate || data.InvoiceDurationStartDate === \"\" || !data.InvoiceDurationEndDate || data.InvoiceDurationEndDate === \"\") {\n            this.setState({ PendingInvoicedBooking });\n            return;\n        }\n        const { userInfo: { agentID } } = this.props;\n        PendingInvoicedBooking.isLoading = true;\n        this.setState({ PendingInvoicedBooking });\n        let reqURL = `reconciliation/supplier/reconciliation/details?businessid=${data.BusinessId}&supplierid=${data.SupplierId}&providerid=${agentID}&fromdate=${data.InvoiceDurationStartDate}&todate=${data.InvoiceDurationEndDate}&reconciliationstatus=ALL&pagesize=${PendingInvoicedBooking.pageInfo.pageLength}&pagenumber=${PendingInvoicedBooking.pageInfo.currentPage + 1}${data.invoiceId ? \"&invoiceid=\" + data.invoiceId : \"\"}&type=pending`;\n        apiRequester(\n            reqURL,\n            {},\n            function (ResponceData) {\n                if (typeof ResponceData.response === \"string\") {\n                    ResponceData.response = [];\n                    PendingInvoicedBooking.result = [];\n                    PendingInvoicedBooking.isLoading = false;\n                    this.setState({ PendingInvoicedBooking });\n                    return;\n                }\n                PendingInvoicedBooking.result = ResponceData.response;\n                PendingInvoicedBooking.isLoading = false;\n                let pageInfo = PendingInvoicedBooking.pageInfo;\n                if (ResponceData.response.length > 0) {\n                    let totalRecords = ResponceData.response[0].totalRows;\n                    pageInfo[\"hasNextPage\"] = totalRecords > pageInfo.currentPage * pageInfo.pageLength;\n                    pageInfo[\"hasPreviousPage\"] = pageInfo.currentPage > 1;\n                    pageInfo[\"totalResults\"] = totalRecords;\n                    //pageInfo[\"currentPage\"] = pageInfo.currentPage;\n                } else {\n                    pageInfo[\"hasNextPage\"] = false;\n                    pageInfo[\"hasPreviousPage\"] = false;\n                    pageInfo[\"totalResults\"] = 0;\n                }\n                PendingInvoicedBooking.pageInfo = {\n                    currentPage: ResponceData?.pageInfo?.page - 1,\n                    pageLength: ResponceData?.pageInfo?.pageSize,\n                    hasNextPage: ResponceData?.pageInfo?.totalRecords > ResponceData?.pageInfo?.page * ResponceData?.pageInfo?.pageSize,\n                    hasPreviousPage: ResponceData?.pageInfo?.page > 1,\n                    totalResults: ResponceData?.pageInfo?.totalRecords\n                };\n                //PendingInvoicedBooking.pageInfo = pageInfo;\n                this.setState({ PendingInvoicedBooking });\n            }.bind(this),\n            \"GET\"\n        );\n\n    }\n    getSelectedBooking = () => {\n        let { SelectedBookingToInvoice, data } = this.state;\n        const { userInfo: { agentID } } = this.props;\n        SelectedBookingToInvoice.isLoading = true;\n        this.setState({ SelectedBookingToInvoice });\n        let reqURL = `reconciliation/supplier/reconciliation/details?businessid=${data.BusinessId}&supplierid=${data.SupplierId}&providerid=${agentID}&reconciliationstatus=ALL&pagesize=0&pagenumber=0${data.invoiceId ? \"&invoiceid=\" + data.invoiceId : \"\"}&type=selected`;\n        apiRequester(\n            reqURL,\n            {},\n            function (ResoonceData) {\n                if (typeof ResoonceData.response === \"string\") {\n                    data.response = [];\n                }\n                SelectedBookingToInvoice.result = ResoonceData.response.map((item) => {\n                    if (item.supplierReconciledAmout !== item.supplierBookingAmount) {\n                        item.IsPending = true;\n                    }\n                    item.IsSaved = true;\n                    return item;\n                });\n                data.ReconcileAmount = this.calculateReconcileAmount(SelectedBookingToInvoice.result);\n                data.InvoiceNetAmount = this.calculateInvoiceAmount(SelectedBookingToInvoice.result);\n                data.InvoiceAmount = data.InvoiceNetAmount;\n                SelectedBookingToInvoice.isLoading = false;\n                this.setState({ SelectedBookingToInvoice, data });\n            }.bind(this),\n            \"GET\"\n        );\n\n    }\n    handlePaginationResults = (pageNumber, pageLength) => {\n        let { PendingInvoicedBooking } = this.state;\n        PendingInvoicedBooking.pageInfo.currentPage = parseInt(pageNumber);\n        PendingInvoicedBooking.pageInfo.pageLength = pageLength;\n        this.setState({ PendingInvoicedBooking });\n        this.getPendingInvoicedBooking();\n    }\n    handleFilterChange = () => {\n        let { PendingInvoicedBooking } = this.state;\n        PendingInvoicedBooking.result = [];\n        let pageInfo = PendingInvoicedBooking.pageInfo;\n        pageInfo[\"hasNextPage\"] = false;\n        pageInfo[\"hasPreviousPage\"] = false;\n        pageInfo[\"totalResults\"] = 0;\n        pageInfo[\"currentPage\"] = 0;\n        pageInfo[\"pageLength\"] = 10;\n        let SelectedBookingToInvoice = {\n            result: [],\n            isLoading: false,\n            selectedRecordIds: []\n        }\n        PendingInvoicedBooking.pageInfo = pageInfo;\n        this.setState({ PendingInvoicedBooking, SelectedBookingToInvoice }, () => { this.getPendingInvoicedBooking() });\n    }\n    selectBookingToInvoice = (e, record) => {\n        let { SelectedBookingToInvoice } = this.state;\n        let selectedRecordIds = SelectedBookingToInvoice.selectedRecordIds;\n        if (e.target.checked) {\n            selectedRecordIds.push(record.itineraryDetailId)\n        } else {\n            let recordIndex = selectedRecordIds.indexOf(record.itineraryDetailId);\n            selectedRecordIds.splice(recordIndex, 1);\n        }\n        SelectedBookingToInvoice.selectedRecordIds = selectedRecordIds;\n        this.setState({ SelectedBookingToInvoice });\n    }\n    selectPendingInvoicedBooking = (e, record) => {\n        let { PendingInvoicedBooking } = this.state;\n        let selectedRecordIds = PendingInvoicedBooking.selectedRecordIds;\n        if (e.target.checked) {\n            selectedRecordIds.push(record.itineraryDetailId)\n        } else {\n            let recordIndex = selectedRecordIds.indexOf(record.itineraryDetailId);\n            selectedRecordIds.splice(recordIndex, 1);\n        }\n        PendingInvoicedBooking.selectedRecordIds = selectedRecordIds;\n        this.setState({ PendingInvoicedBooking });\n    }\n    selectSavedRemovedBooking = (e, record) => {\n        let { SavedRemovedBookings } = this.state;\n        let selectedRecordIds = SavedRemovedBookings.selectedRecordIds;\n        if (e.target.checked) {\n            selectedRecordIds.push(record.itineraryDetailId)\n        } else {\n            let recordIndex = selectedRecordIds.indexOf(record.itineraryDetailId);\n            selectedRecordIds.splice(recordIndex, 1);\n        }\n        SavedRemovedBookings.selectedRecordIds = selectedRecordIds;\n        this.setState({ SavedRemovedBookings });\n    }\n    AddToSelectedBooking = () => {\n        let { PendingInvoicedBooking, SelectedBookingToInvoice, data } = this.state;\n        SelectedBookingToInvoice.result = SelectedBookingToInvoice.result.concat(PendingInvoicedBooking.result.filter((param) => { return PendingInvoicedBooking.selectedRecordIds.indexOf(param.itineraryDetailId) > -1 }));\n        SelectedBookingToInvoice.result = SelectedBookingToInvoice.result.map(obj => ({ ...obj }));\n        data.InvoiceAmount = this.calculateInvoiceAmount(SelectedBookingToInvoice.result);\n        data.ReconcileAmount = this.calculateReconcileAmount(SelectedBookingToInvoice.result);\n        PendingInvoicedBooking.selectedRecordIds = [];\n        this.setState({ PendingInvoicedBooking, SelectedBookingToInvoice });\n    }\n    AddSavedRemovedBookingToSelectedBooking = () => {\n        let { SavedRemovedBookings, SelectedBookingToInvoice, data } = this.state;\n        SelectedBookingToInvoice.result = SelectedBookingToInvoice.result.concat(SavedRemovedBookings.result.filter((param) => { return SavedRemovedBookings.selectedRecordIds.indexOf(param.itineraryDetailId) > -1 }));\n        SavedRemovedBookings.result = SavedRemovedBookings.result.filter((param) => { return SavedRemovedBookings.selectedRecordIds.indexOf(param.itineraryDetailId) < 0 });\n        SelectedBookingToInvoice.result = SelectedBookingToInvoice.result.map(obj => ({ ...obj }));\n        data.InvoiceAmount = this.calculateInvoiceAmount(SelectedBookingToInvoice.result);\n        data.ReconcileAmount = this.calculateReconcileAmount(SelectedBookingToInvoice.result);\n        SavedRemovedBookings.selectedRecordIds = [];\n        this.setState({ SavedRemovedBookings, SelectedBookingToInvoice });\n    }\n    calculateInvoiceAmount = (selectedBookingList) => {\n        return selectedBookingList.reduce((sum, item) => { return sum + parseFloat(item.supplierBookingAmount) }, 0);\n    }\n    calculateReconcileAmount = (selectedBookingList) => {\n        return selectedBookingList.reduce((sum, item) => { return sum + (item.IsPending ? parseFloat(item.supplierReconciledAmout ? item.supplierReconciledAmout : 0) : parseFloat(item.supplierBookingAmount)) }, 0);\n    }\n    RemoveFromSelectedBooking = () => {\n        let { SelectedBookingToInvoice, PendingInvoicedBooking, data, SavedRemovedBookings } = this.state;\n        const SavedRemovedBookingsResult = SelectedBookingToInvoice.result.filter((param) => { return param.IsSaved && SelectedBookingToInvoice.selectedRecordIds.indexOf(param.itineraryDetailId) > -1 });\n        SavedRemovedBookings.result = SavedRemovedBookings.result.concat(SavedRemovedBookingsResult);\n        SavedRemovedBookings.result = SavedRemovedBookings.result.map(obj => ({ ...obj }));\n        SelectedBookingToInvoice.result = SelectedBookingToInvoice.result.filter((param) => { return SelectedBookingToInvoice.selectedRecordIds.indexOf(param.itineraryDetailId) < 0 });\n        SelectedBookingToInvoice.result = SelectedBookingToInvoice.result.map(obj => ({ ...obj }));\n\n        data.InvoiceAmount = this.calculateInvoiceAmount(SelectedBookingToInvoice.result);\n        data.ReconcileAmount = this.calculateReconcileAmount(SelectedBookingToInvoice.result);\n        SelectedBookingToInvoice.selectedRecordIds = [];\n        this.setState({ SelectedBookingToInvoice, PendingInvoicedBooking, SavedRemovedBookings });\n    }\n    checkAllSelectedBooking = (e) => {\n        let { SelectedBookingToInvoice } = this.state;\n        if (e.target.checked) {\n            let newSelectedRecordIds = SelectedBookingToInvoice.result.filter((item) => { return SelectedBookingToInvoice.selectedRecordIds.indexOf(item.itineraryDetailId) === -1 }).map((item) => { return item.itineraryDetailId });\n            SelectedBookingToInvoice.selectedRecordIds = SelectedBookingToInvoice.selectedRecordIds.concat(newSelectedRecordIds);\n        } else {\n            SelectedBookingToInvoice.selectedRecordIds = [];\n        }\n        this.setState({ SelectedBookingToInvoice });\n    }\n    isCheckAllSelectedBooking = () => {\n        let { SelectedBookingToInvoice } = this.state;\n        const RecordIds = SelectedBookingToInvoice.result.map((item) => { return item.itineraryDetailId });\n        if (RecordIds.length === 0)\n            return false;\n        const selectedRecordIds = SelectedBookingToInvoice.selectedRecordIds;\n        return RecordIds.every(v => selectedRecordIds.includes(v));\n    }\n    checkAllPendingInvoicedBooking = (e) => {\n        let { SelectedBookingToInvoice, PendingInvoicedBooking } = this.state;\n        if (e.target.checked) {\n            const SelectedInvoicesId = SelectedBookingToInvoice.result.map((item) => { return item.itineraryDetailId });\n            let newSelectedRecordIds = PendingInvoicedBooking.result.filter((item) => { return SelectedInvoicesId.indexOf(item.itineraryDetailId) < 0 && PendingInvoicedBooking.selectedRecordIds.indexOf(item.itineraryDetailId) === -1 }).map((item) => { return item.itineraryDetailId });\n            PendingInvoicedBooking.selectedRecordIds = PendingInvoicedBooking.selectedRecordIds.concat(newSelectedRecordIds);\n        } else {\n            PendingInvoicedBooking.selectedRecordIds = [];\n        }\n        this.setState({ PendingInvoicedBooking });\n    }\n    isCheckAllPendingInvoicedBookings = () => {\n        let { PendingInvoicedBooking } = this.state;\n        const RecordIds = PendingInvoicedBooking.result.map((item) => { return item.itineraryDetailId });\n        if (RecordIds.length === 0)\n            return false;\n        const selectedRecordIds = PendingInvoicedBooking.selectedRecordIds;\n        return RecordIds.every(v => selectedRecordIds.includes(v));\n    }\n    checkAllSavedRemovedBooking = (e) => {\n        let { SavedRemovedBookings } = this.state;\n        if (e.target.checked) {\n            const SelectedInvoicesId = SavedRemovedBookings.selectedRecordIds;\n            let newSelectedRecordIds = SavedRemovedBookings.result.filter((item) => { return SelectedInvoicesId.indexOf(item.itineraryDetailId) < 0 }).map((item) => { return item.itineraryDetailId });\n            SavedRemovedBookings.selectedRecordIds = SelectedInvoicesId.concat(newSelectedRecordIds);\n        } else {\n            SavedRemovedBookings.selectedRecordIds = [];\n        }\n        this.setState({ SavedRemovedBookings });\n    }\n    isCheckAllSavedRemovedBooking = () => {\n        let { SavedRemovedBookings } = this.state;\n        const RecordIds = SavedRemovedBookings.result.map((item) => { return item.itineraryDetailId });\n        if (RecordIds.length === 0)\n            return false;\n        const selectedRecordIds = SavedRemovedBookings.selectedRecordIds;\n        return RecordIds.every(v => selectedRecordIds.includes(v));\n    }\n    handleBusiness = (businessID, newSupplierList) => {\n        let { data, supplierList } = this.state;\n        data.BusinessId = businessID;\n        supplierList = newSupplierList;\n        this.setState({ data, supplierList });\n        this.handleFilterChange();\n    }\n    handleDataChange = (e) => {\n        let { data } = this.state;\n        if (e.target.name === \"SupplierId\" && e.target.value != \"\") {\n            const SelectedSupplier = this.state.supplierList.filter((param) => { return param.providerId === parseInt(e.target.value) })[0];\n            data[\"InvoiceCurrencyCode\"] = SelectedSupplier[\"currencySymbol\"];\n        }\n        data[e.target.name] = e.target.value;\n        this.setState({ data });\n        if (e.target.name === \"SupplierId\")\n            this.handleFilterChange();\n    }\n    validateInvoiceNumber = () => {\n        const { data } = this.state;\n        let reqURL = \"reconciliation/supplier/invoice/validate?invoicenumber=\" + data.InvoiceNumber + \"&supplierid=\" + data.SupplierId + \"&invoicedate=\" + data.InvoiceDate + (data.invoiceId ? \"&invoiceid=\" + data.invoiceId : \"\");\n        apiRequester(\n            reqURL,\n            {},\n            function (resonsedata) {\n                if (resonsedata.response.status === \"valid\") {\n                    this.saveInvoice();\n                } else {\n                    const { errors } = this.state;\n                    errors[\"InvoiceNumber\"] = resonsedata.response.error;\n                    errors[\"BRNList\"] = resonsedata.response.error;\n                    this.setState({ errors });\n                }\n            }.bind(this),\n            \"GET\"\n        );\n    }\n    validateInvoiceInformation = () => {\n        const errors = {};\n        const { data, SelectedBookingToInvoice } = this.state;\n\n        if (!data.SupplierId || !this.validateFormData(data.SupplierId, \"require\"))\n            errors.SupplierId = \"Supplier required\";\n\n        if (!this.validateFormData(data.BusinessId, \"require\"))\n            errors.BusinessId = \"Business required\";\n\n        if (!this.validateFormData(data.InvoiceNumber, \"require\"))\n            errors.InvoiceNumber = \"Invoice Number required\";\n\n        if (!this.validateFormData(data.InvoiceDate, \"require_date\"))\n            errors.InvoiceDate = \"Invoice Date required\";\n        if (!this.validateFormData(data.DueDate, \"require_date\"))\n            errors.InvoiceDate = \"Invoice Due Date required\";\n        if (!this.validateFormData(data.InvoiceDurationStartDate, \"require_date\"))\n            errors.InvoiceDurationStartDate = \"Invoice Duration Start Date required\";\n\n        if (!this.validateFormData(data.InvoiceDurationEndDate, \"require_date\"))\n            errors.InvoiceDurationEndDate = \"Invoice Duration End Date required\";\n\n        if (!this.validateFormData(data.InvoiceCurrencyCode, \"require\"))\n            errors.InvoiceCurrencyCode = \"Invoice Currency required\";\n\n        if (!this.validateFormData(data.Comment, \"require\"))\n            errors.Comment = \"Comment required\";\n\n        if (SelectedBookingToInvoice.result.length === 0) {\n            errors.BRNList = \"Please select at least one booking for the Invoice.\";\n        } else {\n            const InvalidRecord = SelectedBookingToInvoice.result.filter((param) => { return param.IsPending && (!param.supplierReconciledAmout || param.supplierReconciledAmout === \"\" || param.supplierReconciledAmout <= 0) });\n            if (InvalidRecord.length > 0)\n                errors.BRNList = \"Supplier Amount can not be less or equal to 0 or blank or text for Selected Reference Numner \" + InvalidRecord[0].bookingRef;\n\n        }\n\n        return Object.keys(errors).length === 0 ? null : errors;\n    }\n    saveInvoiceClick = () => {\n        const errors = this.validateInvoiceInformation();\n        this.setState({ errors: errors || {} });\n        if (errors) return;\n        this.validateInvoiceNumber();\n    }\n    saveInvoice = () => {\n        let { data, SelectedBookingToInvoice, mode } = { ...this.state };\n        const { userInfo: { agentID, userID } } = this.props;\n        const bookingdetails = SelectedBookingToInvoice.result.map(obj => ({\n            \"portalAgentId\": obj.portalAgentId,\n            \"businessId\": obj.businessId,\n            \"bookingRef\": obj.bookingRef,\n            \"itineraryDetailId\": obj.itineraryDetailId,\n            \"supplierName\": obj.supplierName,\n            \"supplierBookingAmount\": obj.supplierBookingAmount,\n            \"supplierBookingCurrency\": obj.supplierBookingCurrency,\n            \"supplierReconciledAmout\": obj.IsPending ? obj.supplierReconciledAmout : obj.supplierBookingAmount,\n            \"supplierReconciledCurrency\": obj.supplierBookingCurrency,\n        }));\n        if (mode === \"add\") {\n            data[\"CreatedBy\"] = userID;\n        } else {\n            data[\"UpdatedBy\"] = userID;\n        }\n        let reqOBJ = {\n            \"request\": {\n                ...data,\n                InvoiceNetAmount: data[\"ReconcileAmount\"],\n                InvoiceAmount: data[\"ReconcileAmount\"],\n                DueAmount: data[\"ReconcileAmount\"],\n                providerId: agentID,\n                bookingdetails\n            }\n        };\n        this.setState({ isLoading: true });\n        let reqURL = `/reconciliation/supplier/invoice/${mode === \"add\" ? \"add\" : \"update\"}`;\n        apiRequester(\n            reqURL,\n            reqOBJ,\n            function (resonsedata) {\n                if (resonsedata.error) {\n                    let { errors } = this.state;\n                    errors.BRNList = resonsedata.error;\n                    this.setState({ isLoading: false, errors });\n                } else {\n                    this.setState({ isLoading: false });\n                    this.setState({ showSuccessMessage: true });\n                }\n            }.bind(this),\n            \"POST\"\n        );\n\n    }\n    handleDateChangeEvent = (value, id) => {\n        const { data, errors } = { ...this.state };\n\n        if (id === \"InvoiceDurationStartDate\" && new Date(value) > new Date(data[\"InvoiceDurationEndDate\"])) {\n            errors[id] = \"Start Date can not be greater than End Date.\";\n            this.setState({ errors });\n            return;\n        }\n        else if (id === \"InvoiceDurationEndDate\" && new Date(value) < new Date(data[\"InvoiceDurationStartDate\"])) {\n            errors[id] = \"End Date can not be less than Start Date.\";\n            this.setState({ errors });\n            return;\n        } else {\n            if (errors[\"InvoiceDurationStartDate\"]) delete errors[\"InvoiceDurationStartDate\"];\n            if (errors[\"InvoiceDurationEndDate\"]) delete errors[\"InvoiceDurationEndDate\"];\n        }\n        data[id] = value;\n        this.setState({ data });\n        this.handleFilterChange();\n    };\n    changePendingCheckbox = (e, record) => {\n        let { SelectedBookingToInvoice, data } = this.state;\n        let selectedRecordIndex = SelectedBookingToInvoice.result.indexOf(record);\n        SelectedBookingToInvoice.result[selectedRecordIndex][\"IsPending\"] = e.target.checked;\n        data.ReconcileAmount = this.calculateReconcileAmount(SelectedBookingToInvoice.result);\n        this.setState({ SelectedBookingToInvoice, data });\n    }\n    changesupplierReconciledAmout = (e, record) => {\n        let { SelectedBookingToInvoice, data } = this.state;\n        let selectedRecordIndex = SelectedBookingToInvoice.result.indexOf(record);\n        SelectedBookingToInvoice.result[selectedRecordIndex][\"supplierReconciledAmout\"] = e.target.value;\n        data.ReconcileAmount = this.calculateReconcileAmount(SelectedBookingToInvoice.result);\n        this.setState({ SelectedBookingToInvoice, data });\n    }\n    RedirectToInvoiceList = () => {\n        this.props.history.push(`/SupplierInvoices`);\n    }\n    render() {\n        const { data, PendingInvoicedBooking, SelectedBookingToInvoice, supplierList, errors, commentHistory, mode, selectedTab, SavedRemovedBookings, isLoading, isEditModeLoading, showSuccessMessage } = this.state;\n        const SelectedInvoicesId = SelectedBookingToInvoice.result.map((item) => { return item.itineraryDetailId });\n        const { userInfo: { agentID } } = this.props;\n        const pageInfoIndex = [{ item: PendingInvoicedBooking.pageInfo }];\n        return (\n            <div>\n                <div className=\"title-bg pt-3 pb-3 mb-3\">\n                    <div className=\"container\">\n                        <h1 className=\"text-white m-0 p-0 f30\">\n                            <SVGIcon\n                                name=\"file-text\"\n                                width=\"24\"\n                                height=\"24\"\n                                className=\"mr-3\"\n                            ></SVGIcon>\n                            {mode === \"add\" ? \"Add \" : \"Edit \"}Supplier Invoice\n                        </h1>\n                    </div>\n                </div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-3 hideMenu\">\n                            <QuotationMenu handleMenuClick={this.handleMenuClick} />\n                        </div>\n                        {isEditModeLoading &&\n                            <div className=\"col-lg-8\">\n                                <div className=\"container \">\n                                    <Loader />\n                                </div>\n                            </div>\n                        }\n                        {!isEditModeLoading &&\n                            <div className=\"col-lg-9 \">\n                                <div className=\"container \">\n                                    {showSuccessMessage &&\n                                        <MessageBar Message={`Supplier Invoice ${mode === \"add\" ? \"added\" : \"updated\"} successfully.`} handleClose={() => this.RedirectToInvoiceList()} />\n                                    }\n                                    <div className=\"row border mt-2\">\n                                        <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                                            <div className={\"form-group \" + \"business\"}>\n                                                <BusinessDropdown providerID={agentID} handleBusiness={this.handleBusiness} BusinessId={data.BusinessId} />\n                                                {errors[\"BusinessId\"] && (\n                                                    <small className=\"alert alert-danger mt-2 p-1 d-inline-block\">\n                                                        {errors[\"BusinessId\"]}\n                                                    </small>\n                                                )}\n                                            </div>\n                                        </div>\n                                        <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                                            <div className={\"form-group \" + \"SupplierId\"}>\n                                                <label htmlFor={\"SupplierId\"}>{\"Supplier *\"}</label>\n                                                <div className=\"input-group\">\n                                                    <select\n                                                        value={data.SupplierId}\n                                                        onChange={(e) => this.handleDataChange(e)}\n                                                        name={\"SupplierId\"}\n                                                        id={\"SupplierId\"}\n                                                        className={\"form-control\"}>\n                                                        <option key={0} value={''}>Select</option>\n                                                        {supplierList.map((option, key) => (\n\n                                                            <option\n                                                                key={key}\n                                                                value={\n                                                                    option[\"providerId\"]\n                                                                }\n                                                            >\n                                                                {option[\"fullName\"]}\n                                                            </option>\n                                                        ))}\n                                                    </select>\n                                                </div>\n                                                {errors[\"SupplierId\"] && (\n                                                    <small className=\"alert alert-danger mt-2 p-1 d-inline-block\">\n                                                        {errors[\"SupplierId\"]}\n                                                    </small>\n                                                )}\n                                            </div>\n                                        </div>\n                                        <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                                            <div className={\"form-group InvoiceNumber\"}>\n                                                <label htmlFor={\"InvoiceNumber\"}>{\"Invoice Number *\"}</label>\n\n                                                <input\n                                                    type=\"text\"\n                                                    name={\"InvoiceNumber\"}\n                                                    id={\"InvoiceNumber\"}\n                                                    value={data.InvoiceNumber}\n                                                    className={\"form-control \" || (errors[\"InvoiceNumber\"] && \"error-bdr\")}\n                                                    onChange={(e) => this.handleDataChange(e)}\n                                                />\n                                                {errors[\"InvoiceNumber\"] && (\n                                                    <small className=\"alert alert-danger mt-2 p-1 d-inline-block\">\n                                                        {errors[\"InvoiceNumber\"]}\n                                                    </small>\n                                                )}\n                                            </div>\n                                        </div>\n                                        <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                                            {this.renderCurrentDate(\n                                                \"InvoiceDate\",\n                                                Trans(\"Invoice Date *\"),\n                                            )}\n                                        </div>\n                                        <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                                            <SingleDate\n                                                type={\"text\"}\n                                                name={\"InvoiceDurationStartDate\"}\n                                                value={data[\"InvoiceDurationStartDate\"]}\n                                                label={\"Invoice Duration Start Date *\"}\n                                                conditiondate={new Date().setFullYear(new Date().getFullYear() + 25)}\n                                                onChange={({ currentTarget: input }, picker) => { this.handleDateChangeEvent(picker.startDate.format(\"YYYY-MM-DD\"), \"InvoiceDurationStartDate\") }}\n                                            />\n                                            {errors[\"InvoiceDurationStartDate\"] && (\n                                                <small className=\"alert alert-danger mt-2 p-1 d-inline-block\">\n                                                    {errors[\"InvoiceDurationStartDate\"]}\n                                                </small>\n                                            )}\n                                        </div>\n                                        <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                                            <SingleDate\n                                                type={\"text\"}\n                                                name={\"InvoiceDurationEndDate\"}\n                                                value={data[\"InvoiceDurationEndDate\"]}\n                                                label={\"Invoice Duration End Date *\"}\n                                                conditiondate={new Date().setFullYear(new Date().getFullYear() + 25)}\n                                                onChange={({ currentTarget: input }, picker) => { this.handleDateChangeEvent(picker.startDate.format(\"YYYY-MM-DD\"), \"InvoiceDurationEndDate\") }}\n                                            />\n                                            {errors[\"InvoiceDurationEndDate\"] && (\n                                                <small className=\"alert alert-danger mt-2 p-1 d-inline-block\">\n                                                    {errors[\"InvoiceDurationEndDate\"]}\n                                                </small>\n                                            )}\n                                        </div>\n                                        <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                                            <div className=\"form-group InvoiceAmount\">\n                                                <label htmlFor=\"InvoiceAmount\">Invoice Net Amount *</label>\n                                                <div className=\"input-group\">\n                                                    <div className=\"input-group-prepend\">\n                                                        <div className=\"input-group-text\">{data.InvoiceCurrencyCode}</div>\n                                                    </div>\n                                                    <input type=\"text\" disabled={true} name=\"InvoiceNetAmount\" id=\"InvoiceNetAmount\" className=\"form-control \" value={parseFloat(data.InvoiceAmount ? data.InvoiceAmount : 0) + parseFloat(data.InvoiceTax1 ? data.InvoiceTax1 : 0)} />\n                                                </div>\n                                                {errors[\"InvoiceCurrencyCode\"] && (\n                                                    <small className=\"alert alert-danger mt-2 p-1 d-inline-block\">\n                                                        {errors[\"InvoiceCurrencyCode\"]}\n                                                    </small>\n                                                )}\n                                            </div>\n                                        </div>\n                                        <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                                            {this.renderCurrentDate(\n                                                \"DueDate\",\n                                                Trans(\"Invoice Due Date *\"),\n                                            )}\n                                        </div>\n                                        <div className=\"col-lg-12 col-md-12 col-sm-12\">\n                                            {this.renderTextarea(\n                                                \"Comment\",\n                                                Trans(\"Notes *\")\n                                            )}\n                                        </div>\n                                    </div>\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-lg-5 border  pr-0 pl-0\">\n                                            <div className=\"bg-light p-1\">\n                                                {mode === \"add\" &&\n                                                    <b>Pending Bookings</b>\n                                                }\n                                                {mode === \"edit\" &&\n                                                    <ul className=\"nav nav-tabs\">\n                                                        <li className=\"nav-item\">\n                                                            <button className={selectedTab === \"PendingBookings\" ? \"nav-link active\" : \"nav-link\"} type=\"button\" onClick={() => { this.setState({ selectedTab: \"PendingBookings\" }) }}>Pending Bookings</button>\n                                                        </li>\n                                                        <li className=\"nav-item\">\n                                                            <button className={selectedTab === \"SavedRemovedBookings\" ? \"nav-link active\" : \"nav-link\"} type=\"button\" onClick={() => { this.setState({ selectedTab: \"SavedRemovedBookings\" }) }}>Removed Bookings({SavedRemovedBookings.result.length})</button>\n                                                        </li>\n                                                    </ul>\n                                                }\n                                            </div>\n                                            <div className=\" border-bottom pt-0 pb-2 \">\n                                                {selectedTab === \"PendingBookings\" &&\n                                                    <div className=\"table-responsive-lg\">\n                                                        <table className=\"table small border-bottom\">\n                                                            <thead className=\"thead-light\">\n                                                                <tr>\n                                                                    <th><input type=\"checkbox\" checked={this.isCheckAllPendingInvoicedBookings()} onChange={(e) => { this.checkAllPendingInvoicedBooking(e) }} /></th>\n                                                                    <th >Booking Date</th>\n                                                                    <th >Reference No.</th>\n                                                                    <th >Booking Amount</th>\n                                                                </tr>\n                                                            </thead>\n                                                            <tbody>\n                                                                {PendingInvoicedBooking.isLoading &&\n                                                                    <TableLoading columns={4} />\n                                                                }\n                                                                {!PendingInvoicedBooking.isLoading && PendingInvoicedBooking.result.filter((param) => { return SelectedInvoicesId.indexOf(param.itineraryDetailId) < 0 }).map((item, key) => {\n                                                                    return (\n                                                                        <tr key={key}>\n                                                                            <td><input type=\"checkbox\" checked={PendingInvoicedBooking.selectedRecordIds.indexOf(item.itineraryDetailId) > -1} onChange={(e) => { this.selectPendingInvoicedBooking(e, item) }} /></td>\n                                                                            <td ><Datecomp date={item.bookingDate} /></td>\n                                                                            <td >{item.bookingRef}</td>\n                                                                            <td >{item.supplierBookingCurrency + \" \" + item.supplierBookingAmount}</td>\n                                                                        </tr>\n                                                                    )\n                                                                })\n                                                                }\n                                                                {!PendingInvoicedBooking.isLoading && PendingInvoicedBooking.result.filter((param) => { return SelectedInvoicesId.indexOf(param.itineraryDetailId) < 0 }).length === 0 && (\n                                                                    <tr><td className=\"text-center\" colSpan={4}>No Bookings to display.</td></tr>\n                                                                )}\n                                                            </tbody>\n                                                        </table>\n                                                        {!PendingInvoicedBooking.isLoading && PendingInvoicedBooking.result.length > 0 && (\n                                                            <div className=\"hide-pageInfo pl-2 pr-2\">\n                                                                <Pagination\n                                                                    pageInfoIndex={pageInfoIndex}\n                                                                    handlePaginationResults={this.handlePaginationResults}\n                                                                />\n                                                            </div>\n                                                        )}\n                                                    </div>\n                                                }\n                                                {selectedTab === \"SavedRemovedBookings\" &&\n                                                    <div className=\"table-responsive-lg\">\n                                                        <table className=\"table small\">\n                                                            <thead className=\"thead-light\">\n                                                                <tr>\n                                                                    <th><input type=\"checkbox\" checked={this.isCheckAllSavedRemovedBooking()} onChange={(e) => { this.checkAllSavedRemovedBooking(e) }} /></th>\n                                                                    <th >Booking Date</th>\n                                                                    <th >Reference No.</th>\n                                                                    <th >Booking Amount</th>\n                                                                </tr>\n                                                            </thead>\n                                                            <tbody>\n                                                                {SavedRemovedBookings.result.map((item, key) => {\n                                                                    return (\n                                                                        <tr key={key}>\n                                                                            <td><input type=\"checkbox\" checked={SavedRemovedBookings.selectedRecordIds.indexOf(item.itineraryDetailId) > -1} onChange={(e) => { this.selectSavedRemovedBooking(e, item) }} /></td>\n                                                                            <td ><Datecomp date={item.bookingDate} /></td>\n                                                                            <td >{item.bookingRef}</td>\n                                                                            <td >{item.supplierBookingCurrency + \" \" + item.supplierBookingAmount}</td>\n                                                                        </tr>\n                                                                    )\n                                                                })\n                                                                }\n                                                                {SavedRemovedBookings.result.length === 0 && (\n                                                                    <tr><td className=\"text-center\" colSpan={4}>No Bookings to display.</td></tr>\n                                                                )}\n                                                            </tbody>\n                                                        </table>\n                                                    </div>\n                                                }\n                                            </div>\n                                        </div>\n                                        <div className=\"col-lg-1 d-flex flex-column justify-content-center align-items-center\">\n                                            {selectedTab === \"SavedRemovedBookings\" &&\n                                                <button className=\"btn btn-sm btn-primary m-1\" onClick={this.AddSavedRemovedBookingToSelectedBooking}>{\">\"}</button>\n                                            }\n                                            {selectedTab === \"PendingBookings\" &&\n                                                <button className=\"btn btn-sm btn-primary m-1\" onClick={this.AddToSelectedBooking}>{\">\"}</button>\n                                            }\n                                            <button className=\"btn btn-sm btn-primary m-1\" onClick={this.RemoveFromSelectedBooking}>{\"<\"}</button>\n                                        </div>\n                                        <div className=\"col-lg-6 border pr-0 pl-0\">\n                                            <div className=\"bg-light p-1\">\n                                                <b>Selected Bookings</b>\n                                            </div>\n                                            <div className=\"pt-0 pb-2 \">\n                                                <div className=\"table-responsive-lg\">\n                                                    <table className=\"table small\">\n                                                        <thead className=\"thead-light\">\n                                                            <tr>\n                                                                <th><input type=\"checkbox\" checked={this.isCheckAllSelectedBooking()} onChange={(e) => { this.checkAllSelectedBooking(e) }} /></th>\n                                                                <th >Booking Date</th>\n                                                                <th >Reference No.</th>\n                                                                <th >Booking Amount</th>\n                                                                <th >Change Supplier Amount</th>\n                                                                <th >Supplier Amount</th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                            {SelectedBookingToInvoice.isLoading &&\n                                                                <TableLoading columns={6} />\n                                                            }\n                                                            {!SelectedBookingToInvoice.isLoading && SelectedBookingToInvoice.result.map((item, key) => {\n                                                                return (\n                                                                    <tr key={key}>\n                                                                        <td><input type=\"checkbox\" checked={SelectedBookingToInvoice.selectedRecordIds.indexOf(item.itineraryDetailId) > -1} onChange={(e) => { this.selectBookingToInvoice(e, item) }} /></td>\n                                                                        <td ><Datecomp date={item.bookingDate} /></td>\n                                                                        <td style={{ wordBreak: \"break-word\" }}>{item.bookingRef}</td>\n                                                                        <td >{item.supplierBookingCurrency + \" \" + item.supplierBookingAmount}</td>\n                                                                        <td><input type=\"checkbox\" checked={item.IsPending === true} onChange={(e) => { this.changePendingCheckbox(e, item) }} /></td>\n                                                                        <td >\n                                                                            {item.IsPending &&\n                                                                                <div className=\"input-group input-group-sm\">\n                                                                                    <div className=\"input-group-prepend\">\n                                                                                        <div className=\"input-group-text\">{item.supplierBookingCurrency}</div>\n                                                                                    </div>\n                                                                                    <input type=\"number\" style={{ minWidth: \"75px\" }}\n                                                                                        className=\"form-control\"\n                                                                                        value={item.supplierReconciledAmout}\n                                                                                        onChange={(e) => { this.changesupplierReconciledAmout(e, item) }}></input>\n                                                                                </div>\n                                                                            }\n                                                                        </td>\n                                                                    </tr>\n                                                                )\n                                                            })\n                                                            }\n                                                            {!SelectedBookingToInvoice.isLoading && SelectedBookingToInvoice.result.length === 0 && (\n                                                                <tr><td className=\"text-center\" colSpan={6}>Add Pending Bookings.</td></tr>\n                                                            )}\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-lg-4\">\n                                            <div className=\"form-group DeficiatAmount\">\n                                                <label htmlFor=\"DeficiatAmount\">Deficit Amount</label>\n                                                <div className=\"input-group\">\n                                                    <div className=\"input-group-prepend\">\n                                                        <div className=\"input-group-text\">{data.InvoiceCurrencyCode}</div>\n                                                    </div>\n                                                    <input type=\"text\" disabled={true} name=\"DeficiatAmount\" id=\"DeficiatAmount\" className=\"form-control \" value={isNaN(data.ReconcileAmount - data.InvoiceAmount) ? 0 : data.ReconcileAmount - data.InvoiceAmount} />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-lg-4\">\n                                            <div className=\"form-group ReconcileAmount\">\n                                                <label htmlFor=\"ReconcileAmount\">Reconcile Amount</label>\n                                                <div className=\"input-group\">\n                                                    <div className=\"input-group-prepend\">\n                                                        <div className=\"input-group-text\">{data.InvoiceCurrencyCode}</div>\n                                                    </div>\n                                                    <input type=\"text\" disabled={true} name=\"ReconcileAmount\" id=\"ReconcileAmount\" className=\"form-control \" value={parseFloat(data.ReconcileAmount ? data.ReconcileAmount : 0)} />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-lg-12\">\n                                            {errors[\"BRNList\"] && (\n                                                <small className=\"alert alert-danger mt-2 p-1 d-inline-block\">\n                                                    {errors[\"BRNList\"]}\n                                                </small>\n                                            )}\n                                            <button\n                                                className=\"btn btn-primary mr-2 float-right\"\n                                                type=\"submit\"\n                                                onClick={() => this.saveInvoiceClick()}\n                                            >\n                                                {isLoading ? (\n                                                    <span\n                                                        className=\"spinner-border spinner-border-sm mr-2\"\n                                                        role=\"status\"\n                                                        aria-hidden=\"true\"\n                                                    ></span>\n                                                ) : null}\n                                                {Trans(\"_save\")}\n                                            </button>\n                                            <button\n                                                className=\"btn btn-secondary mr-2 float-right\"\n                                                type=\"submit\"\n                                                onClick={() => this.RedirectToInvoiceList()}\n                                            >\n                                                {Trans(\"_cancel\")}\n                                            </button>\n                                        </div>\n                                    </div>\n                                    {mode === \"edit\" &&\n\n                                        <div className=\"row \">\n                                            <div className=\"col-lg-12\">\n                                                <div className=\"p-1 text-primary\">\n                                                    <h4>Notes History</h4>\n                                                </div>\n                                                <div className=\"pt-0 border\">\n                                                    <div className=\"table-responsive-lg\">\n                                                        <table className=\"table\">\n                                                            <thead className=\"thead-light\">\n                                                                <tr className=\"d-flex\">\n                                                                    <th className=\"col-4\">Date</th>\n                                                                    <th className=\"col-8\">Notes</th>\n                                                                </tr>\n                                                            </thead>\n                                                            <tbody>\n                                                                {commentHistory.map((item) => {\n                                                                    return (\n                                                                        <tr className=\"d-flex\">\n                                                                            <td className=\"col-4\"><Datecomp date={moment.utc(item.commentDate).local()} />{\" \" + moment.utc(item.commentDate).local().format(\"HH:mm:ss\")}</td>\n                                                                            <td className=\"col-8\">{item.comment}</td>\n                                                                        </tr>)\n                                                                })}\n                                                            </tbody>\n                                                        </table>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                    }\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div >\n        )\n    }\n}\nexport default SupplierInvoice\n\n","E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\supplier-payment.jsx",["1948","1949","1950","1951","1952"],"import React, { Component } from 'react'\nimport QuotationMenu from \"../../components/quotation/quotation-menu\";\nimport SVGIcon from \"../../helpers/svg-icon\";\nimport { Trans } from \"../../helpers/translate\";\nimport BusinessDropdown from \"../../components/reports/business-dropdown\";\nimport { apiRequester } from \"../../services/requester-report\";\nimport SupplierBRNPayment from \"../../components/reports/supplier-brn-payment\";\nimport PaymentInfoForm from \"../../components/reports/supplier-payment-form\";\nimport InvoiceSelection from \"../../components/reports/supplier-invoice-payment\";\nimport SupplierPaymentSteps from \"../../components/reports/supplier-payment-steps\";\nimport DownloadInvoice from \"../../components/reports/supplier-invoice-details-pdf\";\nimport PrintInvoice from \"../../components/reports/supplier-invoice-details-print\";\nclass SupplierPayment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {\n                \"SupplierId\": \"\",\n                \"BusinessId\": \"\",\n                \"ProviderId\": this.props.userInfo.agentID,\n                \"CreatedBy\": this.props.userInfo.userID\n            },\n            errors: {},\n            supplierList: [],\n            isLoading: false,\n            InvoiceTab: {\n                result: [],\n                pageInfo: {\n                    currentPage: 0,\n                    pageLength: 10,\n                    hasNextPage: false,\n                    hasPreviousPage: false,\n                    totalResults: 0\n                },\n                filters: { pagenumber: 1, pagesize: 10 },\n                selectedRecords: [],\n                isLoading: false,\n                selectedRecordIds: []\n\n            },\n            BRNTab: {\n                result: [],\n                selectedRecords: [],\n                isLoading: true,\n                selectedRecordIds: []\n            },\n            paymentType: \"\",\n            display: \"none\",\n            isSupplierSet: false,\n            isFilters: false,\n            statusList: [],\n            isExport: false,\n            isPrint: false,\n            exportData: {}\n\n        };\n    }\n    handleMenuClick = (req, redirect) => {\n        if (redirect) {\n            if (redirect === \"back-office\")\n                this.props.history.push(`/Backoffice/${req}`);\n            else {\n                this.props.history.push(`/Reports`);\n            }\n            window.location.reload();\n        } else {\n            this.props.history.push(`${req}`);\n        }\n    };\n    getStatusList = () => {\n        let reqURL = \"/reconciliation/customer/status?type=reconcilition\"\n        apiRequester(\n            reqURL,\n            {},\n            function (data) {\n                let arr = [];\n                for (let value of data.response) {\n                    if (value === \"All\") {\n                        arr.push({ name: value, value: \"\" })\n                    }\n                    else {\n                        arr.push({ name: value, value })\n                    }\n                }\n                this.setState({ statusList: arr })\n            }.bind(this),\n            \"GET\"\n        );\n    }\n    getSupplier = (businessID) => {\n        this.setState({ isLoading: true });\n        const { userInfo: { agentID } } = this.props;\n        let reqURL = \"reconciliation/supplier/business/suppliers?businessid=\" + businessID + \"&providerid=\" + agentID;\n        apiRequester(\n            reqURL,\n            {},\n            function (data) {\n                this.setState({ isLoading: false, supplierList: data.response });\n            }.bind(this),\n            \"GET\"\n        );\n    }\n    handleBusiness = (businessID, newSupplierList) => {\n        let { data, InvoiceTab } = this.state;\n        data.BusinessId = businessID;\n        data.SupplierId = \"\";\n        const supplierList = newSupplierList;\n        InvoiceTab.selectedRecords = [];\n        InvoiceTab.selectedRecordIds = [];\n        this.setState({ data, supplierList, display: \"none\", isSupplierSet: false });\n    }\n    getBRNList = () => {\n        let { data, BRNTab, InvoiceTab } = this.state;\n        BRNTab.isLoading = true;\n        this.setState({ BRNTab });\n        var reqURL = \"reconciliation/supplier/invoices/getbrnlist?supplierid=\" + data.SupplierId +\n            \"&selectedinvoiceids=\" + InvoiceTab.selectedRecordIds.join(\",\");\n        apiRequester(\n            reqURL,\n            {},\n            function (responseData) {\n                BRNTab.result = responseData.response;\n                BRNTab.isLoading = false;\n                this.setState({\n                    BRNTab\n                });\n            }.bind(this),\n            \"GET\"\n        );\n    }\n    getInvoices() {\n        let { data, InvoiceTab } = this.state;\n        if (!(data[\"SupplierId\"] && data[\"BusinessId\"])) {\n            return;\n        }\n        let { filters } = InvoiceTab;\n        InvoiceTab.isLoading = true;\n        this.setState({ InvoiceTab, display: \"InvoiceSelection\", isSupplierSet: true });\n        let reqURL = \"reconciliation/supplier/invoice/list?businessid=\" + data[\"BusinessId\"]\n            + \"&supplierid=\" + data[\"SupplierId\"]\n        for (let key of Object.keys(filters)) {\n            if (filters[key]) {\n                if (!(key === \"invoicereconciliationstatus\" && filters[key] === \"All\")) {\n                    reqURL = reqURL + `&${key}=${filters[key]}`\n                }\n            }\n        }\n        apiRequester(\n            reqURL,\n            {},\n            function (resonseData) {\n                if (typeof resonseData.response === \"string\") {\n                    resonseData.response = [];\n                    InvoiceTab.result = [];\n                    InvoiceTab.isLoading = false;\n                    this.setState({ InvoiceTab });\n                    return;\n                }\n                InvoiceTab.result = resonseData.response;\n                InvoiceTab.pageInfo = {\n                    currentPage: resonseData?.pageInfo?.page - 1,\n                    pageLength: resonseData?.pageInfo?.pageSize,\n                    hasNextPage: resonseData?.pageInfo?.totalRecords > resonseData?.pageInfo?.page * resonseData?.pageInfo?.pageSize,\n                    hasPreviousPage: resonseData?.pageInfo?.page > 1,\n                    totalResults: resonseData?.pageInfo?.totalRecords\n                };\n                InvoiceTab.isLoading = false;\n                this.setState({\n                    InvoiceTab\n                });\n            }.bind(this),\n            \"GET\"\n        );\n    }\n    handleInvoiceFilters = (filters) => {\n        let { InvoiceTab } = this.state;\n        InvoiceTab.filters = filters;\n        InvoiceTab.selectedRecords = [];\n        InvoiceTab.selectedRecordIds = [];\n        this.setState({ InvoiceTab, display: \"none\" }, () => { this.getInvoices() })\n    }\n    handleInvoicePaginationResults = (pageNumber, pageLength) => {\n        let { InvoiceTab } = this.state;\n        InvoiceTab.filters[\"pagenumber\"] = parseInt(pageNumber) + 1\n        InvoiceTab.filters[\"pagesize\"] = pageLength\n        this.setState({ InvoiceTab }, () => { this.getInvoices() })\n    }\n    handleDataChange = (e) => {\n        let { data, InvoiceTab } = this.state;\n        data[e.target.name] = e.target.value;\n        InvoiceTab.selectedRecords = [];\n        InvoiceTab.selectedRecordIds = [];\n        const isSupplierSet = e.target.value && e.target.value != \"\"\n        this.setState({ data, InvoiceTab, display: \"none\", isSupplierSet }, () => {\n            this.getInvoices();\n        });\n    }\n    showSaveForm = (amount, selectedRecords, paymentType, selectedRecordIds) => {\n        let InvoiceTab = this.state.InvoiceTab;\n        let BRNTab = this.state.BRNTab;\n        if (paymentType === \"full\") {\n            InvoiceTab.selectedRecordIds = selectedRecordIds;\n            InvoiceTab.selectedRecords = selectedRecords;\n        } else if (paymentType === \"brnPayment\") {\n            BRNTab.selectedRecordIds = selectedRecordIds;\n            BRNTab.selectedRecords = selectedRecords;\n        } else if (paymentType === \"partial\") {\n            BRNTab.selectedRecordIds = [];\n            BRNTab.selectedRecords = [];\n            BRNTab.isLoading = true;\n            this.setState({ display: \"BRNSelection\", Amount: amount, InvoiceTab, BRNTab, paymentType }, () => { this.getBRNList(); });\n            return;\n        }\n        this.setState({ display: paymentType === \"full\" || paymentType === \"brnPayment\" ? \"SaveForm\" : \"BRNSelection\", Amount: amount, InvoiceTab, BRNTab, paymentType });\n    }\n    RedirectToInvoiceList = () => {\n        this.props.history.push(`/SupplierInvoices`);\n    }\n    back = (display) => {\n        this.setState({ display });\n    }\n    stepClick = (step) => {\n        switch (step) {\n            case \"SelectSupplier\":\n                let { data } = this.state;\n                data.SupplierId = \"\";\n                this.setState({ display: \"none\", data, isSupplierSet: false })\n                break;\n            case \"InvoiceSelection\":\n                this.setState({ display: \"InvoiceSelection\" })\n                break;\n            case \"BRNSelection\":\n                this.setState({ display: \"BRNSelection\" })\n                break;\n        }\n    }\n    getSupplier = (businessID) => {\n        this.setState({ isLoading: true });\n        const { userInfo: { agentID } } = this.props;\n        let reqURL = \"reconciliation/supplier/business/suppliers?businessid=\" + businessID + \"&providerid=\" + agentID;\n        apiRequester(\n            reqURL,\n            {},\n            function (data) {\n                this.setState({ isLoading: false, supplierList: data.response });\n            }.bind(this),\n            \"GET\"\n        );\n    }\n    showHideFilters = (isFilters) => {\n        this.setState({ isFilters });\n    }\n    componentDidMount() {\n        this.getStatusList();\n        const { location: { Supplierinfo } } = this.props;\n        if (Supplierinfo && Supplierinfo.BusinessId && Supplierinfo.SupplierId) {\n            let { data } = this.state;\n            data.BusinessId = Supplierinfo.BusinessId;\n            data.SupplierId = Supplierinfo.SupplierId;\n            this.setState({ data });\n            this.getSupplier(data.BusinessId);\n            this.getInvoices();\n        }\n        else {\n            this.RedirectToInvoiceList();\n        }\n    }\n    btnaction = (invoiceId, type) => {\n        const { userInfo: { agentID } } = this.props\n        let reqURL = \"/reconciliation/supplier/invoice/report?invoiceid=\" + invoiceId\n            + \"&providerid=\" + agentID\n        apiRequester(\n            reqURL,\n            {},\n            function (data) {\n                this.setState({ exportData: data.response, isExport: type === \"PDF\", isPrint: type === \"Print\" });\n            }.bind(this),\n            \"GET\"\n        );\n    }\n    render() {\n        const { data, errors, supplierList, BRNTab, isSupplierSet, display, paymentType } = this.state;\n        return (\n            <div>\n                <div className=\"title-bg pt-3 pb-3 mb-3\">\n                    <div className=\"container\">\n                        <h1 className=\"text-white m-0 p-0 f30\">\n                            <SVGIcon\n                                name=\"file-text\"\n                                width=\"24\"\n                                height=\"24\"\n                                className=\"mr-3\"\n                            ></SVGIcon>\n                            Supplier Invoice Payment\n                        </h1>\n                    </div>\n                </div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-3 hideMenu\">\n                            <QuotationMenu handleMenuClick={this.handleMenuClick} />\n                        </div>\n\n                        <div className=\"col-lg-9 \">\n                            <div className=\"container \">\n                                <SupplierPaymentSteps isSupplierSet={isSupplierSet} display={display} paymentType={paymentType} stepClick={this.stepClick} />\n                                <div className=\"row mt-2\">\n                                    <div className=\"col-lg-2\"></div>\n                                    <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                                        <div className={\"form-group \" + \"business\"}>\n                                            <BusinessDropdown providerID={data.ProviderId} handleBusiness={this.handleBusiness} BusinessId={data.BusinessId} disabled={!data.BusinessId === false} />\n                                            {errors[\"BusinessId\"] && (\n                                                <small className=\"alert alert-danger mt-2 p-1 d-inline-block\">\n                                                    {errors[\"BusinessId\"]}\n                                                </small>\n                                            )}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                                        <div className={\"form-group \" + \"SupplierId\"}>\n                                            <label htmlFor={\"SupplierId\"}>{\"Supplier *\"}</label>\n                                            <div className=\"input-group\">\n                                                <select\n                                                    value={data.SupplierId}\n                                                    onChange={(e) => this.handleDataChange(e)}\n                                                    name={\"SupplierId\"}\n                                                    id={\"SupplierId\"}\n                                                    disabled={!data.SupplierId === false}\n                                                    className={\"form-control\"}>\n                                                    <option key={0} value={''}>Select</option>\n                                                    {supplierList.map((option, key) => (\n\n                                                        <option\n                                                            key={key}\n                                                            value={\n                                                                option[\"providerId\"]\n                                                            }\n                                                        >\n                                                            {option[\"fullName\"]}\n                                                        </option>\n                                                    ))}\n                                                </select>\n                                            </div>\n                                            {errors[\"SupplierId\"] && (\n                                                <small className=\"alert alert-danger mt-2 p-1 d-inline-block\">\n                                                    {errors[\"SupplierId\"]}\n                                                </small>\n                                            )}\n                                        </div>\n                                    </div>\n                                </div>\n                                {!isSupplierSet && (\n                                    <div className=\"row\">\n                                        <div className=\"col-lg-4 mt-4\">\n                                            <button\n                                                className=\"btn mr-2 float-left btn-secondary\"\n                                                type=\"submit\"\n                                                onClick={() => this.RedirectToInvoiceList()}\n                                            >\n                                                Back To Invoices\n                                            </button>\n                                        </div>\n                                    </div>\n                                )}\n                                {this.state.display === \"InvoiceSelection\" && (\n                                    <InvoiceSelection isFilters={this.state.isFilters} showHideFilters={this.showHideFilters} handleFilters={this.handleInvoiceFilters} showSaveForm={this.showSaveForm} {...this.state.InvoiceTab} handlePaginationResults={this.handleInvoicePaginationResults} btnaction={this.btnaction} RedirectToInvoiceList={this.RedirectToInvoiceList} status={this.state.statusList} />\n                                )}\n                                {this.state.display === \"BRNSelection\" && (\n                                    <SupplierBRNPayment showSaveForm={this.showSaveForm} {...BRNTab} back={this.back} />\n                                )}\n                                {this.state.display === \"SaveForm\" && (this.state.paymentType === \"full\" || this.state.paymentType === \"brnPayment\") && (\n                                    <PaymentInfoForm Amount={this.state.Amount} back={this.back} SelectedRecords={this.state.paymentType === \"full\" ? this.state.InvoiceTab.selectedRecords : this.state.BRNTab.selectedRecords} paymentType={this.state.paymentType} onSaveSuccess={this.RedirectToInvoiceList} headerData={data} />\n                                )}\n                            </div>\n                        </div>\n                        {this.state.isExport && (\n                            <DownloadInvoice\n                                filename=\"\"\n                                onExportComplete={\n                                    () => { this.setState({ isExport: false, exportData: {} }) }\n                                }\n                                data={this.state.exportData}\n                            />\n                        )}\n                        {this.state.isPrint && (\n                            <PrintInvoice\n                                filename=\"\"\n                                onExportComplete={\n                                    () => { this.setState({ isPrint: false, exportData: {} }) }\n                                }\n                                data={this.state.exportData}\n                            />\n                        )}\n                    </div>\n                </div>\n            </div >\n        )\n    }\n}\nexport default SupplierPayment;\n\n","E:\\Amit\\Projects\\booking-engine\\src\\screens\\manual-booking.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\admin\\employee-form.jsx",["1953","1954","1955","1956","1957","1958","1959","1960","1961"],"import React from \"react\";\nimport Form from \"../../components/common/form\";\nimport QuotationMenu from \"../../components/quotation/quotation-menu\";\nimport { apiRequester } from \"../../services/requester-report\";\nimport Loader from \"../../components/common/loader\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\nimport { Trans } from \"../../helpers/translate\";\nimport ManageEmployee from \"../../assets/images/dashboard/manage-employee.png\";\nimport MessageBar from '../../components/admin/message-bar';\nclass SupplierInvoice extends Form {\n    constructor(props) {\n        super(props);\n        this.state = {\n            providerID: this.props.userInfo.portalAgentID,\n            data: {\n                ProviderID: this.props.userInfo.agentID,\n                FirstName: \"\",\n                MiddleName: \"\",\n                LastName: \"\",\n                Address1: \"\",\n                Address2: \"\",\n                CityID: \"\",\n                StateID: \"\",\n                CountryID: \"\",\n                PostalCode: \"\",\n                BranchID: \"\",\n                IsActive: true,\n                CrewNatureID: 1,\n                CellPhone: \"\",\n                BirthDate: \"1980-12-01\",\n                EmailID: \"\",\n                Notes: \"\",\n                UserName: \"\",\n                Password: \"\",\n                ConfirmPassword: \"\",\n            },\n            errors: {},\n            isLoading: false,\n            mode: \"add\",\n            CountryList: [],\n            StateList: [],\n            CityList: [],\n            UserRoleList: [],\n            BranchList: [],\n            SelectedRoleID: []\n        };\n    }\n    handleMenuClick = (req, redirect) => {\n        if (redirect) {\n            if (redirect === \"back-office\")\n                this.props.history.push(`/Backoffice/${req}`);\n            else {\n                this.props.history.push(`/Reports`);\n            }\n            window.location.reload();\n        } else {\n            this.props.history.push(`${req}`);\n        }\n    };\n    getUserRoleList = () => {\n        const { providerID } = this.state;\n        const reqOBJ = {\n            request: {\n                providerID\n            }\n        };\n        let reqURL = \"/admin/lookup/role\";\n        this.setState({ LoadingUserRoles: true });\n        apiRequester(reqURL, reqOBJ, function (resonsedata) {\n            this.setState({ UserRoleList: resonsedata.response, LoadingUserRoles: false })\n        }.bind(this), \"POST\");\n    }\n    getBranchList = () => {\n        const { providerID } = this.state;\n        const reqOBJ = {\n            request: {\n                providerID\n            }\n        };\n        let reqURL = \"/admin/lookup/branch\";\n        this.setState({ LoadingBranchList: true });\n        apiRequester(reqURL, reqOBJ, function (resonsedata) {\n            this.setState({ BranchList: resonsedata.response, LoadingBranchList: false })\n        }.bind(this), \"POST\");\n    }\n    getCountryList = () => {\n        const { providerID } = this.state;\n        const reqOBJ = {\n            request: {\n                providerID\n            }\n        };\n        let reqURL = \"/admin/lookup/country\";\n        this.setState({ LoadingCountryList: true });\n        apiRequester(reqURL, reqOBJ, function (resonsedata) {\n            resonsedata.response = resonsedata.response.sort((a, b) => (a.countryName > b.countryName) ? 1 : ((b.countryName > a.countryName) ? -1 : 0));\n            this.setState({ CountryList: resonsedata.response, LoadingCountryList: false })\n        }.bind(this), \"POST\");\n    }\n    getStateList = (countryId, isLoadingEditMode) => {\n        let { data } = this.state;\n        if (!isLoadingEditMode) {\n            data.StateID = \"\";\n            data.CityID = \"\";\n        }\n        if (countryId === \"\") {\n            this.setState({ StateList: [], CityList: [], data });\n            return;\n        }\n        const reqOBJ = {\n            request: {\n                IsActive: \"true\",\n                CountryID: countryId\n            }\n        };\n        let reqURL = \"/admin/lookup/state\";\n        this.setState({ LoadingStateList: true });\n        apiRequester(reqURL, reqOBJ, function (resonsedata) {\n            this.setState({ StateList: resonsedata.response, CityList: [], data, LoadingStateList: false });\n            if (isLoadingEditMode && data.StateID) {\n                this.getCityList(data.StateID, true);\n            }\n        }.bind(this), \"POST\");\n    }\n    getCityList = (stateId, isLoadingEditMode) => {\n        let { data } = this.state;\n        if (!isLoadingEditMode)\n            data.CityID = \"\";\n        if (stateId === \"\") {\n            this.setState({ CityList: [], data });\n            return;\n        }\n        const reqOBJ = {\n            request: {\n                IsActive: \"true\",\n                StateID: stateId,\n                CountryID: data.CountryID\n            }\n        };\n        let reqURL = \"/admin/lookup/city\";\n        this.setState({ LoadingCityList: true });\n        apiRequester(reqURL, reqOBJ, function (resonsedata) {\n            this.setState({ CityList: resonsedata.response, data, LoadingCityList: false });\n        }.bind(this), \"POST\");\n    }\n    componentDidMount() {\n        this.getCountryList();\n        this.getUserRoleList();\n        this.getBranchList();\n        const { mode, id } = this.props.match.params;\n        if (mode.toLowerCase() === \"edit\" || mode.toLowerCase() === \"view\") {\n            this.setState({ mode: mode.toLowerCase() });\n            this.getEmployeeDetails(id);\n        }\n    }\n    getEmployeeDetails = (id) => {\n        this.setState({ isLoading: true, isEditModeLoading: true });\n        const reqOBJ = {\n            request: {\n                CrewId: id\n            }\n        };\n        let reqURL = \"admin/employee/details\";\n        apiRequester(reqURL, reqOBJ, function (resonsedata) {\n            if (resonsedata.response.length > 0) {\n                const response = resonsedata.response[0];\n                const data = {\n                    CrewID: response.crewId,\n                    FirstName: response.firstName,\n                    MiddleName: response.middleName,\n                    LastName: response.lastName,\n                    Address1: response.address1,\n                    Address2: \"\",\n                    CityID: response.city,\n                    StateID: response.state,\n                    CountryID: response.country,\n                    PostalCode: \"\",\n                    CrewNatureID: response.crewNatureID,\n                    CellPhone: response.cellPhone,\n                    BirthDate: \"1980-12-01\",\n                    EmailID: response.email,\n                    Notes: \"\",\n                    BranchID: response.branchID,\n                    IsActive: response.isActive === \"Yes\"\n                };\n                if (response.userID) {\n                    this.setState({ data }, () =>\n                        this.getEmployeeUserDetails(response.userID, id));\n                } else\n                    this.setState({ data, isLoading: false, isEditModeLoading: false });\n                if (response.country) {\n                    this.getStateList(response.country, true);\n                }\n            }\n        }.bind(this), \"POST\");\n    }\n    getEmployeeUserDetails = (id, crewid) => {\n        this.setState({ isLoading: true, isEditModeLoading: true });\n        let reqURL =\n            \"admin/employee/user/details?crewid=\" + crewid + \"&userid=\" + id;\n        apiRequester(reqURL, {}, function (resonsedata) {\n            if (resonsedata.response.length > 0) {\n                const response = resonsedata.response[0];\n                let { data } = this.state;\n                data.BranchID = response.defaultBranch;\n                data.UserName = response.userDisplayName;\n                data.LanguageId = response.language;\n                data.UserID = response.userId;\n                this.setState({ isLoading: false, SelectedRoleID: response.rolesID.split(\",\").map(Number), isEditModeLoading: false })\n            }\n        }.bind(this), \"GET\");\n    };\n    validateInformation = () => {\n        const errors = {};\n        const { data, SelectedRoleID, mode } = this.state;\n\n        if (!this.validateFormData(data.FirstName, \"require\"))\n            errors.FirstName = \"First Name required\";\n        if (!this.validateFormData(data.LastName, \"require\"))\n            errors.LastName = \"Last Name required\";\n        if (!this.validateFormData(data.Address1, \"require\"))\n            errors.Address1 = \"Address required\";\n        if (!this.validateFormData(data.CityID, \"require\"))\n            errors.CityID = \"City required\";\n        if (!this.validateFormData(data.StateID, \"require\"))\n            errors.StateID = \"State required\";\n        if (!this.validateFormData(data.CountryID, \"require\"))\n            errors.CountryID = \"Country required\";\n        if (!this.validateFormData(data.BranchID, \"require\"))\n            errors.BranchID = \"Branch required\";\n        //Phone number\n\n        if (!this.validateFormData(data.CellPhone, \"require\"))\n            errors.CellPhone = \"Phone Number required\";\n        else if (!this.validateFormData(data.CellPhone, \"require_phoneNumber\"))\n            errors.CellPhone = Trans(\"_error_phoneNumber_phonenumber\");\n        else if (!this.validateFormData(data.CellPhone, \"phonenumber\"))\n            errors.CellPhone = Trans(\"_error_phoneNumber_phonenumber\");\n        else if (\n            !this.validateFormData(data.CellPhone, \"phonenumber_length\", {\n                min: 8,\n                max: 14\n            })\n        )\n            errors.CellPhone = Trans(\"_error_phoneNumber_phonenumber_length\");\n\n        if (!this.validateFormData(data.EmailID, \"require\"))\n            errors.EmailID = \"Email required\";\n        else if (!this.validateFormData(data.EmailID, \"email\"))\n            errors.EmailID = \"Email is not valid\";\n        if (mode === \"add\") {\n            if (!this.validateFormData(data.UserName, \"require\"))\n                errors.UserName = \"User Name required\";\n            if (!this.validateFormData(data.Password, \"require\"))\n                errors.Password = \"Password required\";\n            else if (data.Password.length < 6)\n                errors.Password = \"Password should be of Minimum 6 letters\";\n            if (!this.validateFormData(data.ConfirmPassword, \"require\"))\n                errors.ConfirmPassword = \"Confirm Password required\";\n            else if (data.ConfirmPassword != data.Password)\n                errors.ConfirmPassword = \"Confirm Password not matching with Password\";\n        }\n        if (mode === \"add\" || data.UserID) {\n            if (SelectedRoleID.length === 0)\n                errors.SelectedRoleID = \"Select at least one role\";\n        }\n        return Object.keys(errors).length === 0 ? null : errors;\n    }\n    saveEmployeeClick = () => {\n        const errors = this.validateInformation();\n        this.setState({ errors: errors || {} });\n        if (errors) return;\n        this.saveEmployee();\n    };\n    saveEmployee = () => {\n        const { data, mode } = { ...this.state };\n        let EmployeeInfo = Object.assign({}, data);\n        this.setState({ isLoading: true });\n        let reqURL = `/admin/employee/${mode === \"add\" ? \"add\" : \"update\"}`;\n        EmployeeInfo.BranchID = [EmployeeInfo.BranchID];\n        let UserInfo = {};\n        let UpdateEmployee = false;\n        if (mode === \"add\") {\n            UserInfo = {\n                UserName: EmployeeInfo.UserName,\n                Password: EmployeeInfo.Password,\n                ConfirmPassword: EmployeeInfo.ConfirmPassword,\n                ProviderID: EmployeeInfo.ProviderID\n            }\n            delete EmployeeInfo[\"UserName\"];\n            delete EmployeeInfo[\"Password\"];\n            delete EmployeeInfo[\"ConfirmPassword\"];\n        } else {\n            if (EmployeeInfo.UserID && EmployeeInfo.UserID != \"\")\n                UpdateEmployee = true;\n            UserInfo = {\n                UserDisplayName: EmployeeInfo.UserName,\n                Language: EmployeeInfo.LanguageId,\n                UserID: EmployeeInfo.UserID\n            }\n            delete EmployeeInfo[\"UserName\"];\n            delete EmployeeInfo[\"LanguageId\"];\n            delete EmployeeInfo[\"UserID\"];\n        }\n        UserInfo.BranchID = EmployeeInfo.BranchID;\n        let reqOBJ = { request: EmployeeInfo };\n        apiRequester(\n            reqURL,\n            reqOBJ,\n            function (resonsedata) {\n                if (resonsedata.error) {\n                    let { errors } = this.state;\n                    errors.SaveError = resonsedata.error;\n                    this.setState({ isLoading: false, errors });\n                }\n                else if (mode === \"edit\" && resonsedata?.response?.status === \"success\") {\n                    if (UpdateEmployee)\n                        this.updateEmployeeUser(UserInfo);\n                    else {\n                        this.setState({ isLoading: false });\n                        this.setState({ showSuccessMessage: true });\n                    }\n                }\n                else if (mode === \"add\") {\n                    if (resonsedata.response && resonsedata.response.crewId) {\n                        UserInfo.CrewID = resonsedata.response.crewId;\n                        this.createEmployeeUser(UserInfo);\n                    } else {\n                        let { errors } = this.state;\n                        errors.SaveError = \"Oops! something went wrong\";\n                        this.setState({ isLoading: false, errors });\n                    }\n                }\n            }.bind(this),\n            \"POST\"\n        );\n    };\n    createEmployeeUser = (UserInfo) => {\n        const { SelectedRoleID } = { ...this.state };\n        let reqURL = `/admin/employee/login/create`;\n\n        UserInfo.UserDisplayName = UserInfo.UserName;\n        UserInfo.Language = 1;\n        UserInfo.HintQuestion = 1;\n        UserInfo.OtherHintQuestion = \"\";\n        UserInfo.HintAnswer = \"\";\n        UserInfo.SelectedRoleID = SelectedRoleID;\n        let reqOBJ = { request: UserInfo };\n        apiRequester(\n            reqURL,\n            reqOBJ,\n            function (resonsedata) {\n                if (resonsedata.error) {\n                    let { errors } = this.state;\n                    errors.SaveError = resonsedata.error;\n                    this.setState({ isLoading: false, errors });\n                    this.deleteEmployee(UserInfo.CrewID)\n                } else {\n                    this.setState({ isLoading: false });\n                    this.setState({ showSuccessMessage: true });\n                }\n            }.bind(this),\n            \"POST\"\n        );\n    }\n    updateEmployeeUser = (UserInfo) => {\n        const { SelectedRoleID } = { ...this.state };\n        let reqURL = `/admin/employee/login/update`;\n        UserInfo.SelectedRoleID = SelectedRoleID;\n        let reqOBJ = { request: UserInfo };\n        apiRequester(\n            reqURL,\n            reqOBJ,\n            function (resonsedata) {\n                if (resonsedata.error) {\n                    let { errors } = this.state;\n                    errors.SaveError = resonsedata.error;\n                    this.setState({ isLoading: false, errors });\n                } else {\n                    this.setState({ isLoading: false });\n                    this.setState({ showSuccessMessage: true });\n                }\n            }.bind(this),\n            \"POST\"\n        );\n    }\n    deleteEmployee = (crewId) => {\n        let reqURL = \"admin/employee/delete\";\n        let reqOBJ = {\n            Request: {\n                CrewID: crewId\n            }\n        };\n        apiRequester(\n            reqURL,\n            reqOBJ,\n            function (resonsedata) {\n\n            }.bind(this),\n            \"POST\"\n        );\n    }\n    handleDataChange = (e) => {\n        let { data } = this.state;\n        data[e.target.name] = e.target.value;\n        this.setState({ data });\n        if (e.target.name === \"CountryID\")\n            this.getStateList(e.target.value);\n        if (e.target.name === \"StateID\")\n            this.getCityList(e.target.value);\n    }\n    checkRoleId = (e, roleId) => {\n        let { SelectedRoleID } = this.state;\n        if (e.target.checked) {\n            SelectedRoleID.push(roleId);\n        } else {\n            let roleIndex = SelectedRoleID.indexOf(roleId);\n            SelectedRoleID.splice(roleIndex, 1);\n        }\n        this.setState({ SelectedRoleID });\n    }\n    RedirectToEmployeeList = () => {\n        this.props.history.push(`/EmployeeList`);\n    };\n    IsActiveChange = (value) => {\n        const { data } = this.state;\n        data.IsActive = value;\n        this.setState({ data });\n    }\n    render() {\n        const { data, errors, mode, isLoading, isEditModeLoading, CountryList, StateList, CityList, UserRoleList, SelectedRoleID, BranchList, LoadingUserRoles, LoadingBranchList, LoadingCountryList, LoadingStateList, LoadingCityList, showSuccessMessage } = this.state;\n        const disabled = (mode === \"view\");\n        const isEditMode = (mode === \"edit\");\n        return (\n            <div>\n                <div className=\"title-bg pt-3 pb-3 mb-3\">\n                    <div className=\"container\">\n                        <h1 className=\"text-white m-0 p-0 f30\">\n                            <img width=\"24\" className=\"mr-3\"\n                                height=\"24\" src={ManageEmployee} alt=\"\" />\n                            {mode === \"add\" ? \"Add \" : mode === \"view\" ? \"View \" : \"Edit \"}Employee\n            </h1>\n                    </div>\n                </div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-3 hideMenu\">\n                            <QuotationMenu handleMenuClick={this.handleMenuClick} />\n                        </div>\n                        {isEditModeLoading && (\n                            <div className=\"col-lg-8\">\n                                <div className=\"container \">\n                                    <Loader />\n                                </div>\n                            </div>\n                        )}\n                        {!isEditModeLoading && (\n                            <div className=\"col-lg-9 \">\n                                <div className=\"container \">\n                                    {showSuccessMessage &&\n                                        <MessageBar Message={`Employee ${mode === \"add\" ? \"added\" : \"updated\"} successfully.`} handleClose={() => this.RedirectToEmployeeList()} />\n                                    }\n                                    <div className=\"border pt-2 pb-2 pl-3 pr-3 shadow-sm\">\n                                        <h5 className=\"text-primary border-bottom pb-2 mb-2\">\n                                            Personal Details\n                                        </h5>\n                                        <div className=\"row\">\n                                            <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                                                {this.renderInput(\"FirstName\", \"First Name *\", \"text\", disabled)}\n                                            </div>\n                                            <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                                                {this.renderInput(\"LastName\", \"Last Name *\", \"text\", disabled)}\n                                            </div>\n                                            <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                                                {this.renderInput(\"EmailID\", \"Email Address *\", \"text\", disabled)}\n                                            </div>\n                                            <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                                                {this.renderInput(\"CellPhone\", \"Phone Number *\", \"text\", disabled)}\n                                            </div>\n                                            <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                                                {this.renderInput(\"Address1\", \"Address *\", \"text\", disabled)}\n                                            </div>\n                                            <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                                                <div className={\"form-group \" + \"BranchID\"}>\n                                                    <label htmlFor={\"BranchID\"}>{\"Branch *\"}</label>\n                                                    <div className=\"input-group\">\n                                                        <select\n                                                            value={data.BranchID}\n                                                            onChange={(e) => this.handleDataChange(e)}\n                                                            name={\"BranchID\"}\n                                                            id={\"BranchID\"}\n                                                            disabled={disabled}\n                                                            className={\"form-control\"}>\n                                                            <option key={0} value={''}>Select</option>\n                                                            {BranchList.map((option, key) => (\n\n                                                                <option\n                                                                    key={key}\n                                                                    value={\n                                                                        option[\"branchId\"]\n                                                                    }\n                                                                >\n                                                                    {option[\"name\"]}\n                                                                </option>\n                                                            ))}\n                                                        </select>\n                                                        {LoadingBranchList ? (\n                                                            <div className=\"input-group-append\">\n                                                                <div className=\"input-group-text\">\n                                                                    <span\n                                                                        className=\"spinner-border spinner-border-sm mr-2\"\n                                                                        role=\"status\"\n                                                                        aria-hidden=\"true\"\n                                                                    ></span>\n                                                                </div>\n                                                            </div>\n                                                        ) : null}\n                                                    </div>\n                                                    {errors[\"BranchID\"] && (\n                                                        <small className=\"alert alert-danger mt-2 p-1 d-inline-block\">\n                                                            {errors[\"BranchID\"]}\n                                                        </small>\n                                                    )}\n                                                </div>\n                                            </div>\n                                            <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                                                <div className={\"form-group \" + \"CountryID\"}>\n                                                    <label htmlFor={\"CountryID\"}>{\"Country *\"}</label>\n                                                    <div className=\"input-group\">\n                                                        <select\n                                                            value={data.CountryID}\n                                                            onChange={(e) => this.handleDataChange(e)}\n                                                            name={\"CountryID\"}\n                                                            id={\"CountryID\"}\n                                                            disabled={disabled}\n                                                            className={\"form-control\"}>\n                                                            <option key={0} value={''}>Select</option>\n                                                            {CountryList.map((option, key) => (\n\n                                                                <option\n                                                                    key={key}\n                                                                    value={\n                                                                        option[\"countryId\"]\n                                                                    }\n                                                                >\n                                                                    {option[\"countryName\"]}\n                                                                </option>\n                                                            ))}\n                                                        </select>\n                                                        {LoadingCountryList ? (\n                                                            <div className=\"input-group-append\">\n                                                                <div className=\"input-group-text\">\n                                                                    <span\n                                                                        className=\"spinner-border spinner-border-sm mr-2\"\n                                                                        role=\"status\"\n                                                                        aria-hidden=\"true\"\n                                                                    ></span>\n                                                                </div>\n                                                            </div>\n                                                        ) : null}\n                                                    </div>\n                                                    {errors[\"CountryID\"] && (\n                                                        <small className=\"alert alert-danger mt-2 p-1 d-inline-block\">\n                                                            {errors[\"CountryID\"]}\n                                                        </small>\n                                                    )}\n                                                </div>\n                                            </div>\n                                            <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                                                <div className={\"form-group \" + \"StateID\"}>\n                                                    <label htmlFor={\"StateID\"}>{\"State *\"}</label>\n                                                    <div className=\"input-group\">\n                                                        <select\n                                                            value={data.StateID}\n                                                            onChange={(e) => this.handleDataChange(e)}\n                                                            name={\"StateID\"}\n                                                            id={\"StateID\"}\n                                                            disabled={disabled}\n                                                            className={\"form-control\"}>\n                                                            <option key={0} value={''}>Select</option>\n                                                            {StateList.map((option, key) => (\n\n                                                                <option\n                                                                    key={key}\n                                                                    value={\n                                                                        option[\"stateId\"]\n                                                                    }\n                                                                >\n                                                                    {option[\"stateName\"]}\n                                                                </option>\n                                                            ))}\n                                                        </select>\n                                                        {LoadingStateList ? (\n                                                            <div className=\"input-group-append\">\n                                                                <div className=\"input-group-text\">\n                                                                    <span\n                                                                        className=\"spinner-border spinner-border-sm mr-2\"\n                                                                        role=\"status\"\n                                                                        aria-hidden=\"true\"\n                                                                    ></span>\n                                                                </div>\n                                                            </div>\n                                                        ) : null}\n                                                    </div>\n                                                    {errors[\"StateID\"] && (\n                                                        <small className=\"alert alert-danger mt-2 p-1 d-inline-block\">\n                                                            {errors[\"StateID\"]}\n                                                        </small>\n                                                    )}\n                                                </div>\n                                            </div>\n                                            <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                                                <div className={\"form-group \" + \"CityID\"}>\n                                                    <label htmlFor={\"CityID\"}>{\"City *\"}</label>\n                                                    <div className=\"input-group\">\n                                                        <select\n                                                            value={data.CityID}\n                                                            onChange={(e) => this.handleDataChange(e)}\n                                                            name={\"CityID\"}\n                                                            id={\"CityID\"}\n                                                            disabled={disabled}\n                                                            className={\"form-control\"}>\n                                                            <option key={0} value={''}>Select</option>\n                                                            {CityList.map((option, key) => (\n\n                                                                <option\n                                                                    key={key}\n                                                                    value={\n                                                                        option[\"cityId\"]\n                                                                    }\n                                                                >\n                                                                    {option[\"cityName\"]}\n                                                                </option>\n                                                            ))}\n                                                        </select>\n                                                        {LoadingCityList ? (\n                                                            <div className=\"input-group-append\">\n                                                                <div className=\"input-group-text\">\n                                                                    <span\n                                                                        className=\"spinner-border spinner-border-sm mr-2\"\n                                                                        role=\"status\"\n                                                                        aria-hidden=\"true\"\n                                                                    ></span>\n                                                                </div>\n                                                            </div>\n                                                        ) : null}\n                                                    </div>\n                                                    {errors[\"CityID\"] && (\n                                                        <small className=\"alert alert-danger mt-2 p-1 d-inline-block\">\n                                                            {errors[\"CityID\"]}\n                                                        </small>\n                                                    )}\n                                                </div>\n                                            </div>\n\n                                            <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                                                <div className={\"form-group \" + \"IsActive\"}>\n                                                    <label htmlFor={\"IsActive\"}>{\"Active\"}</label>\n                                                    <div className=\"input-group\">\n                                                        <div className=\"form-check form-check-inline\">\n                                                            <input className=\"form-check-input\" disabled={disabled} type=\"radio\" name=\"IsActive\" id=\"yes\" onClick={() => this.IsActiveChange(true)} value={true} checked={data.IsActive === true} />\n                                                            <label className=\"form-check-label\" for=\"IsActiveYes\">Yes</label>\n                                                        </div>\n                                                        <div className=\"form-check form-check-inline\">\n                                                            <input className=\"form-check-input\" disabled={disabled} type=\"radio\" name=\"IsActive\" id=\"no\" value={false} onClick={() => this.IsActiveChange(false)} checked={data.IsActive === false} />\n                                                            <label className=\"form-check-label\" for=\"IsActiveNo\">No</label>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                    <div className=\"border pt-2 pb-2 pl-3 pr-3 shadow-sm mt-3\">\n                                        <h5 className=\"text-primary border-bottom pb-2 mb-2\">\n                                            Access Permission\n                                        </h5>\n                                        <div className=\"row\">\n                                            {LoadingUserRoles &&\n                                                <div className=\"container \">\n                                                    <Loader />\n                                                </div>\n                                            }\n                                            {UserRoleList.map((item, index) => {\n                                                return (\n                                                    <div className=\"col-lg-4 col-md-6 col-sm-12 mb-2\">\n                                                        <div className=\"form-check form-check-inline\">\n                                                            <input className=\"form-check-input\" disabled={disabled} type=\"checkbox\" checked={SelectedRoleID.indexOf(item.roleId) > -1} id={\"role\" + index} onChange={(e) => { this.checkRoleId(e, item.roleId) }} value={item.roleId} />\n                                                            <label className=\"form-check-label\" htmlFor={\"role\" + index}>{\" \" + item.roleName}</label>\n                                                        </div>\n                                                    </div>\n                                                )\n                                            })}\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-lg-12\">\n                                                {errors[\"SelectedRoleID\"] && (\n                                                    <small className=\"alert alert-danger mt-2 p-1 d-inline-block\">\n                                                        {errors[\"SelectedRoleID\"]}\n                                                    </small>\n                                                )}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"border pt-2 pb-2 pl-3 pr-3 shadow-sm mt-3\">\n                                        <h5 className=\"text-primary border-bottom pb-2 mb-2\">\n                                            User Credentials\n                                        </h5>\n                                        <div className=\"row\">\n                                            <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                                                <form autocomplete=\"off\">\n                                                    {this.renderInput(\"UserName\", \"User Name *\", \"text\", (disabled || isEditMode))}\n                                                </form>\n\n                                            </div>\n                                            {!isEditMode && !disabled &&\n                                                <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                                                    <form autocomplete=\"off\">\n\n                                                        {this.renderInput(\"Password\", \"Password *\", \"password\", disabled)}\n                                                    </form>\n\n                                                </div>\n                                            }\n                                            {!isEditMode && !disabled &&\n                                                <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                                                    <form autocomplete=\"off\">\n\n                                                        {this.renderInput(\"ConfirmPassword\", \"Confirm Password *\", \"password\", disabled)}\n                                                    </form>\n\n                                                </div>\n                                            }\n                                        </div>\n                                    </div>\n                                    <div className=\"row mt-3\">\n                                        <div className=\"col-lg-12\">\n                                            {errors[\"SaveError\"] && (\n                                                <small className=\"alert alert-danger mt-2 p-1 d-inline-block\">\n                                                    {errors[\"SaveError\"]}\n                                                </small>\n                                            )}\n                                            {!disabled &&\n                                                <button\n                                                    className=\"btn btn-primary mr-2 float-right\"\n                                                    type=\"submit\"\n                                                    onClick={() => this.saveEmployeeClick()}\n                                                >\n                                                    {isLoading ? (\n                                                        <span\n                                                            className=\"spinner-border spinner-border-sm mr-2\"\n                                                            role=\"status\"\n                                                            aria-hidden=\"true\"\n                                                        ></span>\n                                                    ) : null}\n                                                Save\n                                            </button>\n                                            }\n                                            <button\n                                                className=\"btn btn-secondary mr-2 float-right\"\n                                                type=\"submit\"\n                                                onClick={() => this.RedirectToEmployeeList()}\n                                            >\n                                                {disabled ? \"Back\" : \"Cancel\"}\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default SupplierInvoice;\n","E:\\Amit\\Projects\\booking-engine\\src\\screens\\admin\\change-password.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\supplier-invoices.jsx",["1962","1963","1964","1965"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\customer-ledgers.jsx",["1966","1967","1968","1969","1970"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\admin\\employee.jsx",["1971","1972","1973"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\supplier-management.jsx",["1974","1975","1976"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\common\\form-payment-date.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\services\\requester-report.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\quotation-menu.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-management-filter.jsx",["1977","1978"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-management-excel.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\loading\\table-loading.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\admin\\message-bar.jsx",["1979"],"import React, { Component } from 'react'\n\nexport class MessageBar extends Component {\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            this.props.handleClose();\n        }, 2500);\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"model-popup\">\n                    <div className=\"modal fade show d-block\">\n                        <div className=\"modal-dialog  \">\n                            <div className=\"modal-content\">\n                                <div className=\"alert alert-success fade show mb-0\" role=\"alert\">\n                                    <strong>Success</strong>\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={this.props.handleClose}>\n                                        <span aria-hidden=\"true\">&times;</span>\n                                    </button>\n                                    <hr className=\"mt-1 mb-1\"></hr>\n                                    <p>{this.props.Message}</p>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"modal-backdrop fade show\"></div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MessageBar;\n","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-add-edit-modal.jsx",["1980","1981","1982","1983"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\admin\\delete-confirmation-dialog.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\admin\\employee-excel.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\customer-ledger-tablerow.jsx",["1984","1985","1986","1987"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\admin\\employee-filtes.jsx",["1988"],"import React from 'react'\nimport Form from \"../common/form\";\nexport class Filter extends Form {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {\n                \"FirstName\": \"\",\n                \"LastName\": \"\",\n                \"CellPhone\": \"\",\n                \"EmailId\": \"\",\n                \"IsActive\": true\n            },\n            errors: {}\n        };\n    }\n    handleFilters = () => {        \n        this.props.handleFilters(this.state.data);\n    };\n    handleResetFilters = () => {\n        this.setState({\n            data: {\n                \"FirstName\": \"\",\n                \"LastName\": \"\",\n                \"CellPhone\": \"\",\n                \"EmailId\": \"\",\n                \"IsActive\": true\n            }           \n        },()=>{this.props.handleFilters(this.state.data);});\n    };\n    IsActiveChange = (value) => {\n        const {data} = this.state;\n        data.IsActive = value;\n        this.setState({data});\n    }\n    render() {\n        const {data} = this.state;\n        return (\n                <div className=\"border pt-2 pb-2 pl-3 pr-3 shadow-sm\">\n                    <h5 className=\"text-primary border-bottom pb-2 mb-2\">\n                        Filters\n            \n                    </h5>\n                    <div className=\"row\">\n                        <div className=\"col-lg-4\">\n                            {this.renderInput(\"FirstName\", \"First Name\")}\n                        </div>\n                        <div className=\"col-lg-4\">\n                            {this.renderInput(\"LastName\", \"Last Name\")}\n                        </div>\n                        <div className=\"col-lg-4\">\n                            {this.renderInput(\"EmailId\", \"Email Address\")}\n                        </div>\n                        <div className=\"col-lg-4\">\n                            {this.renderInput(\"CellPhone\", \"Phone Number\")}\n                        </div>\n                        <div className=\"col-lg-4\">\n                            <div className={\"form-group \" + \"IsActive\"}>\n                                <label htmlFor=\"IsActive\">Active</label>\n                                <div className=\"input-group\">\n                                    <div className=\"form-check form-check-inline\">\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"IsActive\" id=\"yes\" onChange={()=>this.IsActiveChange(true)} value={data.IsActive} checked={data.IsActive === true}/>\n                                        <label className=\"form-check-label\" htmlFor=\"IsActiveYes\">Yes</label>\n                                    </div>\n                                    <div className=\"form-check form-check-inline\">\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"IsActive\" id=\"no\" value={data.IsActive} onChange={()=>this.IsActiveChange(false)} checked={data.IsActive === false}/>\n                                        <label className=\"form-check-label\" htmlFor=\"IsActiveNo\">No</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-lg-4\">\n                            <label className=\"d-block\">&nbsp;</label>\n                            <button\n                                name=\"Apply\"\n                                onClick={this.handleFilters}\n                                className=\"btn btn-primary\"\n                            >\n                                Apply\n                            </button>\n                            <button\n                                name=\"reset\"\n                                onClick={this.handleResetFilters}\n                                className=\"btn btn-primary ml-2\"\n                            >\n                                Reset\n                            </button>\n                        </div>\n                    </div>\n                    </div>\n        )\n    }\n}\n\nexport default Filter\n","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\customer-ledger-filter.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-invoice-excel.jsx",["1989"],"import React from \"react\";\nimport ReactExport from \"react-export-excel\";\nimport Datecomp from \"../../helpers/date\";\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\nclass InvoiceListExcel extends React.Component {\n    componentDidMount() {\n        document.getElementById(\"excel\").click();\n        this.props.onExportComplete();\n    }\n    render() {\n        let { data } = this.props;\n        data.map((item) => {\n            item.invoiceDate = Datecomp({ date: item.invoiceDate });\n            item.dueDate = Datecomp({ date: item.dueDate });\n            item.invoiceDurationStartDate = Datecomp({ date: item.invoiceDurationStartDate });\n            item.invoiceDurationEndDate = Datecomp({ date: item.invoiceDurationEndDate });\n        })\n        return (\n            <ExcelFile filename={this.props.filename} element={<button id=\"excel\">Download</button>}>\n                <ExcelSheet data={data} name=\"SupplierInvoices\">\n                    <ExcelColumn label={\"Business\"} value={\"business\"} />\n                    <ExcelColumn label={\"Supplier Name\"} value={\"supplierName\"} />\n                    <ExcelColumn label={\"Invoice Number\"} value={\"invoiceNumber\"} />\n                    <ExcelColumn label={\"Invoice Date\"} value={\"invoiceDate\"} />\n                    <ExcelColumn label={\"Invoice Start Date\"} value={\"invoiceDurationStartDate\"} />\n                    <ExcelColumn label={\"Invoice End Date\"} value={\"invoiceDurationEndDate\"} />\n                    <ExcelColumn label={\"Invoice Currency\"} value={\"invoiceCurrencyCode\"} />\n                    <ExcelColumn label={\"Invoice Net Amount\"} value={\"invoiceNetAmount\"} />\n                    <ExcelColumn label={\"Paid Amount\"} value={\"paidAmount\"} />\n                    <ExcelColumn label={\"Due Amount\"} value={\"dueAmount\"} />\n                    <ExcelColumn label={\"Payment Due Date\"} value={\"dueDate\"} />\n                    <ExcelColumn label={\"Status\"} value={\"invoiceReconciliationStatus\"} />\n                </ExcelSheet>\n            </ExcelFile>\n        );\n    }\n}\nexport default InvoiceListExcel;","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-invoices-filter.jsx",["1990","1991","1992","1993"],"import React from 'react'\nimport Form from \"../common/form\";\nimport SingleDate from \"../common/form-birthdate\";\nimport BusinessDD from \"./business-dropdown\"\nimport { apiRequester } from \"../../services/requester-report\";\nimport moment from \"moment\";\nexport class Filter extends Form {\n    constructor(props) {\n        super(props);\n        this.state = {\n            business: [],\n            supplier: [],\n            errors: {}\n        };\n    }\n    handleValueChange(value, id) {\n        let { errors } = this.state;\n        let { data } = this.props;\n        if (id === \"fromdate\" && new Date(value) > new Date(data[\"todate\"])) {\n            errors[id] = \"From Date can not be greater To End Date.\";\n            this.setState({ errors });\n            return;\n        }\n        else if (id === \"todate\" && new Date(value) < new Date(data[\"fromdate\"])) {\n            errors[id] = \"To Date can not be less than From Date.\";\n            this.setState({ errors });\n            return;\n        } else {\n            if (errors[\"fromdate\"]) delete errors[\"fromdate\"];\n            if (errors[\"todate\"]) delete errors[\"todate\"];\n        }\n\n        if (id === \"supplierid\") {\n            let reportBusinessSupplier = JSON.parse(sessionStorage.getItem(\"reportBusinessSupplier\"))\n            reportBusinessSupplier[\"supplierId\"] = value\n            sessionStorage.setItem(\"reportBusinessSupplier\", JSON.stringify(reportBusinessSupplier))\n        }\n\n        if (id === \"businessid\" && data.businessid != value) {\n            data[\"supplierid\"] = \"\";\n        }\n\n        data[id] = value;\n        this.props.handleFilters(data);\n    }\n    handleBusiness(value, supplierList) {\n        this.setState({ supplier: supplierList }, () => { this.handleValueChange(value, \"businessid\"); })\n    }\n    render() {\n        const { supplier, errors } = this.state;\n        const { status, data } = this.props;\n        return (\n            <div>\n                <div className=\"conatiner\">\n                    <div className=\"row\">\n                        <div className=\"col-md-3\">\n                            <BusinessDD BusinessId={data.businessid} providerID={this.props.agentID} handleBusiness={(value, supplierList) => this.handleBusiness(value, supplierList)} />\n                        </div>\n                        <div className=\"col-md-3\">\n                            <div className={\"form-group \" + \"supplier\"}>\n                                <label htmlFor={\"supplier\"}>{\"Supplier *\"}</label>\n                                <select\n                                    value={data[\"supplierid\"]}\n                                    onChange={(e) => { this.handleValueChange(e.target.value, \"supplierid\") }}\n                                    name={\"supplierid\"}\n                                    id={\"supplierid\"}\n                                    className={\"form-control\"}>\n                                    <option key={0} value={''}>Select</option>\n                                    {supplier.map((option, key) => (\n                                        <option\n                                            key={key}\n                                            value={\n                                                option[\"providerId\"]\n                                            }\n                                        >\n                                            {option[\"fullName\"]}\n                                        </option>\n                                    ))}\n                                </select>\n\n\n                            </div>\n\n                        </div>\n\n\n                        <div className=\"col-md-3\">\n                            <SingleDate\n                                type={\"text\"}\n                                name={\"fromdate\"}\n                                value={data[\"fromdate\"]}\n                                label={\"Invoice From Date\"}\n                                conditiondate={new Date().setFullYear(new Date().getFullYear() + 25)}\n                                onChange={({ currentTarget: input }, picker) => { this.handleValueChange(picker.startDate.format(\"YYYY-MM-DD\"), \"fromdate\") }}\n                            />\n                            {errors[\"fromdate\"] && (\n                                <small className=\"alert alert-danger mt-2 p-1 d-inline-block\">\n                                    {errors[\"fromdate\"]}\n                                </small>\n                            )}\n                        </div>\n                        <div className=\"col-md-3\">\n                            <SingleDate\n                                type={\"text\"}\n                                name={\"todate\"}\n                                value={data[\"todate\"]}\n                                label={\"Invoice To Date\"}\n                                conditiondate={new Date().setFullYear(new Date().getFullYear() + 25)}\n                                onChange={({ currentTarget: input }, picker) => { this.handleValueChange(picker.startDate.format(\"YYYY-MM-DD\"), \"todate\") }}\n                            />\n                            {errors[\"todate\"] && (\n                                <small className=\"alert alert-danger mt-2 p-1 d-inline-block\">\n                                    {errors[\"todate\"]}\n                                </small>\n                            )}\n                        </div>\n                        <div className=\"col-md-3\">\n                            <div className={\"form-group InvoiceNumber\"}>\n                                <label htmlFor={\"InvoiceNumber\"}>Invoice Number</label>\n                                <input\n                                    name={\"InvoiceNumber\"}\n                                    id={\"InvoiceNumber\"}\n                                    className={\"form-control\"}\n                                    value={data[\"invoicenumber\"]}\n                                    onChange={(e) => { this.handleValueChange(e.target.value, \"invoicenumber\") }}\n                                />\n\n                            </div>\n                        </div>\n                        <div className=\"col-md-8\">\n                            <label className=\"d-block\">Status</label>\n                            <div className=\"btn-group btn-group-toggle \" data-toggle=\"buttons\">\n                                {status.map((statusdata, key) => {\n                                    return (\n                                        <label key={key} className={`btn ${data.reconcillationstatus === (statusdata === \"All\" ? null : statusdata) ? \"active btn-primary\" : \"btn-secondary\"}`}>\n                                            <input onChange={() => {\n                                                this.handleValueChange((statusdata === \"All\" ? null : statusdata), \"reconcillationstatus\")\n                                            }} type=\"radio\" name=\"options\" id=\"option1\" checked={data.reconcillationstatus === (statusdata === \"All\" ? null : statusdata)} /> {statusdata}\n                                        </label>\n                                    )\n                                })}\n\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Filter\n","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\customer-selection.jsx",["1994"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-invoice-details.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-invoice-reconcilation-report-xls.jsx",["1995"],"import React from \"react\";\nimport Datecomp from \"../../helpers/date\";\nimport XLSX from \"xlsx\"\n\nclass SupplierInvoiceReconcilationReport extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      BRNcolumns: [], BRNdata: []\n    }\n  }\n  componentDidMount() {\n    const { reconciliationDetails, paymentHistory, paymentReconciliationHistory, invoiceDetails } = this.props.InvoiceReport;\n    const BRNcolumns = [\"Booking Date\", \"Booking Ref.\", \"Reconciliation Status\", \"Booking Amount\", \"Supplier Amount\", \"Paid Amount\", \"Supplier Due Amount\", \"Reconciliation Date\"];\n    const BRNdata = reconciliationDetails.map((item) => {\n      let BRNDataRow = [Datecomp({ date: item.bookingDate }), item.bookingRef, item.reconciliationStatus, item.supplierBookingAmount + \" \" + item.supplierBookingCurrency, item.supplierReconciledAmout + \" \" + item.supplierReconciledCurrency, item.paidAmount + \" \" + item.supplierReconciledCurrency, item.supplierDueAmount + \" \" + item.supplierBookingCurrency, Datecomp({ date: item.reconciliationDate })];\n      if (item.reconciledPaymentList && item.reconciledPaymentList.length > 0) {\n        item.reconciledPaymentList.map((payment, index) => {\n          if (BRNcolumns.indexOf(\"Payment \" + (index + 1)) < 0) {\n            BRNcolumns.push(\"Payment \" + (index + 1))\n          }\n          BRNDataRow.push(payment.paymentAmount + \" \" + payment.supplierReconciledCurrency);\n        })\n      }\n      return BRNDataRow;\n    });\n    const paymentHistoryColumns = [\"Sr.\", \"Payment Date\", \"Paid By\", \"Paid Amount\", \"Total Paid Amount\", \"Payment Datails\"];\n    const paymentHistoryData = paymentHistory.length === 1 && !paymentHistory[0].paymentMode ? [] : paymentHistory.map((item) => {\n      return [item.rowNum, Datecomp({ date: item.paymentDate }), item.paymentMode, item.paymentAmount + \" \" + item.invoiceCurrencyCode, item.totalPaidAmount + \" \" + item.invoiceCurrencyCode, item.paymentMode === \"Cheque\" ? \"Cheque Branch :\" + item.chequeBranch : \"Transaction Ref Number :\" + item.transactionRefNumber]\n    })\n    const paymentReconciliationHistoryColumns = [\"Sr.\", \"Reconciliation Date\", \"Booking Ref. No.\", \"Supplier Booking Amount\", \"Supplier Reconciled Amount\", \"Conversion Factor\", \"Reconciliation Date\", \"Paid Amount\", \"Payment Amount\", \"Due Amount\", \"Comment\"];\n    const paymentReconciliationHistoryData = paymentReconciliationHistory.map((item, index) => {\n      return [index + 1, Datecomp({ date: item.reconciliationDate }), item.bookingRefNo, item.supplierBookingAmount + \" \" + item.supplierBookingCurrency, item.supplierReconciledAmount + \" \" + item.supplierReconciledCurrency, item.conversionFactor, Datecomp({ date: item.reconciliationDate }), item.paidAmount + \" \" + item.supplierBookingCurrency, item.paymentAmount + \" \" + item.supplierBookingCurrency, item.dueAmount + \" \" + item.supplierBookingCurrency, item.reconciliationNarration]\n    })\n    this.setState({ isLoading: false, BRNcolumns, BRNdata, paymentHistoryColumns, paymentHistoryData, paymentReconciliationHistoryColumns, paymentReconciliationHistoryData }, () => {\n      this.getInvoiceReport(invoiceDetails.invoiceNumber);\n    })\n  }\n  getInvoiceReport(filename) {\n    const table = document.querySelector('#sheet1');\n    const workbook1 = XLSX.utils.table_to_sheet(table);\n    const table2 = document.querySelector('#sheet2');\n    const workbook2 = XLSX.utils.table_to_sheet(table2);\n    workbook1['!cols'] = [{ wpx: 100 }, { wpx: 170 }, { wpx: 125 }, { wpx: 100 }, { wpx: 100 }, { wpx: 100 }, { wpx: 100 }, { wpx: 100 }];\n    workbook2['!cols'] = [{ wpx: 50 }, { wpx: 100 }, { wpx: 150 }, { wpx: 100 }, { wpx: 100 }, { wpx: 100 }, { wpx: 100 }, { wpx: 100 }];\n    workbook1['!printHeader'] = [1, 1]\n    const workbook = {\n      SheetNames: ['Reconcile Details', 'Invoice Payment Details'],\n      Sheets: {\n        'Reconcile Details': workbook1,\n        \"Invoice Payment Details\": workbook2\n      }\n    };\n    this.props.onReportDownloadComplete();\n    return XLSX.writeFile(workbook, `ReconciliationReport-${filename}.xlsx`);\n  }\n  render() {\n    const { isLoading, BRNcolumns, BRNdata, paymentHistoryColumns, paymentHistoryData, paymentReconciliationHistoryColumns, paymentReconciliationHistoryData } = this.state;\n    const { invoiceDetails } = this.props.InvoiceReport;\n    return isLoading === false ? (\n      <div>\n        <table id=\"sheet1\">\n          <thead>\n            <tr>\n              <th colSpan={8}>\n                Reconcile Invoice ({invoiceDetails.invoiceNumber})\n            </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td colSpan={2}>Invoice Number:</td>\n              <td colSpan={2}>{invoiceDetails.invoiceNumber}</td>\n              <td colSpan={2}>Invoice Net Amount:</td>\n              <td colSpan={2}>{invoiceDetails.invoiceNetAmount + \" \" + invoiceDetails.currencyCode}</td>\n            </tr>\n            <tr>\n              <td colSpan={2}>Invoice Date:</td>\n              <td colSpan={2}><Datecomp date={invoiceDetails.invoiceDate} /></td>\n              <td colSpan={2}>Due Amount:</td>\n              <td colSpan={2}>{invoiceDetails.dueAmount + \" \" + invoiceDetails.currencyCode}</td>\n            </tr>\n            <tr>\n              <td colSpan={2}>Invoice Duration:</td>\n              <td colSpan={2}><Datecomp date={invoiceDetails.invoiceDurationStartDate} />-<Datecomp date={invoiceDetails.invoiceDurationEndDate} /></td>\n              <td colSpan={2}>Invoice Status:</td>\n              <td colSpan={2}>{invoiceDetails.invoiceStatus}</td>\n            </tr>\n            <tr></tr>\n            <tr>\n              <th colSpan={8}>\n                Reconciliation Details\n            </th>\n            </tr>\n            <tr>\n              {BRNcolumns.map((item) => {\n                return (<td>{item}</td>)\n              })}\n            </tr>\n            {BRNdata.map((row) => {\n              return (<tr>\n                {\n                  row.map((item) => {\n                    return (<td>{item}</td>)\n                  })\n                }\n              </tr>)\n            })}\n          </tbody>\n        </table>\n        <table id=\"sheet2\">\n          <thead>\n            <tr>\n              <th colSpan={8}>\n                Reconcile Invoice ({invoiceDetails.invoiceNumber})\n            </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td colSpan={2}>Invoice Number:</td>\n              <td colSpan={2}>{invoiceDetails.invoiceNumber}</td>\n              <td colSpan={2}>Invoice Net Amount:</td>\n              <td colSpan={2}>{invoiceDetails.invoiceNetAmount + \" \" + invoiceDetails.currencyCode}</td>\n            </tr>\n            <tr>\n              <td colSpan={2}>Invoice Date:</td>\n              <td colSpan={2}><Datecomp date={invoiceDetails.invoiceDate} /></td>\n              <td colSpan={2}>Due Amount:</td>\n              <td colSpan={2}>{invoiceDetails.dueAmount + \" \" + invoiceDetails.currencyCode}</td>\n            </tr>\n            <tr>\n              <td colSpan={2}>Invoice Duration:</td>\n              <td colSpan={2}><Datecomp date={invoiceDetails.invoiceDurationStartDate} />-<Datecomp date={invoiceDetails.invoiceDurationEndDate} /></td>\n              <td colSpan={2}>Invoice Status:</td>\n              <td colSpan={2}>{invoiceDetails.invoiceStatus}</td>\n            </tr>\n            <tr></tr>\n            <tr>\n              <th colSpan={8}>\n                Payment History\n            </th>\n            </tr>\n            <tr>\n              {paymentHistoryColumns.map((item) => {\n                return (<td>{item}</td>)\n              })}\n            </tr>\n            {paymentHistoryData.length === 0 ? <tr><td colSpan={6}>No record found.</td></tr> :\n              paymentHistoryData.map((row) => {\n                return (<tr>\n                  {\n                    row.map((item) => {\n                      return (<td>{item}</td>)\n                    })\n                  }\n                </tr>)\n              })}\n            <tr></tr>\n            <tr>\n              <th colSpan={8}>\n                Reconciliation History\n            </th>\n            </tr>\n            <tr>\n              {paymentReconciliationHistoryColumns.map((item) => {\n                return (<td>{item}</td>)\n              })}\n            </tr>\n            {paymentReconciliationHistoryData.length === 0 ? <tr><td colSpan={11}>No record found.</td></tr> :\n              paymentReconciliationHistoryData.map((row) => {\n                return (<tr>\n                  {\n                    row.map((item) => {\n                      return (<td>{item}</td>)\n                    })\n                  }\n                </tr>)\n              })}\n          </tbody>\n        </table>\n      </div>\n    ) : null;\n  }\n}\nexport default SupplierInvoiceReconcilationReport;","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-invoice-payment.jsx",["1996","1997","1998","1999","2000","2001","2002"],"\n\nimport React, { Component } from \"react\";\nimport { Trans } from \"../../helpers/translate\";\nimport Filters from \"../../components/reports/supplier-invoice-payment-filter\"\nimport Pagination from \"../booking-management/booking-pagination\";\nimport TableLoading from \"../loading/table-loading\";\nimport Datecomp from \"../../helpers/date\";\nimport PdfIcon from \"../../assets/images/reports/pdf.png\"\nimport PrintIcon from \"../../assets/images/reports/print.png\"\n\nclass InvoiceSelection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedRecordIds: this.props.selectedRecordIds,\n            selectedRecords: this.props.selectedRecords,\n            paymentType: \"full\",\n            isError: false\n        }\n\n    }\n    selectRecord = (e, record) => {\n        let selectedRecordIds = this.state.selectedRecordIds;\n        let selectedRecords = this.state.selectedRecords;\n        if (e.target.checked) {\n\n            selectedRecordIds.push(record.supplierInvoicesAndReconciliationId)\n            selectedRecords.push(record);\n        } else {\n            let recordIndex = selectedRecordIds.indexOf(record.supplierInvoicesAndReconciliationId);\n            selectedRecordIds.splice(recordIndex, 1);\n            selectedRecords.splice(recordIndex, 1);\n        }\n        this.setState({ selectedRecordIds, selectedRecords, isError: false });\n    }\n    checkAll = (e) => {\n\n        let selectedRecordIds = this.state.selectedRecordIds;\n        let selectedRecords = this.state.selectedRecords;\n        if (e.target.checked) {\n            let newSelectedRecordIds = this.props.result.filter((item) => { return item.dueAmount > 0 && selectedRecordIds.indexOf(item.supplierInvoicesAndReconciliationId) === -1 }).map((item) => { return item.supplierInvoicesAndReconciliationId });\n            newSelectedRecordIds.map((recordId) => {\n                selectedRecordIds.push(recordId);\n                selectedRecords.push(this.props.result.filter((item) => { return item.supplierInvoicesAndReconciliationId === recordId })[0]);\n            });\n        } else {\n            let recordIds = this.props.result.filter((item) => { return item.dueAmount > 0 && selectedRecordIds.indexOf(item.supplierInvoicesAndReconciliationId) > -1 }).map((item) => { return item.supplierInvoicesAndReconciliationId });\n            recordIds.map((recordId) => {\n                let recordIndex = selectedRecordIds.indexOf(recordId);\n                selectedRecordIds.splice(recordIndex, 1);\n                selectedRecords.splice(recordIndex, 1);\n\n            });\n        }\n        this.setState({ selectedRecordIds, selectedRecords, isError: false });\n    }\n    selectedRecordIdsAmount = () => {\n        return this.state.selectedRecords.reduce((sum, item) => { return sum + parseFloat(item.dueAmount) }, 0);\n    }\n    showSaveForm = (noValidate) => {\n        if (!noValidate && this.state.selectedRecords.length === 0) {\n            this.setState({ isError: true });\n            return;\n        }\n        let Amount = this.state.selectedRecords.reduce((sum, item) => { return sum + parseFloat(item.dueAmount) }, 0);\n        this.props.showSaveForm(Amount, this.state.selectedRecords, this.state.paymentType, this.state.selectedRecordIds);\n    }\n    changePaymentType = (type) => {\n        this.setState({ paymentType: type })\n        if (type === \"partial\") {\n            let Amount = this.state.selectedRecords.reduce((sum, item) => { return sum + parseFloat(item.dueAmount) }, 0);\n            this.props.showSaveForm(Amount, this.state.selectedRecords, type, this.state.selectedRecordIds);\n        }\n    }\n    isCheckAll = () => {\n        const RecordIds = this.props.result.filter((item) => { return item.dueAmount > 0 }).map((item) => { return item.supplierInvoicesAndReconciliationId });\n        if (RecordIds.length === 0)\n            return false;\n        const selectedRecordIds = this.state.selectedRecordIds;\n        return RecordIds.every(v => selectedRecordIds.includes(v));\n    }\n    render() {\n        const pageInfoIndex = [{ item: this.props.pageInfo }];\n        const { selectedRecordIds } = this.state;\n        const isAllChecked = this.isCheckAll();\n        return (\n            <React.Fragment>\n                <Filters\n                    isFilters={this.props.isFilters}\n                    filters={this.props.filters}\n                    handleFilters={this.props.handleFilters}\n                    showHideFilters={this.props.showHideFilters}\n                    status={this.props.status}\n                />\n                <div className=\"row\">\n                    <div className=\"col-sm-6  col-md-6 col-lg-6\">\n                        <button\n                            className=\"btn mr-2 float-left btn-secondary\"\n                            type=\"submit\"\n                            onClick={() => this.props.RedirectToInvoiceList()}\n                        >\n                            Back To Invoices\n                         </button>\n                    </div>\n\n                    <div className=\"col-sm-6  col-md-6 col-lg-6 mt-2\">\n                        <button\n                            className={`btn mr-2 float-right ${selectedRecordIds.length > 0 ? 'btn-primary' : 'btn-secondary'}`}\n                            type=\"submit\"\n                            disabled={selectedRecordIds.length === 0}\n                            onClick={() => this.changePaymentType(\"partial\")}>\n                            Pay Partial\n                        </button>\n                        <button\n                            className={`btn mr-2 float-right ${selectedRecordIds.length > 0 ? 'btn-primary' : 'btn-secondary'}`}\n                            type=\"submit\"\n                            disabled={selectedRecordIds.length === 0}\n                            onClick={() => this.showSaveForm()}\n                        >\n                            Pay Full\n                        </button>\n\n                    </div>\n                </div>\n                <div className=\"row mt-2\">\n                    <div className=\"col-lg-6\">\n                        <b>{selectedRecordIds.length === 0 ? \"Select at least one record for pay.\" : `Total ${selectedRecordIds.length} record(s) selected.`}</b>\n                    </div>\n                    <div className=\"col-lg-6\">\n                        <div className=\"float-right mr-2\">\n                            <b>Total Amount : {this.selectedRecordIdsAmount()}</b>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <div className=\" border-bottom pt-2 pb-2 \">\n                            <div className=\"table-responsive-lg\">\n                                <table className=\"table border\">\n                                    <thead className=\"thead-light\">\n                                        <tr>\n                                            <th><input checked={isAllChecked} type=\"checkbox\" onChange={(e) => { this.checkAll(e) }} /></th>\n                                            <th >Invoice Number</th>\n                                            <th >Invoice Date</th>\n                                            <th >Invoice Amount</th>\n                                            <th >Paid Amount</th>\n                                            <th >Due Amount</th>\n                                            <th >Status</th>\n                                            <th >Actions</th>\n\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {!this.props.isLoading && this.props.result.length === 0 &&\n                                            <tr>\n                                                <td className=\"text-center\" colSpan={8}>\n                                                    No records found.\n                                                </td>\n                                            </tr>\n                                        }\n                                        {!this.props.isLoading && this.props.result.map((item, key) => {\n                                            return (\n                                                <tr key={key}>\n                                                    <td>\n                                                        {item.dueAmount > 0 &&\n                                                            <input type=\"checkbox\" checked={this.state.selectedRecordIds.indexOf(item.supplierInvoicesAndReconciliationId) > -1} onChange={(e) => { this.selectRecord(e, item) }} />\n                                                        }\n                                                    </td>\n\n                                                    <td>{item.invoiceNumber}</td>\n                                                    <td><Datecomp date={item.invoiceDate} /></td>\n                                                    <td> {item.invoiceCurrencyCode + \" \" + item.invoiceNetAmount}</td>\n                                                    <td> {item.invoiceCurrencyCode + \" \" + (item.invoiceNetAmount - item.dueAmount)}</td>\n                                                    <td> {item.invoiceCurrencyCode + \" \" + item.dueAmount}</td>\n                                                    <td>{item.invoiceReconciliationStatus}</td>\n                                                    <td>\n                                                        <a onClick={() => { this.props.btnaction(item.supplierInvoicesAndReconciliationId, \"Print\") }} className=\"\">\n                                                            <img title=\"Print\" style={{ cursor: \"pointer\" }} height={20} src={PrintIcon} />\n                                                        </a>\n                                                        <a onClick={() => { this.props.btnaction(item.supplierInvoicesAndReconciliationId, \"PDF\") }} className=\"ml-2\">\n                                                            <img title=\"PDF\" style={{ cursor: \"pointer\" }} height={20} src={PdfIcon} />\n                                                        </a>\n                                                        {/* <button className=\"btn btn-primary btn-sm mr-1\" onClick={() => { this.props.btnaction(item.supplierInvoicesAndReconciliationId, \"Print\") }}>Print</button>\n                                                    <button className=\"btn btn-primary btn-sm\" onClick={() => { this.props.btnaction(item.supplierInvoicesAndReconciliationId, \"PDF\") }}>Pdf</button> */}\n                                                    </td>\n                                                </tr>\n                                            );\n                                        })}\n                                        {this.props.isLoading &&\n                                            <TableLoading columns={8} />\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-12 report-pagination\">\n                        {!this.props.isLoading && this.props.result.length > 0 &&\n                            <Pagination\n                                pageInfoIndex={pageInfoIndex}\n                                handlePaginationResults={this.props.handlePaginationResults}\n                            />\n                        }\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\nexport default InvoiceSelection;","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-payment-form.jsx",["2003","2004"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-payment-steps.jsx",["2005","2006","2007","2008","2009"],"import React, { Component } from 'react';\nclass SupplierPaymentSteps extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    render() {\n        const { isSupplierSet, display, paymentType } = this.props;\n        return (\n            <div className=\"row\">\n                <div className=\"col-lg-12\">\n                    <div className=\"report-steps\">\n                        <div className=\"container\">\n                            <div className=\"row pt-3 pb-3 justify-content-center\">\n                                <div className={isSupplierSet ?\n                                    \"step col-3 d-flex flex-wrap justify-content-center active completed\" :\n                                    \"step col-3 d-flex flex-wrap justify-content-center \"}>\n                                    <span className=\"d-flex\">\n                                        <a className=\"d-flex\" onClick={() => this.props.stepClick(\"SelectSupplier\")} disabled={!isSupplierSet}>1</a>\n                                    </span>\n                                    <label className=\"text-secondary m-0 w-100 text-center mt-1\">Select Supplier</label>\n                                </div>\n                                <div className={isSupplierSet && display != \"InvoiceSelection\" ?\n                                    \"step col-3 d-flex flex-wrap justify-content-center active completed\" :\n                                    \"step col-3 d-flex flex-wrap justify-content-center \"}>\n                                    <span className=\"d-flex\">\n                                        <a className=\"d-flex\" onClick={() => this.props.stepClick(\"InvoiceSelection\")} disabled={display !== \"SaveForm\"}>2</a>\n                                    </span>\n                                    <label className=\"text-secondary m-0 w-100 text-center mt-1\">Select Invoices</label>\n                                </div>\n                                {display === \"BRNSelection\" || (display === \"SaveForm\" && paymentType === \"brnPayment\") ? (\n                                    <div className={display !== \"BRNSelection\" ?\n                                        \"step col-3 d-flex flex-wrap justify-content-center active completed\" :\n                                        \"step col-3 d-flex flex-wrap justify-content-center \"}>\n                                        <span className=\"d-flex\">\n                                            <a className=\"d-flex\" onClick={() => this.props.stepClick(\"BRNSelection\")} disabled={display === \"BRNSelection\"}>3</a>\n                                        </span>\n                                        <label className=\"text-secondary m-0 w-100 text-center mt-1\">Select BRN(s)</label>\n                                    </div>\n                                ) : null}\n                                <div className={\"step col-3 d-flex flex-wrap justify-content-center \"}>\n                                    <span className=\"d-flex\">\n                                        <a className=\"d-flex\" onClick={() => { this.breadcrumbClick(\"InvoiceSelection\") }} disabled={true}>\n                                            {display === \"BRNSelection\" || (display === \"SaveForm\" && paymentType === \"brnPayment\") ? 4 : 3}\n                                        </a>\n                                    </span>\n                                    <label className=\"text-secondary m-0 w-100 text-center mt-2\">Payment Information</label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default SupplierPaymentSteps;","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-invoice-details-print.jsx",["2010","2011"],"import React, { Component } from \"react\";\nimport Datecomp from \"../../helpers/date\";\nimport * as Global from \"../../helpers/global\";\nimport { Trans } from \"../../helpers/translate\";\nimport ReactToPrint from \"react-to-print\";\nclass InvoicePrint extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n        this.printRef = React.createRef();\n    }\n    componentDidMount() {\n        document.getElementById(\"print\").click();\n        this.props.onExportComplete();\n    }\n    render() {\n        let data = this.props.data\n        let invoiceDetails = data[\"invoiceDetails\"]\n        let reconciliationDetails = data[\"reconciliationDetails\"]\n        let paymentReconciliationHistory = data[\"paymentReconciliationHistory\"]\n        let paymentHistory = data[\"paymentHistory\"];\n        paymentHistory = paymentHistory.length === 1 && !paymentHistory[0].paymentMode ? [] : paymentHistory;\n        return (\n            <React.Fragment>\n                < ReactToPrint\n                    trigger={() => (\n                        <button id=\"print\" className=\"btn btn-primary btn-sm ml-2 pull-right\">\n                            Print\n                        </button>\n                    )}\n                    content={() => this.componentRef}\n                />\n\n                <div ref={el => (this.componentRef = el)}>\n                    <div className=\"invoicePrint\" style={{ width: \"90%\", \"word-wrap\": \"break-word\", margin: \"15px\" }}>\n                        <div style={{ marginTop: \"10px\", marginBottom: \"10px\", width: \"100%\" }}>\n                            <h4>Invoice Details</h4>\n                            <div style={{ width: \"100%\" }}>\n                                <div>\n                                    <b>Invoice Number: </b>{invoiceDetails.invoiceNumber}\n                                </div>\n                                <div style={{ width: \"100%\", display: \"flex\", marginTop: \"3px\" }}>\n                                    <div style={{ width: \"48%\" }}>\n                                        <b>Net Amount: </b>{invoiceDetails.currencyCode + \" \"}{invoiceDetails.invoiceNetAmount}\n                                    </div>\n                                    <div style={{ width: \"48%\" }}>\n                                        <b>Due Amount: </b>{invoiceDetails.currencyCode + \" \"}{invoiceDetails.dueAmount}\n                                    </div>\n                                </div>\n                                <div style={{ width: \"100%\", display: \"flex\", marginTop: \"3px\" }}>\n                                    <div style={{ width: \"48%\" }}>\n                                        <b>Invoice Date: </b><Datecomp date={invoiceDetails.invoiceDate} />\n                                    </div>\n                                    <div style={{ width: \"48%\" }}>\n                                        <b>Due Date: </b><Datecomp date={invoiceDetails.dueDate} />\n                                    </div>\n                                </div>\n                                <div style={{ width: \"100%\", display: \"flex\", marginTop: \"3px\" }}>\n                                    <div style={{ width: \"48%\" }}>\n                                        <b>Start Date: </b><Datecomp date={invoiceDetails.invoiceDurationStartDate} />\n                                    </div>\n                                    <div style={{ width: \"48%\" }}><b>End Date: </b><Datecomp date={invoiceDetails.invoiceDurationEndDate} />\n                                    </div>\n                                </div>\n                                <div style={{ width: \"100%\", display: \"flex\", marginTop: \"3px\" }}>\n                                    <b>Invoice Status: </b>{invoiceDetails.invoiceStatus}\n                                </div>\n\n                            </div>\n                        </div>\n                        <div style={{ marginTop: \"10px\", width: \"100%\" }}>\n                            <h4>Reconciliation Details</h4>\n                        </div>\n                        <table style={{ borderCollapse: \"collapse\", width: \"100%\" }} border={1}>\n                            <thead>\n                                <tr>\n                                    <th>Sr. No.</th>\n                                    <th>Booking Date</th>\n                                    <th>Supplier Name</th>\n                                    <th>Booking Currency</th>\n                                    <th>Booking Amount</th>\n                                    <th>Reconciliation Date</th>\n                                    <th>Invoice Number</th>\n                                    <th>Reconciled Amount</th>\n\n                                    <th>Paid Amount</th>\n                                    <th>Due Amount</th>\n                                    <th>Reconciliation Invoice Date</th>\n                                    <th>Status</th>\n\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {reconciliationDetails && reconciliationDetails.length > 0 &&\n                                    reconciliationDetails.map((item, index) => {\n                                        return <tr>\n                                            <td>{index + 1}</td>\n                                            <td><Datecomp date={item.bookingDate} /></td>\n                                            <td style={{ wordBreak: \"break-all\" }}>{item.supplierName}</td>\n                                            <td>{item.supplierBookingCurrency}</td>\n                                            <td>{item.supplierBookingAmount}</td>\n                                            <td>\n                                                {item.reconciliationDate ? <Datecomp date={item.reconciliationDate} /> : null}\n                                            </td>\n                                            <td style={{ wordBreak: \"break-all\" }}>{item.reconciliationInvoiceNo}</td>\n\n                                            <td>{item.supplierReconciledAmout}</td>\n                                            <td>{item.paidAmount}</td>\n                                            <td>{item.supplierDueAmount}</td>\n                                            <td>{item.reconciliationInvoiceDate ? <Datecomp date={item.reconciliationInvoiceDate} /> : null}</td>\n                                            <td style={{ wordBreak: \"break-all\" }}>{item.reconciliationStatus}</td>\n\n                                        </tr>\n                                    })\n                                }\n                            </tbody>\n                        </table>\n                        <div style={{ marginTop: \"10px\", width: \"100%\" }}>\n                            <h4>Payment History</h4>\n                        </div>\n                        <table style={{ marginTop: \"5px\", borderCollapse: \"collapse\", width: \"100%\", \"word-wrap\": \"break-word\" }} border={1}>\n                            <tr>\n                                <th>Sr. No.</th>\n                                <th>Invoice Number</th>\n                                <th>Invoice Date</th>\n                                <th>Payment Mode</th>\n                                <th>Payment Amount</th>\n                                <th>Payment Date</th>\n                                <th>Transaction Reference Number</th>\n                                <th>Cheque Details</th>\n                                <th>Paid Amount</th>\n                                <th>Due Amount</th>\n\n                            </tr>\n                            {paymentHistory && paymentHistory.length > 0 &&\n                                paymentHistory.map((item, index) => {\n                                    return <tr>\n                                        <td>{index + 1}</td>\n                                        <td style={{ wordBreak: \"break-all\" }}>{item.invoiceNumber}</td>\n                                        <td><Datecomp date={item.invoiceDate} /></td>\n\n                                        <td>{item.paymentMode}</td>\n                                        <td>{item.paymentAmount}</td>\n                                        <td>\n                                            {item.paymentDate ? <Datecomp date={item.paymentDate} /> : null}\n                                        </td>\n                                        <td style={{ wordBreak: \"break-all\" }}>{item.transactionRefNumber}</td>\n\n                                        <td style={{ wordBreak: \"break-word\" }}>{item.chequeNumber ? `Cheque Number:${item.chequeNumber}, \n                                Dt:${Datecomp({ date: item.chequeDate })}, Bank:${item.chequeBank}, Branch:${item.chequeBranch}` : null}</td>\n                                        <td>{item.totalPaidAmount}</td>\n                                        <td>{item.dueAmount}</td>\n\n\n                                    </tr>\n                                })\n                            }\n                            {paymentHistory && paymentHistory.length === 0 &&\n                                <td className=\"text-center\" colSpan={10}> No records found.</td>\n                            }\n                        </table>\n\n                        {paymentReconciliationHistory && paymentReconciliationHistory.length > 0 && (<>\n                            <div style={{ marginTop: \"10px\", width: \"100%\" }}>\n                                <h4>Payment Reconciliation History</h4>\n                            </div>\n                            <table style={{ marginTop: \"5px\", borderCollapse: \"collapse\", width: \"100%\", \"word-wrap\": \"break-word\" }} border={1}>\n                                <tr>\n                                    <th>Sr. No.</th>\n                                    <th>Booking Ref No</th>\n                                    <th>Booking Currency</th>\n                                    <th>Booking Amount</th>\n                                    <th>Reconciled Amount</th>\n                                    <th>Reconciliation Date</th>\n                                    <th>Narration</th>\n                                    <th>Paid Amount</th>\n                                    <th>Payment Amount</th>\n                                    <th>Due Amount</th>\n\n                                </tr>\n                                {paymentReconciliationHistory.map((item, index) => {\n                                    return <tr>\n                                        <td>{index + 1}</td>\n                                        <td style={{ wordBreak: \"break-all\" }}>{item.bookingRefNo}</td>\n                                        <td>{item.supplierBookingCurrency}</td>\n                                        <td>{item.supplierBookingAmount}</td>\n                                        <td>{item.supplierReconciledAmount}</td>\n                                        <td><Datecomp date={item.reconciliationDate} /></td>\n\n                                        <td style={{ wordBreak: \"break-all\" }}>{item.reconciliationNarration}</td>\n                                        <td>{item.paidAmount}</td>\n\n                                        <td>{item.paymentAmount}</td>\n\n                                        <td>{item.dueAmount}</td>\n\n\n\n                                    </tr>\n                                })\n                                }\n                            </table>\n\n\n                        </>)}\n                    </div>\n\n\n                </div>\n            </React.Fragment>\n        )\n    }\n}\nexport default InvoicePrint;","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-brn-payment.jsx",["2012","2013","2014"],"import React, { Component } from \"react\";\nimport TableLoading from \"../loading/table-loading\";\nimport { Trans } from \"./../../helpers/translate\";\nimport Datecomp from \"./../../helpers/date\";\n\nclass SupplierBRNPayment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedRecordIds: this.props.selectedRecordIds,\n            selectedRecords: this.props.selectedRecords,\n            isError: false\n        }\n    }\n    selectRecord = (e, record) => {\n        let selectedRecordIds = this.state.selectedRecordIds;\n        let selectedRecords = this.state.selectedRecords;\n        if (e.target.checked) {\n            selectedRecordIds.push(record.itineraryDetailId)\n            selectedRecords.push({ ...record });\n        } else {\n            let recordIndex = selectedRecordIds.indexOf(record.itineraryDetailId);\n            selectedRecordIds.splice(recordIndex, 1);\n            selectedRecords.splice(recordIndex, 1);\n        }\n        this.setState({ selectedRecordIds, selectedRecords, isError: false });\n    }\n    checkAll = (e) => {\n        let selectedRecordIds = this.state.selectedRecordIds;\n        let selectedRecords = this.state.selectedRecords;\n        if (e.target.checked) {\n            let newSelectedRecordIds = this.props.result.filter((item) => { return item.supplierDueAmount > 0 && selectedRecordIds.indexOf(item.itineraryDetailId) === -1 }).map((item) => { return item.itineraryDetailId });\n            newSelectedRecordIds.map((recordId) => {\n                selectedRecordIds.push(recordId);\n                let record = this.props.result.filter((item) => { return item.itineraryDetailId === recordId })[0];\n                selectedRecords.push(Object.assign(record, { PaidAmount: \"\" }));\n            });\n        } else {\n            let recordIds = this.props.result.filter((item) => { return selectedRecordIds.indexOf(item.itineraryDetailId) > -1 }).map((item) => { return item.itineraryDetailId });\n            recordIds.map((recordId) => {\n                let recordIndex = selectedRecordIds.indexOf(recordId);\n                selectedRecordIds.splice(recordIndex, 1);\n                selectedRecords.splice(recordIndex, 1);\n\n            });\n        }\n        this.setState({ selectedRecordIds, selectedRecords, isError: false });\n    }\n    selectedRecordIdsAmount = () => {\n        return this.state.selectedRecords.reduce((sum, item) => { return sum + (isNaN(parseFloat(item.PaidAmount)) ? 0 : parseFloat(item.PaidAmount)) }, 0);\n    }\n    getBRNReconcileAmount = (itineraryDetailId) => {\n        let itenary = this.state.selectedRecords.filter((item) => { return item.itineraryDetailId === itineraryDetailId });\n        if (itenary.length > 0)\n            return itenary[0].PaidAmount;\n        else return null;\n    }\n    PaidAmountChange = (e, recordId) => {\n        let Records = [...this.state.selectedRecords]\n        let selectedRecord = Records.filter((item) => { return item.itineraryDetailId === recordId })[0];\n        selectedRecord.PaidAmount = e.target.value;\n        this.setState({ selectedRecords: Records });\n    }\n    showSaveForm = () => {\n        if (this.state.selectedRecords.length === 0) {\n            this.setState({ isError: true, errorMessage: \"Select atleast one Booking Reference Number for receive payment.\" });\n            return;\n        }\n        if (this.state.selectedRecords.filter((item) => { return !item.PaidAmount || item.PaidAmount <= 0 || isNaN(parseFloat(item.PaidAmount)) }).length > 0) {\n            let refNo = this.state.selectedRecords.filter((item) => { return !item.PaidAmount || item.PaidAmount <= 0 || isNaN(parseFloat(item.PaidAmount)) })[0].bookingRefNo;\n            this.setState({ isError: true, errorMessage: \"Paid Amount can not be less or equal to 0 or blank or text for BRN \" + refNo });\n            return;\n        }\n        if (this.state.selectedRecords.filter((item) => { return parseFloat(item.PaidAmount) > item.supplierDueAmount }).length > 0) {\n            let refNo = this.state.selectedRecords.filter((item) => { return parseFloat(item.PaidAmount) > item.supplierDueAmount })[0].bookingRefNo;\n            this.setState({ isError: true, errorMessage: \"Paid Amount can not be greater than due amount for BRN \" + refNo });\n            return;\n        }\n        let Amount = this.state.selectedRecords.reduce((sum, item) => { return sum + parseFloat(item.PaidAmount) }, 0);\n        this.props.showSaveForm(Amount, this.state.selectedRecords, \"brnPayment\", this.state.selectedRecordIds);\n    }\n    reset = () => {\n        this.setState({ selectedRecordIds: [], selectedRecords: [], isError: \"\" })\n    }\n    isCheckAll = () => {\n        const RecordIds = this.props.result.filter((item) => { return item.supplierDueAmount > 0 }).map((item) => { return item.itineraryDetailId });\n        if (RecordIds.length === 0)\n            return false;\n        const selectedRecordIds = this.state.selectedRecordIds;\n        return RecordIds.every(v => selectedRecordIds.includes(v));\n    }\n    render() {\n        const { selectedRecordIds, BRNTab } = this.state;\n        const isAllChecked = this.isCheckAll();\n        return (\n            <React.Fragment>\n                <div className=\"row\">\n                    <div className=\"col-lg-1 mt-4\">\n                        <button\n                            className=\"btn btn-secondary float-left\"\n                            type=\"submit\"\n                            onClick={() => this.props.back(\"InvoiceSelection\")}\n                        >\n                            {Trans(\"_previous\")}\n                        </button>\n                    </div>\n                    <div className=\"col-lg-8 mt-4 d-flex flex-column justify-content-center align-items-center\">\n                        {this.state.isError &&\n                            <span className=\"text-danger ml-3\">{this.state.errorMessage}</span>\n                        }\n                    </div>\n                    <div className=\"col-lg-3 mt-4\">\n                        <button\n                            className={`btn mr-2 float-right ${selectedRecordIds.length > 0 ? 'btn-primary' : 'btn-secondary'}`}\n                            type=\"submit\"\n                            onClick={this.showSaveForm}\n                            disabled={selectedRecordIds.length === 0}\n                        >\n                            {Trans(\"Pay\")}\n                        </button>\n                        <button\n                            className=\"btn btn-secondary mr-2 float-right\"\n                            type=\"submit\"\n                            onClick={this.reset}\n                        >\n                            {Trans(\"Reset\")}\n                        </button>\n                    </div>\n                </div>\n                <div className=\"row mt-2\">\n                    <div className=\"col-lg-6\">\n                        <b>{selectedRecordIds.length === 0 ? \"Select at least one record for pay.\" : `Total ${selectedRecordIds.length} record(s) selected.`}</b>\n                    </div>\n                    <div className=\"col-lg-6\">\n                        <div className=\"float-right mr-2\">\n                            <b>Total Amount : {this.selectedRecordIdsAmount()}</b>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"mt-2\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-12\">\n                            <div className=\"table-responsive-lg tableFixHead border\">\n                                <table className=\"table small\">\n                                    <thead className=\"bg-light\">\n                                        <tr>\n                                            <th><input type=\"checkbox\" checked={isAllChecked} onChange={(e) => { this.checkAll(e) }} /></th>\n                                            <th >Sr. No.</th>\n                                            <th >Invoice Number</th>\n                                            <th >Invoice Date</th>\n                                            <th >Booking Date</th>\n                                            <th >Booking Ref. No.</th>\n                                            <th >Due Amount</th>\n                                            <th >Paid Amount</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {!this.props.isLoading && this.props.result.length === 0 &&\n                                            <tr>\n                                                <td className=\"text-center\" colSpan={8}>\n                                                    No records found.\n                                                </td>\n                                            </tr>\n                                        }\n                                        {!this.props.isLoading && this.props.result.map((item, index) => {\n                                            return (\n\n                                                <tr key={index}>\n                                                    <td>\n                                                        {item.supplierDueAmount > 0 &&\n                                                            <input type=\"checkbox\" checked={this.state.selectedRecordIds.indexOf(item.itineraryDetailId) > -1} onChange={(e) => { this.selectRecord(e, item) }} />\n                                                        }\n                                                    </td>\n                                                    <td>{index + 1}</td>\n                                                    <td>{item.reconciliationInvoiceNo}</td>\n                                                    <td><Datecomp date={item.reconciliationInvoiceDate} /></td>\n                                                    <td><Datecomp date={item.bookingDate} /></td>\n                                                    <td>{item.bookingRefNo}</td>\n                                                    <td>{item.supplierReconciledCurrency + \" \" + item.supplierDueAmount}</td>\n                                                    <td>\n                                                        <div className=\"input-group input-group-sm\">\n                                                            <div className=\"input-group-prepend\">\n                                                                <div className=\"input-group-text\">{item.supplierReconciledCurrency}</div>\n                                                            </div>\n                                                            {this.state.selectedRecordIds.indexOf(item.itineraryDetailId) > -1 ?\n                                                                <input type=\"number\" style={{ minWidth: \"75px\" }} className=\"form-control\" value={this.getBRNReconcileAmount(item.itineraryDetailId)} onChange={(e) => { this.PaidAmountChange(e, item.itineraryDetailId) }}></input>\n                                                                : <input type=\"number\" style={{ minWidth: \"75px\" }} className=\"form-control\" value={\"\"} disabled={true}></input>\n                                                            }\n\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            );\n                                        })}\n                                        {this.props.isLoading &&\n                                            <TableLoading columns={8} />\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\nexport default SupplierBRNPayment;","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-invoice-details-pdf.jsx",["2015","2016"],"import React from \"react\";\nimport jsPDF from 'jspdf';\nimport { renderToString } from 'react-dom/server';\nimport Datecomp from \"../../helpers/date\";\nimport autoTable from \"jspdf-autotable\"\n\nclass InvoiceListPdf extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n        this.printRef = React.createRef();\n    }\n    componentDidMount() {\n        let data = this.props.data\n        let reconciliationDetails = data[\"reconciliationDetails\"]\n        let paymentReconciliationHistory = data[\"paymentReconciliationHistory\"]\n        let paymentHistory = data[\"paymentHistory\"]\n        paymentHistory = paymentHistory.length === 1 && !paymentHistory[0].paymentMode ? [] : paymentHistory;\n        const pdf = new jsPDF(\"l\");\n        pdf.setFont(\"default\", \"bold\");\n        let x = 10;\n        let y = 20;\n        pdf.setFontSize(18);\n        autoTable(pdf, {\n            html: '#invoiceDetailslabel', theme: \"plain\", startY: y,\n            columnStyles: {\n                0: { fontStyle: 'bold', fontSize: 18 }\n            }\n        });\n        y = pdf.lastAutoTable.finalY;\n        autoTable(pdf, {\n            html: '#invoiceDetails', theme: \"plain\", startY: y,\n            columnStyles: {\n                0: { fontStyle: 'bold' }\n            }\n        });\n        y = pdf.lastAutoTable.finalY;\n        if (reconciliationDetails && reconciliationDetails.length) {\n            autoTable(pdf, {\n                html: '#ReconciliationDetailsLabel', theme: \"plain\", startY: y + 5,\n                columnStyles: {\n                    0: { fontStyle: 'bold', fontSize: 18 }\n                }\n            });\n            y = pdf.lastAutoTable.finalY;\n            autoTable(pdf, {\n                html: '#ReconciliationDetails', theme: \"striped\", startY: y, showHead: \"everyPage\",\n                headerStyles: {\n                    overflow: 'linebreak',\n                },\n                columnStyles: {\n                    0: { minCellWidth: \"5px\" },\n                    2: { minCellWidth: \"15px\" },\n                }\n            });\n            y = pdf.lastAutoTable.finalY;\n        }\n        if (paymentHistory && paymentHistory.length > 0) {\n            autoTable(pdf, {\n                html: '#PaymentHistoryLabel', theme: \"plain\", startY: y + 5,\n                // theme: \"striped\", startY: y, showHead: \"everyPage\",\n                columnStyles: {\n                    0: { fontStyle: 'bold', fontSize: 18 }\n                }\n            });\n            y = pdf.lastAutoTable.finalY;\n            autoTable(pdf, {\n                html: '#PaymentHistory', theme: \"striped\", startY: y, showHead: \"everyPage\",\n                // columnStyles: {\n                //     0: { fontStyle: 'bold' }\n                // }\n            });\n            y = pdf.lastAutoTable.finalY;\n        }\n        if (paymentReconciliationHistory && paymentReconciliationHistory.length > 0) {\n            autoTable(pdf, {\n                html: '#PaymentReconciliationHistoryLabel', theme: \"plain\", startY: y + 5,\n                // theme: \"striped\", startY: y, showHead: \"everyPage\",\n                columnStyles: {\n                    0: { fontStyle: 'bold', fontSize: 18 }\n                }\n            });\n            y = pdf.lastAutoTable.finalY;\n            autoTable(pdf, {\n                html: '#PaymentReconciliationHistory', theme: \"striped\", startY: y, showHead: \"everyPage\",\n            });\n        }\n\n\n\n        pdf.save(this.props.data[\"invoiceDetails\"][\"invoiceNumber\"]);\n        this.props.onExportComplete();\n    }\n\n    Prints = () => {\n        let data = this.props.data\n        let invoiceDetails = data[\"invoiceDetails\"]\n        let reconciliationDetails = data[\"reconciliationDetails\"]\n        let paymentReconciliationHistory = data[\"paymentReconciliationHistory\"]\n        let paymentHistory = data[\"paymentHistory\"]\n        //this.props.customerData;\n        return (\n            <div style={{ width: \"900px\", \"word-wrap\": \"break-word\" }}>\n                <table id=\"invoiceDetailslabel\">\n                    <tr>\n                        <td>\n                            Invoice Details\n                         </td>\n                    </tr>\n                </table>\n                <table id=\"invoiceDetails\">\n                    <tr>\n                        <td>\n                            <b> Invoice Number: </b>\n                        </td>\n                        <td>{invoiceDetails.invoiceNumber}</td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <b> Net Amount: </b>\n                        </td>\n                        <td>{invoiceDetails.currencyCode + \" \"}{invoiceDetails.invoiceNetAmount}</td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <b> Due Amount: </b>\n                        </td>\n                        <td> {invoiceDetails.currencyCode + \" \"}{invoiceDetails.dueAmount}</td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <b> Invoice Date: </b>\n                        </td>\n                        <td> <Datecomp date={invoiceDetails.invoiceDate} /></td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <b> Due Date: </b>\n                        </td>\n                        <td> <Datecomp date={invoiceDetails.dueDate} /></td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <b> Start Date: </b>\n                        </td>\n                        <td> <Datecomp date={invoiceDetails.invoiceDurationStartDate} /></td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <b> End Date: </b>\n                        </td>\n                        <td> <Datecomp date={invoiceDetails.invoiceDurationEndDate} /></td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <b> Invoice Status:  </b>\n                        </td>\n                        <td> {\" \"}{invoiceDetails.invoiceStatus}</td>\n                    </tr>\n                </table>\n                <table id=\"ReconciliationDetailsLabel\">\n                    <tr>\n                        <td>\n                            Reconciliation Details\n                         </td>\n                    </tr>\n                </table>\n                <table id=\"ReconciliationDetails\"\n                    style={{ marginTop: \"10px\", borderCollapse: \"collapse\", width: \"100%\", \"word-wrap\": \"break-word\" }} border={1}>\n                    <thead>\n                        <tr style={{ backgroundColor: \"#05859e\", color: \"white\" }}>\n                            <th>Sr. No.</th>\n                            <th>Booking Date</th>\n                            <th>Supplier Name</th>\n                            <th>Booking Currency</th>\n                            <th>Booking Amount</th>\n                            <th>Reconciliation Date</th>\n                            <th>Invoice Number</th>\n                            <th>Reconciled Amount</th>\n                            <th>Paid Amount</th>\n                            <th>Due Amount</th>\n                            <th>Reconciliation Invoice Date</th>\n                            <th>Status</th>\n                        </tr>\n                    </thead>\n                    {reconciliationDetails && reconciliationDetails.length > 0 &&\n                        reconciliationDetails.map((item, index) => {\n                            return <tr>\n                                <td>{index + 1}</td>\n                                <td><Datecomp date={item.bookingDate} /></td>\n                                <td>{item.supplierName}</td>\n                                <td>{item.supplierBookingCurrency}</td>\n                                <td>{item.supplierBookingAmount}</td>\n                                <td>\n                                    {item.reconciliationDate ? <Datecomp date={item.reconciliationDate} /> : null}\n                                </td>\n                                <td>{item.reconciliationInvoiceNo}</td>\n\n                                <td>{item.supplierReconciledAmout}</td>\n                                <td>{item.paidAmount}</td>\n                                <td>{item.supplierDueAmount}</td>\n                                <td>{item.reconciliationInvoiceDate ? <Datecomp date={item.reconciliationInvoiceDate} /> : null}</td>\n                                <td>{item.reconciliationStatus}</td>\n\n                            </tr>\n                        })\n                    }\n                </table>\n                <table id=\"PaymentHistoryLabel\">\n                    <tr>\n                        <td>\n                            Payment History\n                         </td>\n                    </tr>\n                </table>\n                <table id=\"PaymentHistory\" style={{ marginTop: \"10px\", borderCollapse: \"collapse\", width: \"100%\", \"word-wrap\": \"break-word\" }} border={1}>\n                    <thead>\n                        <tr style={{ backgroundColor: \"#05859e\", color: \"white\" }}>\n                            <th>Sr. No.</th>\n                            <th>Invoice Number</th>\n                            <th>Invoice Date</th>\n                            <th>Payment Mode</th>\n                            <th>Payment Amount</th>\n                            <th>Payment Date</th>\n                            <th>Transaction Reference Number</th>\n                            <th>Cheque Details</th>\n                            <th>Paid Amount</th>\n                            <th>Due Amount</th>\n\n                        </tr>\n                    </thead>\n                    {paymentHistory && paymentHistory.length > 0 &&\n                        paymentHistory.map((item, index) => {\n                            return <tr>\n                                <td>{index + 1}</td>\n                                <td>{item.invoiceNumber}</td>\n                                <td><Datecomp date={item.invoiceDate} /></td>\n\n                                <td>{item.paymentMode}</td>\n                                <td>{item.paymentAmount}</td>\n                                <td>\n                                    {item.paymentDate ? <Datecomp date={item.paymentDate} /> : null}\n                                </td>\n                                <td>{item.transactionRefNumber}</td>\n\n                                <td>{item.chequeNumber ? `Cheque Number:${item.chequeNumber},\n                                Dt:${item.chequeDate},Bank: ${item.chequeBank},Branch:${item.chequeBranch}` : null}</td>\n                                <td>{item.totalPaidAmount}</td>\n                                <td>{item.dueAmount}</td>\n\n\n                            </tr>\n                        })\n                    }\n                </table>\n\n                <table id=\"PaymentReconciliationHistoryLabel\">\n                    <tr>\n                        <td>\n                            Payment Reconciliation History\n                         </td>\n                    </tr>\n                </table>\n                <table id=\"PaymentReconciliationHistory\" style={{ marginTop: \"10px\", borderCollapse: \"collapse\", width: \"100%\", \"word-wrap\": \"break-word\" }} border={1}>\n                    <thead>\n                        <tr style={{ backgroundColor: \"#05859e\", color: \"white\" }}>\n                            <th>Sr. No.</th>\n                            <th>Booking Ref No</th>\n                            <th>Booking Currency</th>\n                            <th>Booking Amount</th>\n                            <th>Reconciled Amount</th>\n                            <th>Reconciliation Date</th>\n                            <th>Narration</th>\n                            <th>Paid Amount</th>\n                            <th>Payment Amount</th>\n                            <th>Due Amount</th>\n                        </tr>\n                    </thead>\n                    {paymentReconciliationHistory.map((item, index) => {\n                        return <tr>\n                            <td>{index + 1}</td>\n                            <td>{item.bookingRefNo}</td>\n                            <td>{item.supplierBookingCurrency}</td>\n                            <td>{item.supplierBookingAmount}</td>\n                            <td>{item.supplierReconciledAmount}</td>\n                            <td><Datecomp date={item.reconciliationDate} /></td>\n                            <td>{item.reconciliationNarration}</td>\n                            <td>{item.paidAmount}</td>\n                            <td>{item.paymentAmount}</td>\n                            <td>{item.dueAmount}</td>\n                        </tr>\n                    })\n                    }\n                </table>\n            </div >\n\n        )\n    }\n\n\n    render() {\n        return (\n            this.Prints()\n        );\n    }\n}\nexport default InvoiceListPdf;","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\business-dropdown.jsx",["2017","2018"],"import React, { Component } from 'react'\nimport { apiRequester } from \"../../services/requester-report\";\nexport class BusinessDD extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            business: [],\n            selectedValue: \"\",\n            isLoading: false\n        };\n    }\n    getBusinesses = () => {\n        this.setState({ isLoading: true });\n        let reqURL = \"reconciliation/supplier/business?providerid=\" + this.props.providerID;\n        apiRequester(\n            reqURL,\n            {},\n            function (data) {\n                this.setState({ business: data.response, isLoading: false });\n            }.bind(this),\n            \"GET\"\n        );\n    }\n    getSupplier = (businessID) => {\n        this.setState({ isLoading: true });\n        let reqURL = \"reconciliation/supplier/business/suppliers?businessid=\" + businessID + \"&providerid=\" + this.props.providerID;\n        apiRequester(\n            reqURL,\n            {},\n            function (data) {\n                this.setState({ isLoading: false });\n                this.props.handleBusiness(businessID, data.response);\n                sessionStorage.setItem(\"reportBusinessSupplier\", JSON.stringify({ providerID: this.props.providerID, businessID, businessList: this.state.business, supplierList: data.response }));\n            }.bind(this),\n            \"GET\"\n        );\n    }\n    componentDidMount() {\n        if (sessionStorage.getItem(\"reportBusinessSupplier\")) {\n            const results = JSON.parse(sessionStorage.getItem(\"reportBusinessSupplier\"));\n            if (results && results.providerID == this.props.providerID && results.businessID != this.state.selectedValue) {\n                this.setState({ selectedValue: results.businessID, business: results.businessList });\n                this.props.handleBusiness(results.businessID, results.supplierList);\n            } else {\n                sessionStorage.removeItem(\"reportBusinessSupplier\");\n                this.getBusinesses();\n            }\n        } else\n            this.getBusinesses();\n    }\n    handleValueChange(event) {\n        this.setState({ selectedValue: event.target.value });\n        if (!event.target.value || event.target.value === \"\") {\n            sessionStorage.removeItem(\"reportBusinessSupplier\");\n            this.props.handleBusiness('', []);\n        } else\n            this.getSupplier(event.target.value);\n    }\n    render() {\n        let { business, selectedValue, isLoading } = this.state;\n        let { BusinessId, disabled } = this.props;\n        selectedValue = BusinessId ? BusinessId : selectedValue;\n        return (\n            <React.Fragment>\n                <label htmlFor={\"business\"}>{\"Business *\"}</label>\n                <div className=\"input-group\">\n                    <select\n                        value={selectedValue}\n                        onChange={(e) => this.handleValueChange(e)}\n                        name={\"business\"}\n                        id={\"business\"}\n                        className={\"form-control\"}\n                        disabled={disabled}>\n                        <option key={0} value={''}>Select</option>\n                        {business.map((option, key) => (\n\n                            <option\n                                key={key}\n                                value={\n                                    option[\"businessTypeId\"]\n                                }\n                            >\n                                {option[\"businessType\"]}\n                            </option>\n                        ))}\n                    </select>\n                    {isLoading ? (\n                        <div className=\"input-group-append\">\n                            <div className=\"input-group-text\">\n                                <span\n                                    className=\"spinner-border spinner-border-sm mr-2\"\n                                    role=\"status\"\n                                    aria-hidden=\"true\"\n                                ></span>\n                            </div>\n                        </div>\n                    ) : null}\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default BusinessDD\n","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-ledger-filter.jsx",["2019","2020"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\invoice-pdf.jsx",["2021","2022"],"import React, { Component } from \"react\";\nimport Datecomp from \"../../helpers/date\";\nimport * as Global from \"../../helpers/global\";\nimport { Trans } from \"../../helpers/translate\";\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable'\nconst style = `<style>td {padding:3px}</style>`;\nclass InvoicePrint extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n        this.printRef = React.createRef();\n    }\n    componentDidMount() {\n        let printData = this.props.printData;\n        const pdf = new jsPDF(\"l\");\n        pdf.setFont(\"default\", \"bold\");\n        let x = 10;\n        let y = 20;\n        pdf.setFontSize(18);\n        autoTable(pdf, {\n            html: '#customerinforLabel', theme: \"plain\", startY: y,\n            columnStyles: {\n                0: { fontStyle: 'bold', fontSize: 18 }\n            }\n        });\n        y = pdf.lastAutoTable.finalY;\n        autoTable(pdf, {\n            html: '#customerInfo', theme: \"plain\", startY: y,\n            columnStyles: {\n                0: { fontStyle: 'bold' }\n            }\n        });\n        y = pdf.lastAutoTable.finalY;\n        autoTable(pdf, {\n            html: '#InvoiceDetailsLabel', theme: \"plain\", startY: y += 5,\n            columnStyles: {\n                0: { fontStyle: 'bold', fontSize: 18 }\n            }\n        });\n        y = pdf.lastAutoTable.finalY;\n        autoTable(pdf, {\n            html: '#InvoiceDetails', theme: \"plain\", startY: y,\n            columnStyles: {\n                0: { fontStyle: 'bold' },\n                2: { fontStyle: 'bold' },\n                4: { fontStyle: 'bold' },\n            }\n        });\n        y = pdf.lastAutoTable.finalY;\n        if (printData.itenary && printData.itenary.length > 0) {\n            autoTable(pdf, {\n                html: '#ItenaryDetailsLabel', theme: \"plain\", startY: y += 5,\n                columnStyles: {\n                    0: { fontStyle: 'bold', fontSize: 18 }\n                }\n            });\n            y = pdf.lastAutoTable.finalY;\n            autoTable(pdf, {\n                html: '#itenaryDetail', theme: \"striped\", startY: y, showHead: \"everyPage\"\n            });\n            y = pdf.lastAutoTable.finalY;\n        }\n        if (printData.paymentHistory && printData.paymentHistory.length > 0) {\n            autoTable(pdf, {\n                html: '#PaymentDetailsLabel', theme: \"plain\", startY: y += 5,\n                columnStyles: {\n                    0: { fontStyle: 'bold', fontSize: 18 }\n                }\n            });\n            y = pdf.lastAutoTable.finalY;\n            autoTable(pdf, {\n                html: '#paymentHistory', theme: \"striped\", startY: y, showHead: \"everyPage\"\n            });\n        }\n        pdf.save(this.props.printData.header.invoiceNumber);\n        this.props.actionHide();\n    }\n    Prints = () => {\n        let printData = this.props.printData;\n        let customerData = this.props.customerData;\n\n        const Business = Object.assign(...Global.getEnvironmetKeyValue(\"availableBusinesses\").map(business => ({ [business.aliasId ? business.aliasId : business.id]: Trans(\"_\" + business.name) })));\n        return (\n            <div style={{ width: \"800px\", \"word-wrap\": \"break-word\" }}>\n                <table id=\"customerinforLabel\">\n                    <tr>\n                        <td>\n                            Customer Information\n                        </td>\n                    </tr>\n                </table>\n                <table id=\"InvoiceDetailsLabel\">\n                    <tr>\n                        <td>\n                            Invoice Details\n                        </td>\n                    </tr>\n                </table>\n                <table id=\"ItenaryDetailsLabel\">\n                    <tr>\n                        <td>\n                            Itinerary Details\n                        </td>\n                    </tr>\n                </table>\n                <table id=\"PaymentDetailsLabel\">\n                    <tr>\n                        <td>\n                            Payment Details\n                        </td>\n                    </tr>\n                </table>\n                <table id=\"customerInfo\">\n                    <tr>\n                        <td>\n                            Name:\n                            </td>\n                        <td>\n                            {customerData.displayName}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            Email Address:\n                            </td>\n                        <td>\n                            {customerData.email}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            Contact Phone:\n                            </td>\n                        <td>\n                            {customerData.cellPhone}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            Address:\n                            </td>\n                        <td>\n                            {`${customerData.address1 && customerData.address1.length > 0 ? customerData.address1 : \"\"}${customerData.address2 && customerData.address2.length > 0 ? \",\" + customerData.address2 : \"\"}${customerData.area && customerData.area.length > 0 ? \",\" + customerData.area : \"\"}${customerData.city && customerData.city.length > 0 ? \",\" + customerData.city : \"\"}${customerData.state && customerData.state.length > 0 ? \",\" + customerData.state : \"\"}${customerData.countryName && customerData.countryName.length > 0 ? \",\" + customerData.countryName : \"\"}${customerData.postalCode && customerData.postalCode.length > 0 ? \"-\" + customerData.postalCode : \"\"}.`}\n                        </td>\n                    </tr>\n                </table>\n\n                <table id=\"InvoiceDetails\" style={{ width: \"100%\", \"word-wrap\": \"break-word\" }}>\n                    <tr>\n                        <td><b>Number:</b></td>\n                        <td>{printData.header.invoiceNumber}</td>\n                        <td><b>Date:</b></td>\n                        <td>{printData.header.invoiceDate ? <Datecomp date={printData.header.invoiceDate} /> : \"\"}</td>\n                        <td><b>Start Date:</b></td>\n                        <td>{printData.header.invoiceStartDate ? <Datecomp date={printData.header.invoiceStartDate} /> : null}</td>\n                    </tr>\n                    <tr>\n                        <td><b>End Date:</b></td>\n                        <td>{printData.header.invoiceEndDate ? <Datecomp date={printData.header.invoiceEndDate} /> : \"\"}</td>\n                        <td><b>Total Amount:</b></td>\n                        <td>{printData.header.currency + \" \" + printData.header.invoiceTotalAmount}</td>\n                        <td><b>Tax Amount:</b></td>\n                        <td>{printData.header.currency + \" \" + printData.header.invoiceTaxAmount}</td>\n                    </tr>\n                    <tr>\n                        <td><b>Net Amount:</b></td>\n                        <td>{printData.header.currency + \" \" + printData.header.invoiceNetAmount}</td>\n                        <td><b>Reconciliation Status:</b></td>\n                        <td>{printData.header.invoiceReconciliationStatus}</td>\n                        <td><b>Comments:</b></td>\n                        <td>{printData.header.comments}</td>\n                    </tr>\n                </table>\n                <table id=\"itenaryDetail\" style={{ borderCollapse: \"collapse\", width: \"100%\", \"word-wrap\": \"break-word\" }} border={1}>\n                    <thead>\n                        <tr style={{ backgroundColor: \"#05859e\", color: \"white\" }}>\n                            <th>Reference Number</th>\n                            <th>Business</th>\n                            <th>Booking Amount</th>\n                            <th>Reconciliation Date</th>\n                            <th>Reconciliation Amount</th>\n                            <th>Comments</th>\n                        </tr>\n                    </thead>\n                    {printData.itenary && printData.itenary.map((item) => {\n                        return <tr>\n                            <td>{item.itineraryRefNo}</td>\n                            <td>{Business[item.businessID]}</td>\n                            <td>{item.bookingAmount ? item.bookingCurrency + \" \" + item.bookingAmount : \"\"}</td>\n                            <td>{item.reconciliationDate ? <Datecomp date={item.reconciliationDate} /> : \"\"}</td>\n                            <td>{item.reconciliationAmount ? item.bookingCurrency + \" \" + item.reconciliationAmount : \"\"}</td>\n                            <td>{item.comments}</td>\n                        </tr>\n                    })\n                    }\n                </table>\n                <table id=\"paymentHistory\" style={{ borderCollapse: \"collapse\", width: \"100%\", \"word-wrap\": \"break-word\" }} border={1}>\n                    <thead>\n                        <tr style={{ backgroundColor: \"#05859e\", color: \"white\" }}>\n                            <th>Payment Date</th>\n                            <th>Total Paid Amount</th>\n                            <th>Due Amount</th>\n                            <th>Payment Amount</th>\n                            <th>Payment Mode</th>\n                            <th>Transaction Number</th>\n                            <th>Bank Name</th>\n                            <th>Branch Name</th>\n                            <th>Cheque Number</th>\n                            <th>Cheque Date</th>\n                            <th>Comments</th>\n                        </tr>\n                    </thead>\n                    {printData.paymentHistory && printData.paymentHistory.map((item) => {\n                        return <tr>\n                            <td>{item.paymentDate ? <Datecomp date={item.paymentDate} /> : \"\"}</td>\n                            <td>{item.totalPaidAmount ? item.paymentCurrency + \" \" + item.totalPaidAmount : \"\"}</td>\n                            <td>{item.dueAmount ? item.paymentCurrency + \" \" + item.dueAmount : \"\"}</td>\n                            <td>{item.paymentAmount ? item.paymentCurrency + \" \" + item.paymentAmount : \"\"}</td>\n                            <td>{item.paymentMode}</td>\n                            <td>{item.transactionToken}</td>\n                            <td>{item.bankName}</td>\n                            <td>{item.branchName}</td>\n                            <td>{item.chequeNumber}</td>\n                            <td>{item.chequeDate ? <Datecomp date={item.chequeDate} /> : \"\"}</td>\n                            <td>{item.comment}</td>\n                        </tr>\n                    })}\n                </table>\n            </div >\n        )\n    }\n    render() {\n        return (\n            this.Prints()\n        )\n    }\n}\nexport default InvoicePrint;","E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\manual-booking-add-offline.jsx",["2023","2024","2025","2026"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\invoice-print.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\search\\manual-booking-search-tabs.jsx",["2027"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\invoice-selection-list.jsx",["2028","2029","2030","2031","2032","2033"],"\n\nimport React, { Component } from \"react\";\nimport { Trans } from \"../../helpers/translate\";\nimport ReconciliationDetailFilters from \"./reconciliationdetail-filters\";\nimport Pagination from \"./../../components/booking-management/booking-pagination\";\nimport TableLoading from \"../loading/table-loading\";\nimport Datecomp from \"./../../helpers/date\";\nimport PdfIcon from \"../../assets/images/reports/pdf.png\"\nimport PrintIcon from \"../../assets/images/reports/print.png\"\n\nclass InvoiceSelection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedRecordIds: this.props.selectedRecordIds,\n            selectedRecords: this.props.selectedRecords,\n            paymentType: \"full\",\n            isError: false\n        }\n    }\n    selectRecord = (e, record) => {\n        let selectedRecordIds = this.state.selectedRecordIds;\n        let selectedRecords = this.state.selectedRecords;\n        if (e.target.checked) {\n\n            selectedRecordIds.push(record.agentCustomerInvoiceID)\n            selectedRecords.push(record);\n        } else {\n            let recordIndex = selectedRecordIds.indexOf(record.agentCustomerInvoiceID);\n            selectedRecordIds.splice(recordIndex, 1);\n            selectedRecords.splice(recordIndex, 1);\n        }\n        this.setState({ selectedRecordIds, selectedRecords, isError: false });\n    }\n    checkAll = (e) => {\n\n        let selectedRecordIds = this.state.selectedRecordIds;\n        let selectedRecords = this.state.selectedRecords;\n        if (e.target.checked) {\n            let newSelectedRecordIds = this.props.result.filter((item) => { return item.dueAmount > 0 && selectedRecordIds.indexOf(item.agentCustomerInvoiceID) === -1 }).map((item) => { return item.agentCustomerInvoiceID });\n            newSelectedRecordIds.map((recordId) => {\n                selectedRecordIds.push(recordId);\n                selectedRecords.push(this.props.result.filter((item) => { return item.agentCustomerInvoiceID === recordId })[0]);\n            });\n        } else {\n            let recordIds = this.props.result.filter((item) => { return item.dueAmount > 0 && selectedRecordIds.indexOf(item.agentCustomerInvoiceID) > -1 }).map((item) => { return item.agentCustomerInvoiceID });\n            recordIds.map((recordId) => {\n                let recordIndex = selectedRecordIds.indexOf(recordId);\n                selectedRecordIds.splice(recordIndex, 1);\n                selectedRecords.splice(recordIndex, 1);\n\n            });\n        }\n        this.setState({ selectedRecordIds, selectedRecords, isError: false });\n    }\n    selectedRecordIdsAmount = () => {\n        return this.state.selectedRecords.reduce((sum, item) => { return sum + parseFloat(item.dueAmount) }, 0);\n    }\n    showSaveForm = (noValidate) => {\n        if (!noValidate && this.state.selectedRecords.length === 0) {\n            this.setState({ isError: true });\n            return;\n        }\n        let Amount = this.state.selectedRecords.reduce((sum, item) => { return sum + parseFloat(item.dueAmount) }, 0);\n        this.props.showSaveForm(Amount, this.state.selectedRecords, this.state.paymentType, this.state.selectedRecordIds);\n    }\n    changePaymentType = (type) => {\n        this.setState({ paymentType: type })\n        if (type === \"partial\") {\n            let Amount = this.state.selectedRecords.reduce((sum, item) => { return sum + parseFloat(item.dueAmount) }, 0);\n            this.props.showSaveForm(Amount, this.state.selectedRecords, type, this.state.selectedRecordIds);\n        }\n    }\n    handleFilters = (filters) => {\n        this.props.handleFilters(filters);\n        this.setState({\n            selectedRecordIds: [],\n            selectedRecords: []\n        });\n    }\n    isCheckAll = () => {\n        const RecordIds = this.props.result.filter((item) => { return item.dueAmount > 0 }).map((item) => { return item.agentCustomerInvoiceID });\n        if (RecordIds.length === 0)\n            return false;\n        const selectedRecordIds = this.state.selectedRecordIds;\n        return RecordIds.every(v => selectedRecordIds.includes(v));\n    }\n    render() {\n        const pageInfoIndex = [{ item: this.props.pageInfo }];\n        const { selectedRecordIds } = this.state;\n        const isAllChecked = this.isCheckAll();\n        return (\n            <React.Fragment>\n                {\n                    this.props.isFilters && (\n                        <ReconciliationDetailFilters\n                            filters={this.props.filters}\n                            handleFilters={this.handleFilters}\n                            showHideFilters={this.props.showHideFilters}\n                            type={\"Invoice\"}\n                        />\n                    )\n                }\n                <div className=\"row\">\n                    <div className=\"col-sm-6  col-md-6 col-lg-6 mt-2\">\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                            <button type=\"button\" onClick={() => this.changePaymentType(\"full\")} className={`btn ${this.state.paymentType === \"full\" ? 'btn-primary active' : 'btn-secondary'}`}>Pay by Invoices</button>\n                            <button type=\"button\" onClick={() => this.changePaymentType(\"partial\")} className={`btn ${this.state.paymentType === \"partial\" ? 'btn-primary active' : 'btn-secondary'}`}>Pay by BRNs</button>\n                        </div>\n                    </div>\n\n                    <div className=\"col-sm-6  col-md-6 col-lg-6 mt-2\">\n                        <button\n                            className={`btn mr-2 float-right ${selectedRecordIds.length > 0 ? 'btn-primary' : 'btn-secondary'}`}\n                            type=\"submit\"\n                            onClick={() => this.showSaveForm()}\n                            disabled={selectedRecordIds.length === 0}\n                        >\n                            {Trans(\"_next\")}\n                        </button>\n                    </div>\n                </div>\n                <div className=\"row mt-2\">\n                    <div className=\"col-lg-6\">\n                        <b>{selectedRecordIds.length === 0 ? \"Please select at least one record to pay.\" : `Total ${selectedRecordIds.length} record(s) selected.`}</b>\n                    </div>\n                    <div className=\"col-lg-6\">\n                        <div className=\"float-right mr-2\">\n                            <b>Total Amount : {this.selectedRecordIdsAmount()}</b>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row mt-1\">\n                    <div className=\"col-lg-12\">\n                        <div className=\"table-responsive-lg\">\n                            <table className=\"table border\">\n                                <thead className=\"thead-light\">\n                                    <tr>\n                                        <th><input checked={isAllChecked} type=\"checkbox\" onChange={(e) => { this.checkAll(e) }} /></th>\n                                        <th >Invoice Number</th>\n                                        <th >Invoice Date</th>\n                                        <th >Invoice Amount</th>\n                                        <th >Paid Amount</th>\n                                        <th >Due Amount</th>\n                                        <th >Status</th>\n                                        <th >Actions</th>\n\n                                    </tr>\n                                </thead>\n                                {!this.props.isLoading && this.props.result.length === 0 &&\n                                    <tr>\n                                        <td className=\"text-center\" colSpan={8}>\n                                            No records found.\n                                                </td>\n                                    </tr>\n                                }\n                                {!this.props.isLoading && this.props.result.map((item) => {\n                                    return (\n\n                                        <tr>\n                                            <td>\n                                                {item.dueAmount > 0 &&\n                                                    <input type=\"checkbox\" checked={this.state.selectedRecordIds.indexOf(item.agentCustomerInvoiceID) > -1} onClick={(e) => { this.selectRecord(e, item) }} />\n                                                }\n                                            </td>\n\n                                            <td>{item.invoiceNumber}</td>\n                                            <td><Datecomp date={item.invoiceDate} /></td>\n                                            <td> {item.bookingCurrency + \" \" + item.invoiceTotalAmount}</td>\n                                            <td> {item.bookingCurrency + \" \" + item.paidAmount}</td>\n                                            <td> {item.bookingCurrency + \" \" + item.dueAmount}</td>\n                                            <td>{item.invoiceReconciliationStatus}</td>\n                                            <td>\n                                                {/* <button className=\"btn btn-primary btn-sm mr-1\" onClick={() => { this.props.btnaction(item.agentCustomerInvoiceID, \"Print\") }}>Print</button> */}\n                                                {/* <button className=\"btn btn-primary btn-sm\" onClick={() => { this.props.btnaction(item.agentCustomerInvoiceID, \"PDF\") }}>Pdf</button> */}\n                                                <a onClick={() => { this.props.btnaction(item.agentCustomerInvoiceID, \"Print\") }} className=\"m-1\">\n                                                    <img title=\"Print\" style={{ cursor: \"pointer\" }} height={20} src={PrintIcon} />                                                    </a>\n                                                <a onClick={() => { this.props.btnaction(item.agentCustomerInvoiceID, \"PDF\") }} className=\"m-1\">\n                                                    <img title=\"PDF\" style={{ cursor: \"pointer\" }} height={20} src={PdfIcon} />                                                    </a>\n                                            </td>\n                                        </tr>\n                                    );\n                                })}\n                                {this.props.isLoading &&\n                                    <TableLoading columns={8} />\n                                }\n                            </table>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-12 report-pagination\">\n                        {!this.props.isLoading && this.props.result.length > 0 &&\n                            <Pagination\n                                pageInfoIndex={pageInfoIndex}\n                                handlePaginationResults={this.props.handlePaginationResults}\n                            />\n                        }\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\nexport default InvoiceSelection;","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\customer-payment-info-form.jsx",["2034","2035"],"import React from \"react\";\nimport Form from \"../common/form\";\nimport { Trans } from \"../../helpers/translate\";\nimport { PaymentMode } from \"../../helpers/dropdown-list\";\nimport Datecomp from \"./../../helpers/date\";\nimport { apiRequester } from \"./../../services/requester-report\";\nimport moment from 'moment';\nimport MessageBar from '../admin/message-bar';\nclass CustomerPaymentInfoForm extends Form {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {\n                PaymentAmount: this.props.Amount,\n                PaymentMode: \"Cash\",\n                TransactionToken: \"\",\n                BankName: \"\",\n                BranchName: \"\",\n                ChequeNumber: \"\",\n                ChequeDate: moment(new Date()).format(\"YYYY-MM-DD\"),\n                PaymentDate: moment(new Date()).format(\"YYYY-MM-DD\"),\n                Comments: \"\"\n            }, errors: {},\n            saveError: \"\",\n            isLoading: false\n        };\n    }\n    saveReconciliation = () => {\n        const errors = this.validate();\n        this.setState({ errors: errors || {} });\n        if (errors) return;\n        this.setState({ isLoading: true });\n        let currency = this.props.SelectedRecords[0].bookingCurrency;\n        let reqURL = this.props.paymentType === \"full\" ? \"reconciliation/customer/invoice/payment\" : \"reconciliation/customer/invoice/payment/brn\";\n        let PaymentInfo = { ...this.state.data };\n        if (PaymentInfo.PaymentMode === \"Cheque\") {\n            PaymentInfo.TransactionToken = \"\";\n        } else {\n            PaymentInfo.BankName = \"\";\n            PaymentInfo.BranchName = \"\";\n            PaymentInfo.ChequeNumber = \"\";\n            PaymentInfo.ChequeDate = \"\";\n        }\n        PaymentInfo[\"PaymentCurrency\"] = currency;\n        let reqOBJ = { PaymentInfo };\n        if (this.props.paymentType === \"full\") {\n            reqOBJ.agentCustomerInvoiceIDs = this.props.SelectedRecords.map((item) => { return item.agentCustomerInvoiceID });\n        }\n        else {\n            let BRNList = [...this.props.SelectedRecords];\n            reqOBJ.BRNInfo = BRNList.reduce((bRNObject, item) => {\n                let invoice = bRNObject.filter((param) => { return param.AgentCustomerInvoiceID === item.agentCustomerInvoiceID });\n                if (invoice.length === 0) {\n                    bRNObject.push({\n                        AgentCustomerInvoiceID: item.agentCustomerInvoiceID,\n                        ItineraryDetails: [this.createItenaryDetail(item, reqOBJ.PaymentInfo)]\n                    });\n\n                } else {\n                    invoice[0].ItineraryDetails.push(this.createItenaryDetail(item, reqOBJ.PaymentInfo));\n                }\n                return bRNObject;\n            }, []);\n        }\n        apiRequester(reqURL, { \"request\": reqOBJ }, function (data) {\n            if (data.message === \"success\") {\n                this.setState({\n                    isLoading: false\n                });\n                this.setState({ showSuccessMessage: true });\n            } else {\n                this.setState({\n                    isLoading: false, isSaveError: true, saveError: data.message\n                });\n            }\n\n        }.bind(this), \"POST\")\n\n    }\n    createItenaryDetail = (item, PaymentInfo) => {\n        return {\n            \"AgentCustomerReconciliationID\": item.agentCustomerReconciliationID,\n            \"ItineraryRefNo\": item.itineraryRefNo,\n            \"ItineraryID\": item.itineraryID,\n            \"BookingRef\": item.bookingRef,\n            \"ItineraryDetailID\": item.itineraryDetailID,\n            \"ReconciliationDate\": PaymentInfo.PaymentDate,\n            \"ReconciliationAmount\": parseFloat(item.ReconciliationAmount),\n            \"ReconciliationCurrency\": PaymentInfo.PaymentCurrency,\n            \"Comments\": PaymentInfo.Comments\n        }\n    }\n    validate = () => {\n        const errors = {};\n        const { data } = this.state;\n\n        if (!this.validateFormData(data.PaymentDate, \"require_date\"))\n            errors.PaymentDate = \"Payment Date required\";\n\n        if (!this.validateFormData(data.ReconciliationDate, \"require_date\"))\n            errors.ReconciliationDate = \"Reconciliation Date required\";\n\n\n        if (!this.validateFormData(data.PaymentMode, \"require\"))\n            errors.PaymentMode = \"Payment Mode required\";\n\n        if (data.PaymentMode === \"Cheque\") {\n            if (!this.validateFormData(data.BankName, \"require\"))\n                errors.BankName = \"Bank Name required\";\n            if (!this.validateFormData(data.BranchName, \"require\"))\n                errors.BranchName = \"Branch Name required\";\n            if (!this.validateFormData(data.ChequeNumber, \"require\"))\n                errors.ChequeNumber = \"Cheque Number required\";\n            if (!this.validateFormData(data.ChequeDate, \"require_date\"))\n                errors.ChequeDate = \"Cheque Date required\";\n        }\n        else {\n            if (!this.validateFormData(data.TransactionToken, \"require\"))\n                errors.TransactionToken = \"Reference Number required\";\n        }\n        if (!this.validateFormData(data.Comments, \"require\"))\n            errors.Comments = \"Comment required\";\n\n        return Object.keys(errors).length === 0 ? null : errors;\n    };\n    render() {\n        let currency = this.props.SelectedRecords[0].bookingCurrency;\n        const { showSuccessMessage } = this.state;\n        return (\n            <div>\n                {showSuccessMessage &&\n                    <MessageBar Message={`Payment done successfully.`} handleClose={() => this.props.onSaveSuccess()} />\n                }\n                <div className=\"row\">\n                    <div className=\"col-lg-8\">\n                        <div className=\"border\">\n                            <div className=\"row\">\n                                <div className=\"col-lg-12\">\n                                    <div className=\"bg-light border-bottom pt-2 pb-2 pl-2 pr-2\">\n                                        <b>Payment Information</b>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"border-bottom pl-2 pr-2 pt-2 pb-1\">\n                                <div className=\"row\">\n                                    <div className=\"col-lg-6 col-sm-12\">\n                                        {this.renderInput(\n                                            \"PaymentAmount\",\n                                            Trans(\"Payment Received *\"),\n                                            \"text\",\n                                            true\n                                        )}\n                                    </div>\n                                    <div className=\"col-lg-6 col-sm-12\">\n                                        {this.renderBirthDate(\n                                            \"PaymentDate\",\n                                            Trans(\"Payment Date *\")\n                                        )}\n                                    </div>\n                                    <div className=\"col-lg-6 col-sm-12\">\n                                        {this.renderSelect(\n                                            \"PaymentMode\",\n                                            Trans(\"Payment Mode *\"),\n                                            PaymentMode\n                                        )}\n                                    </div>\n\n                                    {this.state.data.PaymentMode === \"Cheque\" &&\n                                        <React.Fragment>\n                                            <div className=\"col-lg-6 col-sm-12\">\n                                                {this.renderInput(\n                                                    \"BankName\",\n                                                    Trans(\"Bank Name *\"),\n                                                    \"text\",\n                                                    false\n                                                )}\n                                            </div>\n                                            <div className=\"col-lg-6 col-sm-12\">\n                                                {this.renderInput(\n                                                    \"BranchName\",\n                                                    Trans(\"Branch Name *\"),\n                                                    \"text\",\n                                                    false\n                                                )}\n                                            </div>\n                                            <div className=\"col-lg-6 col-sm-12\">\n                                                {this.renderInput(\n                                                    \"ChequeNumber\",\n                                                    Trans(\"Cheque Number *\"),\n                                                    \"text\",\n                                                    false\n                                                )}\n                                            </div>\n                                            <div className=\"col-lg-6 col-sm-12\">\n                                                {this.renderPaymentDate(\n                                                    \"ChequeDate\",\n                                                    Trans(\"Cheque Date *\")\n                                                )}\n                                            </div>\n                                        </React.Fragment>\n                                    }\n                                    {this.state.data.PaymentMode != \"Cheque\" &&\n                                        <div className=\"col-lg-6 col-sm-12\">\n                                            {this.renderInput(\n                                                \"TransactionToken\",\n                                                Trans(\"Reference Number *\"),\n                                                \"text\",\n                                                false\n                                            )}\n                                        </div>\n                                    }\n                                    <div className=\"col-lg-6 col-sm-6\">\n                                        {this.renderTextarea(\"Comments\", Trans(\"Comment *\"))}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-lg-6 mt-2 mb-2 text-danger\">\n                                    {this.state.saveError}\n                                </div>\n                                <div className=\"col-lg-6 mt-2 mb-2\">\n                                    <button\n                                        className=\"btn btn-primary mr-2 float-right\"\n                                        type=\"submit\"\n                                        onClick={() => this.saveReconciliation()}\n                                    >\n                                        {this.state.isLoading ? (\n                                            <span\n                                                className=\"spinner-border spinner-border-sm mr-2\"\n                                                role=\"status\"\n                                                aria-hidden=\"true\"\n                                            ></span>\n                                        ) : null}\n                                       Pay\n                                    </button>\n                                    <button\n                                        className=\"btn btn-secondary mr-2 float-right\"\n                                        type=\"submit\"\n                                        onClick={this.props.back}\n                                    >\n                                        {Trans(\"_previous\")}\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-4\">\n                        <div className=\"border\">\n                            <div className=\"bg-light border-bottom pt-2 pb-2 pl-2 pr-2\">\n                                <b>{this.props.paymentType === \"full\" ? \"Invoices\" : \"Booking Reference Numbers\"}</b>\n                            </div>\n\n                            {this.props.paymentType === \"full\" &&\n                                <React.Fragment>\n                                    <div className=\"row small\">\n                                        <div className=\"col-lg-12\">\n                                            <div className=\"bg-light border-bottom pt-2 pb-2 pl-2 pr-2\">\n                                                <div className=\"row\">\n                                                    <div className=\"col-lg-8\"><b>Invoices Number</b></div>\n                                                    {/* <div className=\"col-lg-4\"><b>Invoices Date</b></div> */}\n                                                    <div className=\"col-lg-4\"><b>Due Amount</b></div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    {this.props.SelectedRecords.map((item, key) => {\n                                        return (\n                                            <div\n                                                key={key}\n                                                className=\"border-bottom pl-2 pr-2 pt-2 pb-1 position-relative\"\n                                            >\n                                                <div className=\"row small\">\n                                                    <div className=\"col-lg-8\">{item.invoiceNumber}</div>\n                                                    {/* <div className=\"col-lg-4\"><Datecomp date={item.invoiceDate} /></div> */}\n                                                    <div className=\"col-lg-4\">{currency + \" \" + item.dueAmount}</div>\n                                                </div>\n                                            </div>\n                                        );\n                                    })}\n                                </React.Fragment>\n                            }\n                            {this.props.paymentType === \"brnPayment\" &&\n                                <React.Fragment>\n                                    <div className=\"row\">\n                                        <div className=\"col-lg-12\">\n                                            <div className=\"bg-light border-bottom pt-2 pb-2 pl-2 pr-2\">\n                                                <div className=\"row small\">\n                                                    {/* <div className=\"col-lg-3\"><b>Invoices Number</b></div>\n                                                    <div className=\"col-lg-3\"><b>Invoices Date</b></div> */}\n                                                    <div className=\"col-lg-8\"><b>Booking Reference Number</b></div>\n                                                    <div className=\"col-lg-4\"><b>Received Amount</b></div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    {this.props.SelectedRecords.map((item, key) => {\n                                        return (\n                                            <div\n                                                key={key}\n                                                className=\"border-bottom pl-2 pr-2 pt-2 pb-1 position-relative\"\n                                            >\n                                                <div className=\"row small\">\n                                                    {/* <div className=\"col-lg-3\">{item.invoiceNumber}</div>\n                                                    <div className=\"col-lg-3\"><Datecomp date={item.invoiceDate} /></div> */}\n                                                    <div className=\"col-lg-8\">{item.bookingRef}</div>\n                                                    <div className=\"col-lg-4\">{currency + \" \" + item.ReconciliationAmount}</div>\n                                                </div>\n                                            </div>\n                                        );\n                                    })}\n                                </React.Fragment>\n                            }\n\n                            <div className=\"border-bottom pl-2 pr-2 pt-2 pb-1 position-relative\">\n                                <div className=\"row small\">\n                                    <div className=\"col-lg-8\"><b>Total Amount</b></div>\n                                    <div className=\"col-lg-4\"><b>{currency + \" \" + this.props.Amount}</b></div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CustomerPaymentInfoForm;\n","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\brn-selection.jsx",["2036","2037"],"import React, { Component } from \"react\";\nimport TableLoading from \"../loading/table-loading\";\nimport { Trans } from \"./../../helpers/translate\";\nimport Datecomp from \"./../../helpers/date\";\nimport Pagination from \"./../../components/booking-management/booking-pagination\";\nimport ReconciliationDetailFilters from \"./reconciliationdetail-filters\";\nclass BRNSelection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedRecordIds: this.props.selectedRecordIds,\n            selectedRecords: this.props.selectedRecords,\n            isError: false\n        }\n    }\n    selectRecord = (e, record) => {\n        let selectedRecordIds = this.state.selectedRecordIds;\n        let selectedRecords = this.state.selectedRecords;\n        if (e.target.checked) {\n            selectedRecordIds.push(record.itineraryDetailID)\n            selectedRecords.push(record);\n        } else {\n            let recordIndex = selectedRecordIds.indexOf(record.itineraryDetailID);\n            selectedRecordIds.splice(recordIndex, 1);\n            selectedRecords.splice(recordIndex, 1);\n        }\n        this.setState({ selectedRecordIds, selectedRecords, isError: false });\n    }\n    checkAll = (e) => {\n        let selectedRecordIds = this.state.selectedRecordIds;\n        let selectedRecords = this.state.selectedRecords;\n        if (e.target.checked) {\n            let newSelectedRecordIds = this.props.result.filter((item) => { return selectedRecordIds.indexOf(item.itineraryDetailID) === -1 }).map((item) => { return item.itineraryDetailID });\n            newSelectedRecordIds.map((recordId) => {\n                selectedRecordIds.push(recordId);\n                let record = this.props.result.filter((item) => { return item.itineraryDetailID === recordId })[0];\n                selectedRecords.push(Object.assign(record, { ReconciliationAmount: 0 }));\n            });\n        } else {\n            let recordIds = this.props.result.filter((item) => { return selectedRecordIds.indexOf(item.itineraryDetailID) > -1 }).map((item) => { return item.itineraryDetailID });\n            recordIds.map((recordId) => {\n                let recordIndex = selectedRecordIds.indexOf(recordId);\n                selectedRecordIds.splice(recordIndex, 1);\n                selectedRecords.splice(recordIndex, 1);\n\n            });\n        }\n        this.setState({ selectedRecordIds, selectedRecords, isError: false });\n    }\n    selectedRecordIdsAmount = () => {\n        return this.state.selectedRecords.reduce((sum, item) => { return sum + (isNaN(parseFloat(item.ReconciliationAmount)) ? 0 : parseFloat(item.ReconciliationAmount)) }, 0);\n    }\n    getBRNReconcileAmount = (itineraryDetailID) => {\n        let itenary = this.state.selectedRecords.filter((item) => { return item.itineraryDetailID === itineraryDetailID });\n        if (itenary.length > 0)\n            return itenary[0].ReconciliationAmount;\n        else return null;\n    }\n    ReconciliationAmountChange = (e, recordId) => {\n        let Records = [...this.state.selectedRecords]\n        let selectedRecord = Records.filter((item) => { return item.itineraryDetailID === recordId })[0];\n        selectedRecord.ReconciliationAmount = e.target.value;\n        this.setState({ selectedRecords: Records });\n    }\n    showSaveForm = () => {\n        if (this.state.selectedRecords.length === 0) {\n            this.setState({ isError: true, errorMessage: \"Select atleast one invoice for receive payment.\" });\n            return;\n        }\n        if (this.state.selectedRecords.filter((item) => { return !item.ReconciliationAmount || item.ReconciliationAmount <= 0 || isNaN(parseFloat(item.ReconciliationAmount)) }).length > 0) {\n            let refNo = this.state.selectedRecords.filter((item) => { return !item.ReconciliationAmount || item.ReconciliationAmount <= 0 || isNaN(parseFloat(item.ReconciliationAmount)) })[0].bookingRef;\n            this.setState({ isError: true, errorMessage: \"Recieved Amount can not be less or equal to 0 or blank or text for BRN \" + refNo });\n            return;\n        }\n        if (this.state.selectedRecords.filter((item) => { return parseFloat(item.ReconciliationAmount) > item.dueAmount }).length > 0) {\n            let refNo = this.state.selectedRecords.filter((item) => { return parseFloat(item.ReconciliationAmount) > item.dueAmount })[0].bookingRef;\n            this.setState({ isError: true, errorMessage: \"Recieved Amount can not be greater than due amount for BRN \" + refNo });\n            return;\n        }\n        let Amount = this.state.selectedRecords.reduce((sum, item) => { return sum + parseFloat(item.ReconciliationAmount) }, 0);\n        this.props.showSaveForm(Amount, this.state.selectedRecords, \"brnPayment\", this.state.selectedRecordIds);\n    }\n    isCheckAll = () => {\n        const RecordIds = this.props.result.map((item) => { return item.itineraryDetailID });\n        const selectedRecordIds = this.state.selectedRecordIds;\n        return RecordIds.every(v => selectedRecordIds.includes(v));\n    }\n    handleFilters = (filters) => {\n        this.props.handleFilters(filters);\n        this.setState({\n            selectedRecordIds: [],\n            selectedRecords: []\n        });\n    }\n    render() {\n        let pageInfoIndex = [{ item: this.props.pageInfo }];\n        const { selectedRecordIds } = this.state;\n        const isAllChecked = this.isCheckAll();\n        return (\n            <React.Fragment>\n                {\n                    this.props.isFilters && (\n                        <ReconciliationDetailFilters\n                            filters={this.props.filters}\n                            handleFilters={this.handleFilters}\n                            showHideFilters={this.props.showHideFilters}\n                            type={\"BRN\"}\n                        />\n                    )\n                }\n                <div className=\"row\">\n                    <div className=\"col-lg-8 mt-1\">\n                        {this.state.isError &&\n                            <div className=\"text-danger\">{this.state.errorMessage}</div>\n                        }\n                    </div>\n                    <div className=\"col-lg-4 mt-1\">\n                        <button\n                            className={`btn mr-2 float-right ${selectedRecordIds.length > 0 ? 'btn-primary' : 'btn-secondary'}`}\n                            type=\"submit\"\n                            onClick={this.showSaveForm}\n                            disabled={selectedRecordIds.length === 0}\n                        >\n                            {Trans(\"_next\")}\n                        </button>\n                        <button\n                            className=\"btn btn-secondary mr-2 float-right\"\n                            type=\"submit\"\n                            onClick={this.props.back}\n                        >\n                            {Trans(\"_previous\")}\n                        </button>\n                    </div>\n                </div>\n                <div className=\"row mt-2\">\n                    <div className=\"col-lg-6\">\n                        <b>{selectedRecordIds.length === 0 ? \"Select at least one record for pay.\" : `Total ${selectedRecordIds.length} record(s) selected.`}</b>\n                    </div>\n                    <div className=\"col-lg-6\">\n                        <div className=\"float-right mr-2\">\n                            <b>Total Amount : {this.selectedRecordIdsAmount()}</b>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row mt-1\">\n                    <div className=\"col-lg-12\">\n                        <div className=\"table-responsive-lg\">\n                            <table className=\"table border\">\n                                <thead className=\"thead-light\">\n                                    <tr>\n                                        <th><input type=\"checkbox\" checked={isAllChecked} onChange={(e) => { this.checkAll(e) }} /></th>\n                                        <th >Invoice Number</th>\n                                        <th >Invoice Date</th>\n                                        <th >Invoice Amount</th>\n                                        <th >Business</th>\n                                        <th >Booking Reference Number</th>\n                                        <th >Due Amount</th>\n                                        <th >Reconciliation Amount</th>\n                                    </tr>\n                                </thead>\n                                {!this.props.isLoading && this.props.result.length === 0 &&\n                                    <tr>\n                                        <td className=\"text-center\" colSpan={8}>\n                                            No records found.\n                                                </td>\n                                    </tr>\n                                }\n                                {!this.props.isLoading && this.props.result.map((item) => {\n                                    return (\n\n                                        <tr>\n                                            <td>\n                                                <input type=\"checkbox\" checked={this.state.selectedRecordIds.indexOf(item.itineraryDetailID) > -1} onClick={(e) => { this.selectRecord(e, item) }} />\n                                            </td>\n                                            <td>{item.invoiceNumber}</td>\n                                            <td><Datecomp date={item.invoiceDate} /></td>\n                                            <td>{item.bookingCurrency + \" \" + item.invoiceNetAmount}</td>\n                                            <td>{item.business}</td>\n                                            <td>{item.bookingRef}</td>\n                                            <td>{item.bookingCurrency + \" \" + item.dueAmount}</td>\n                                            <td>\n                                                <div className=\"input-group\">\n                                                    <div className=\"input-group-prepend\">\n                                                        <div className=\"input-group-text\">{item.bookingCurrency}</div>\n                                                    </div>\n                                                    <input type=\"number\" style={{ minWidth: \"75px\" }} disabled={this.state.selectedRecordIds.indexOf(item.itineraryDetailID) === -1} className=\"form-control\" value={this.getBRNReconcileAmount(item.itineraryDetailID)} onChange={(e) => { this.ReconciliationAmountChange(e, item.itineraryDetailID) }}></input>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    );\n                                })}\n                                {this.props.isLoading &&\n                                    <TableLoading columns={8} />\n                                }\n                            </table>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-12 report-pagination\">\n                        {!this.props.isLoading && this.props.result.length > 0 &&\n                            <Pagination\n                                pageInfoIndex={pageInfoIndex}\n                                handlePaginationResults={this.props.handlePaginationResults}\n                            />\n                        }\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\nexport default BRNSelection;","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\invoice-list-pdf.jsx",["2038","2039","2040"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\invoice-list-excel.jsx",["2041"],"import React from \"react\";\nimport ReactExport from \"react-export-excel\";\nimport Datecomp from \"../../helpers/date\";\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\nclass InvoiceListExcel extends React.Component {\n    componentDidMount() {\n        document.getElementById(\"excel\").click();\n        this.props.onExportComplete();\n    }\n    render() {\n        let { InvoiceList } = this.props;\n        InvoiceList.map((item) => {\n            item.invoiceDate = Datecomp({ date: item.invoiceDate })\n            item.lastPaymentDate = Datecomp({ date: item.lastPaymentDate })\n        })\n        return (\n            <ExcelFile filename={this.props.filename} element={<button id=\"excel\">Download</button>}>\n                <ExcelSheet data={InvoiceList} name=\"Invoices\">\n                    <ExcelColumn label=\"Invoice Date\" value=\"invoiceDate\" />\n                    <ExcelColumn label=\"Invoice Number\" value=\"invoiceNumber\" />\n                    <ExcelColumn label=\"Invoice Currency\" value=\"bookingCurrency\" />\n                    <ExcelColumn label=\"Total Amount\" value=\"invoiceTotalAmount\" />\n                    <ExcelColumn label=\"Tax Amount\" value=\"invoiceTaxAmount\" />\n                    <ExcelColumn label=\"Net Amount\" value=\"invoiceNetAmount\" />\n                    <ExcelColumn label=\"Paid Amount\" value=\"paidAmount\" />\n                    <ExcelColumn label=\"Due Amount\" value=\"dueAmount\" />\n                    <ExcelColumn label=\"Last Payment Date\" value=\"lastPaymentDate\" />\n                    <ExcelColumn label=\"Status\" value=\"invoiceReconciliationStatus\" />\n                    <ExcelColumn label=\"Comments\" value=\"comments\" />\n                </ExcelSheet>\n            </ExcelFile>\n        );\n    }\n}\nexport default InvoiceListExcel;","E:\\Amit\\Projects\\booking-engine\\src\\base\\customer-reconciliation-base.jsx",["2042","2043"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\quotation\\inquiry-form.jsx",["2044","2045","2046","2047","2048"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\customerInvoice-filter.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\cart\\travellers-manualbooking.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-details-table-row.jsx",["2049","2050"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\supplier-invoice-payment-filter.jsx",["2051"],"import React from \"react\";\nimport Form from \"../common/form\";\nimport { apiRequester } from \"../../services/requester-report\";\nimport SVGIcon from \"../../helpers/svg-icon\";\nimport moment from \"moment\"\nclass Filters extends Form {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {\n                fromdate: this.props.filters.fromdate ? this.props.filters.fromdate : moment(new Date()).format(\"YYYY-MM-DD\"),\n                invoicenumber: this.props.filters.invoicenumber,\n                reconcillationstatus: this.props.filters.reconcillationstatus\n            },\n            errors: {},\n            isFilters: this.props.isFilters\n        };\n    }\n    handleFilters = () => {\n        let { data } = this.state;\n        data[\"todate\"] = data[\"fromdate\"];\n        this.props.handleFilters(data);\n    };\n\n    handleResetFilters = () => {\n        this.setState({\n            data: {\n                fromdate: \"\",\n                todate: \"\",\n                reconcillationstatus: null\n            }\n        });\n        this.props.handleFilters({});\n\n    };\n    showHideFilters = () => {\n        let { isFilters } = this.state;\n        isFilters = !isFilters;\n        this.setState({ isFilters });\n        this.props.showHideFilters(isFilters);\n    }\n    render() {\n        const { isFilters } = this.state;\n        const { status } = this.props;\n        return (\n            <div className=\"mb-3 mt-3\">\n                <div className=\"border pt-2 pb-2 pl-3 pr-3 shadow-sm\">\n                    <h5 className=\"text-primary border-bottom pb-2 mb-2\">\n                        <SVGIcon\n                            name=\"filter\"\n                            width=\"16\"\n                            height=\"16\"\n                            type=\"fill\"\n                            className=\"mr-2\"\n                        ></SVGIcon><span>Filters</span>\n                        <button\n                            className=\"btn btn-link p-0 m-0 text-primary pull-right\"\n                            onClick={() => this.showHideFilters()}\n                        >\n                            {isFilters ? \"Hide Filter\" : \"Show Filter\"}\n                        </button>\n                    </h5>\n                    {isFilters &&\n                        <div className=\"row\">\n                            <div className=\"col-lg-4\">\n                                {this.renderInput(\"invoicenumber\", \"Invoice Number\")}\n                            </div>\n                            <div className=\"col-lg-4\">\n                                {this.renderBirthDate(\"fromdate\", \"Invoice Date\")}\n                            </div>\n                            <div className=\"col-lg-4\">\n                                {this.renderSelect(\"reconcillationstatus\", \"Reconcilition Status\", status)}\n                            </div>\n                            <div className=\"col-lg-4\">\n                                <button\n                                    name=\"Apply\"\n                                    onClick={this.handleFilters}\n                                    className=\"btn btn-primary\"\n                                >\n                                    Apply\n                            </button>\n                                <button\n                                    name=\"reset\"\n                                    onClick={this.handleResetFilters}\n                                    className=\"btn btn-primary ml-2\"\n                                >\n                                    Reset\n                            </button>\n                            </div>\n                        </div>\n                    }\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Filters\n","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\customer-selection-popup.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\reconciliationdetail-filters.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\customerSelection-header.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\admin\\category-management.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\import-inquiries.jsx",["2052","2053","2054"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\content-library.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\inquiry-report.jsx",["2055","2056"],"import React, { Component } from 'react'\nimport SVGIcon from \"../../helpers/svg-icon\";\nimport QuotationMenu from \"../../components/quotation/quotation-menu\";\nimport { apiRequester } from \"../../services/requester\";\nimport { apiRequesterV2 } from \"../../services/requester-quotation\";\nimport QuotationListFilters from \"../../components/quotation/quotation-list-filters\";\nimport TableLoading from \"../../components/loading/table-loading\"\nimport Pagination from \"../../components/booking-management/booking-pagination\"\nimport ExcelExport from \"../../components/reports/inquiry-excel\"\n\nclass InquiryReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            results: \"\",\n            isDeleteConfirmPopup: false,\n            deleteItem: \"\",\n            type: \"Itinerary\",\n            importItineraries: \"\",\n            exportData: null,\n            isImport: false,\n            isFilters: false,\n            currentPage: 0,\n            pageSize: 10,\n            hasNextPage: false,\n            isBtnLoading: false,\n            pageInfo: {\n                currentPage: 0,\n                pageLength: 10,\n                hasNextPage: false,\n                hasPreviousPage: false,\n                totalResults: 0\n            },\n        };\n    }\n\n    getInquiries = (isExport) => {\n        if (!isExport) { this.setState({ isBtnLoading: true }) }\n        var reqURL = \"inquiries\";\n        let cPage = !isExport ? this.state.currentPage : 0\n        let pSize = !isExport ? this.state.pageSize : 1000\n        var reqURL =\n            \"inquiries?page=\" +\n            +cPage +\n            \"&records=\" +\n            pSize;\n\n        var reqOBJ = {};\n\n        apiRequesterV2(\n            reqURL,\n            reqOBJ,\n            (data) => {\n                if (!isExport) {\n                    let results = this.state.results || [];\n                    results = data.result;\n\n                    let resultsDeleted = results.filter((x) => x.status === \"deleted\");\n                    results = results.filter((x) => x.status === \"active\");\n                    let pageInfo = this.state.pageInfo;\n\n                    if (results.length > 0) {\n                        pageInfo[\"currentPage\"] = data?.paging?.page\n                        pageInfo[\"pageLength\"] = data?.paging?.records\n                        pageInfo[\"hasNextPage\"] = data?.paging?.totalRecords > data?.paging?.page * data?.paging?.records\n                        pageInfo[\"hasPreviousPage\"] = data?.paging?.page > 1\n                        pageInfo[\"totalResults\"] = data?.paging?.totalRecords\n                    }\n\n                    this.setState({\n                        results,\n                        defaultResults: results,\n                        isBtnLoading: false,\n                        pageInfo\n                    });\n                }\n                else {\n                    let arr = [];\n                    for (let value of data.result) {\n                        arr.push(value.data)\n                    }\n                    this.setState({ exportData: arr })\n                }\n            },\n            \"GET\"\n        );\n    };\n\n    getAuthToken = () => {\n        var reqURL = \"api/v1/user/token\";\n        var reqOBJ = {};\n        apiRequester(reqURL, reqOBJ, (data) => {\n            localStorage.setItem(\"userToken\", data.response);\n            this.getInquiries();\n        });\n    };\n\n    InquiryDetails = (item, type) => {\n        const quotationInfo = item.data;\n\n        let reqURL = \"quotation\";\n        let reqOBJ = {\n            name: item.title,\n            owner: quotationInfo.customerName,\n            isPublic: true,\n            type: type,\n            data: {\n                name: quotationInfo.title,\n                customerName: quotationInfo.customerName,\n                email: quotationInfo.email,\n                phone: quotationInfo.phone,\n                duration: quotationInfo.duration.slice()[0],\n                startDate: \"03/15/2021\",\n                endDate: \"03/20/2021\",\n                type: type,\n                status: \"saved\",\n                from: \"Inquiry-\" + type,\n                title: item.title,\n                destination: quotationInfo.destination,\n                month: quotationInfo.month,\n                typetheme: quotationInfo.typetheme,\n                budget: quotationInfo.budget,\n                inclusions: quotationInfo.inclusions,\n                adults: quotationInfo.adults,\n                children: quotationInfo.children,\n                infant: quotationInfo.infant,\n                requirements: quotationInfo.requirements,\n            },\n        };\n\n        apiRequesterV2(reqURL, reqOBJ, (data) => {\n            localStorage.setItem(\"inquiryId\", item.id);\n            localStorage.setItem(\"cartLocalId\", data.id);\n            localStorage.setItem(\"quotationDetails\", JSON.stringify(reqOBJ.data));\n            localStorage.setItem(\"quotationItems\", JSON.stringify([]));\n            this.props.history.push(`/${type}/DetailsInquiry`);\n        });\n    };\n\n    showHideFilters = () => {\n        this.setState({ isFilters: !this.state.isFilters });\n    };\n\n    handleFilters = (value) => {\n        let defaultResults = [...this.state.defaultResults];\n        let results = [...this.state.results];\n\n        results = defaultResults.filter(\n            (x) =>\n                x.from\n                    ?.toLowerCase()\n                    .includes(\n                        value.find((y) => y.name?.toLowerCase())\n                            ? value.find((y) => y.name?.toLowerCase()).name?.toLowerCase()\n                            : \"\"\n                    ) &&\n                x.title\n                    ?.toLowerCase()\n                    .includes(\n                        value.find((y) => y.title?.toLowerCase())\n                            ? value.find((y) => y.title?.toLowerCase()).title?.toLowerCase()\n                            : \"\"\n                    ) &&\n                x.fromEmail\n                    ?.toLowerCase()\n                    .includes(\n                        value.find((y) => y.email?.toLowerCase())\n                            ? value.find((y) => y.email?.toLowerCase()).email?.toLowerCase()\n                            : \"\"\n                    ) &&\n                x.data.phone\n                    ?.toLowerCase()\n                    .includes(\n                        value.find((y) => y.phone?.toLowerCase())\n                            ? value.find((y) => y.phone?.toLowerCase()).phone?.toLowerCase()\n                            : \"\"\n                    )\n        );\n\n        this.setState({ results });\n    };\n\n    handlePaginationResults(pageNumber, pageLength) {\n\n        this.setState({\n            currentPage: parseInt(pageNumber) + 1,\n            pageSize: pageLength,\n        }, () => { this.getInquiries() })\n\n    }\n\n    componentDidMount() {\n        this.getAuthToken();\n    }\n\n\n    handleMenuClick = (req, redirect) => {\n        if (redirect) {\n            if (redirect === \"back-office\")\n                this.props.history.push(`/Backoffice/${req}`);\n            else {\n                this.props.history.push(`/Reports`);\n            }\n            window.location.reload();\n        } else {\n            this.props.history.push(`${req}`);\n        }\n    };\n    render() {\n        const {\n            results,\n            isFilters,\n            isBtnLoading,\n            pageInfo\n        } = this.state;\n        let pageInfoIndex = [{ item: pageInfo }];\n        return (\n            <div className=\"quotation quotation-list\">\n                <div className=\"title-bg pt-3 pb-3 mb-3\">\n                    <div className=\"container\">\n                        <h1 className=\"text-white m-0 p-0 f30\">\n                            <SVGIcon\n                                name=\"file-text\"\n                                width=\"24\"\n                                height=\"24\"\n                                className=\"mr-3\"\n                            ></SVGIcon>\n              Inquiries Report\n              <button\n                                className=\"btn btn-sm btn-primary pull-right\"\n                                onClick={() => { this.getInquiries(true) }}\n                            >\n                                Export\n              </button>\n                            <button\n                                className=\"btn btn-sm btn-light pull-right mr-2\"\n                                onClick={this.showHideFilters}\n                            >\n                                Filters\n              </button>\n                        </h1>\n                    </div>\n                </div>\n\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-3 hideMenu\">\n                            <QuotationMenu handleMenuClick={this.handleMenuClick} />\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <div >\n                                {results && isFilters && (\n                                    <QuotationListFilters\n                                        handleFilters={this.handleFilters}\n                                        showHideFilters={this.showHideFilters}\n                                    />\n                                )}\n                                <div className=\"table-responsive-lg\">\n                                    <table className=\"table border\">\n                                        <thead className=\"thead-light\">\n                                            <tr>\n                                                {[\"Customer Name\", \"Email Address\",\n                                                    \"Phone Number\",\n                                                    \"Title\", \"Month\", \"Duration\", \"Type Theme\", \"Budget\",\n                                                    \"Followup Date\"\n                                                ].map((data, key) => {\n                                                    return (\n                                                        <th key={key} scope=\"col\">{data}</th>\n                                                    )\n                                                })}\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {isBtnLoading && (<TableLoading columns={9} />)}\n                                            {\n                                                !isBtnLoading && results &&\n                                                results.length > 0 &&\n                                                results.map((item, index) => {\n                                                    return (\n                                                        <tr key={index}>\n                                                            <td>{item.from}</td>\n                                                            <td>{item.fromEmail}</td>\n                                                            <td>{item.data.phone}</td>\n                                                            <td>{item.title}</td>\n                                                            <td>{item.data.month}</td>\n                                                            <td>{item.data.duration}</td>\n                                                            <td>{item.data.typetheme}</td>\n                                                            <td>{item.data.budget}</td>\n                                                            <td></td>\n                                                        </tr>)\n                                                })}\n                                            {\n                                                !isBtnLoading && results &&\n                                                results.length === 0 &&\n                                                <tr>\n                                                    <td className=\"text-center\" colSpan={9}>No records found.</td>\n                                                </tr>\n                                            }\n                                        </tbody>\n                                    </table>\n\n                                    {this.state.exportData && (<ExcelExport onExportComplete={() => {\n                                        this.setState({ exportData: [] })\n                                    }} data={this.state.exportData} />)}\n                                </div>\n                            </div>\n                            <div className=\"col-lg-12 report-pagination\">\n                                {!isBtnLoading && (results &&\n                                    results.length > 0) && (\n                                        <Pagination\n                                            pageInfoIndex={pageInfoIndex}\n                                            handlePaginationResults={this.handlePaginationResults.bind(this)}\n                                        />\n                                    )}\n                            </div>\n\n\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        );\n\n    }\n}\n\nexport default InquiryReport;\n","E:\\Amit\\Projects\\booking-engine\\src\\screens\\admin\\branch-management.jsx",["2057"],"import React, { Component } from 'react'\nimport SVGIcon from \"../../helpers/svg-icon\";\nimport QuotationMenu from \"../../components/quotation/quotation-menu\";\nimport TableLoading from \"../../components/loading/table-loading\"\nimport Pagination from \"../../components/booking-management/booking-pagination\"\nimport { apiRequester } from \"../../services/requester-report\";\nimport Modal from \"../../components/admin/branch-add-update-modal\"\nimport DeleteConfirmation from \"../../components/admin/delete-confirmation-dialog\"\nimport Filters from \"../../components/admin/branch-filters\"\nimport MessageBar from \"../../components/admin/message-bar\"\n\nclass BranchManagement extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: false,\n            filter: {\n                providerBranchID: null,\n                CityId: 0,\n                CountryId: 0,\n                BranchName: \"\",\n                ContactPerson: \"\",\n                PageNumber: 1,\n                PageSize: 10\n            },\n            gridData: [],\n            errors: {},\n            pageInfo: {\n                currentPage: 0,\n                pageLength: 10,\n                hasNextPage: false,\n                hasPreviousPage: false,\n                totalResults: 0\n            },\n            popup: null,\n            deleteData: null,\n            showMessage: false\n        };\n    }\n\n\n    handlePaginationResults(pageNumber, pageLength) {\n\n        let filter = this.state.filter;\n        filter[\"PageNumber\"] = parseInt(pageNumber) + 1\n        filter[\"PageSize\"] = pageLength\n\n        this.setState({ filter })\n        this.getBranch()\n    }\n\n    handleMenuClick = (req, redirect) => {\n        if (redirect) {\n            if (redirect === \"back-office\")\n                this.props.history.push(`/Backoffice/${req}`);\n            else {\n                this.props.history.push(`/Reports`);\n            }\n            window.location.reload();\n        } else {\n            this.props.history.push(`${req}`);\n        }\n    };\n\n    componentDidMount() {\n        this.getBranch()\n    }\n\n    getBranch = () => {\n        this.setState({ isLoading: true })\n        const { userInfo: { agentID, defaultBranchID } } = this.props;\n        let filter = this.state.filter\n        let reqOBJ = {\n            Request: {\n                ProviderID: agentID,\n                // 2892,\n                providerBranchID: defaultBranchID ? defaultBranchID : 0,\n                // 2942,\n                ...filter\n            }\n        }\n\n        let reqURL = \"admin/branch/list\"\n\n        apiRequester(\n            reqURL,\n            reqOBJ,\n            function (data) {\n                if (data.response && data.response.length > 0) {\n                    let pageInfo = this.state.pageInfo;\n                    pageInfo[\"currentPage\"] = data?.pageInfo?.pageNumber - 1\n                    pageInfo[\"pageLength\"] = data?.pageInfo?.pageSize\n                    pageInfo[\"hasNextPage\"] = data?.pageInfo?.totalRecords > data?.pageInfo?.pageNumber * data?.pageInfo?.pageSize\n                    pageInfo[\"hasPreviousPage\"] = data?.pageInfo?.pageNumber > 1\n                    pageInfo[\"totalResults\"] = data?.pageInfo?.totalRecords\n\n                    this.setState({ gridData: data.response, pageInfo, isLoading: false })\n                }\n                else {\n                    this.setState({ gridData: [], isLoading: false })\n                }\n            }.bind(this),\n            \"POST\"\n        );\n    }\n\n    handleDelete = (value) => {\n        let reqOBJ = {\n            request: {\n                ProviderBranchID: value\n            }\n        }\n        let reqURL = \"admin/branch/delete\"\n\n        apiRequester(\n            reqURL,\n            reqOBJ,\n            function (data) {\n                this.setState({ showMessage: \"Deleted\" })\n                this.getBranch();\n            }.bind(this),\n            \"POST\"\n        );\n    }\n\n    handleFilters = (data) => {\n        let filter = this.state.filter\n\n        for (let key of Object.keys(data)) {\n            filter[key] = data[key]\n        }\n\n        this.setState({ filter }, () => {\n            this.getBranch()\n        })\n    }\n\n    render() {\n\n        const { userInfo: { agentID } } = this.props;\n        const {\n            pageInfo, isLoading, gridData,\n            popup, showMessage\n        } = this.state\n        let pageInfoIndex = [{ item: pageInfo }];\n        return (\n            <div>\n                <div className=\"title-bg pt-3 pb-3 mb-3\">\n                    <div className=\"container\">\n                        <h1 className=\"text-white m-0 p-0 f30\">\n                            <SVGIcon\n                                name=\"file-text\"\n                                width=\"24\"\n                                height=\"24\"\n                                className=\"mr-3\"\n                            ></SVGIcon>\n                            Branch Management\n                        </h1>\n                    </div>\n                </div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-3 hideMenu\">\n                            <QuotationMenu handleMenuClick={this.handleMenuClick} />\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <div className=\"row\">\n                                <div className=\"col-sm-12 col-md-12 col-lg-12 mb-2 mt-2\">\n                                    <Filters\n                                        agentID={agentID}\n                                        handleFilters={(data) => { this.handleFilters(data) }}\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"col-lg-12\">\n                                    <button onClick={() => {\n                                        this.setState({ popup: { type: \"Add\", agentID } })\n                                    }} className=\"btn btn-primary  mb-2\">Add Branch</button>\n                                </div>\n                                <div className=\"container col-lg-12\">\n                                    <div className=\"table-responsive-lg\">\n                                        <table className=\"table border\">\n                                            <thead className=\"thead-light\">\n                                                <tr>\n                                                    {[\"Name\", \"Address\",\n                                                        \"City\",\n                                                        \"Phone Number\", \"Contact Person\",\n                                                        \"Actions\"\n                                                    ].map((data, key) => {\n                                                        return (\n                                                            <th key={key} scope=\"col\">{data}</th>\n                                                        )\n                                                    })}\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {this.state.isLoading && (<TableLoading columns={6} />)}\n                                                {\n                                                    !this.state.isLoading && this.state.gridData &&\n                                                    this.state.gridData.length > 0 && this.state.gridData.map((data, index) => {\n                                                        return (\n                                                            <tr key={index}>\n                                                                <td>{data.name}</td>\n                                                                <td>{data.address1 + \", \" + data.address2}</td>\n                                                                <td>{data.cityName}</td>\n                                                                <td>{data.phone1}</td>\n                                                                <td>{data.contactPerson}</td>\n                                                                <td>\n                                                                    <div className=\"custom-dropdown-btn position-relative\">\n                                                                        <button className=\"btn btn-sm bg-light border align-items-center d-flex justify-content-center\">\n                                                                            <div className=\"border-right pr-2\">Actions</div>\n                                                                            <i className=\"align-middle\">\n                                                                                <svg width=\"8\" height=\"8\" className=\"align-baseline ml-2\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 284.929 284.929\" xmlns=\"http://www.w3.org/1999/xlink\"><g><path d=\"M282.082,76.511l-14.274-14.273c-1.902-1.906-4.093-2.856-6.57-2.856c-2.471,0-4.661,0.95-6.563,2.856L142.466,174.441 L30.262,62.241c-1.903-1.906-4.093-2.856-6.567-2.856c-2.475,0-4.665,0.95-6.567,2.856L2.856,76.515C0.95,78.417,0,80.607,0,83.082 c0,2.473,0.953,4.663,2.856,6.565l133.043,133.046c1.902,1.903,4.093,2.854,6.567,2.854s4.661-0.951,6.562-2.854L282.082,89.647 c1.902-1.903,2.847-4.093,2.847-6.565C284.929,80.607,283.984,78.417,282.082,76.511z\"></path></g></svg>\n                                                                            </i>\n                                                                        </button>\n                                                                        <div className=\"custom-dropdown-btn-menu position-absolute\">\n                                                                            <ul className=\"list-unstyled border bg-white shadow-sm p-2 rounded\">\n\n                                                                                <li><button type=\"button\" className=\"btn btn-sm text-nowrap w-100 text-left\"\n                                                                                    onClick={() => { this.setState({ popup: { type: \"View\", agentID, data, disable: true } }) }} >View Branch</button></li>\n                                                                                <li><button type=\"button\" className=\"btn btn-sm text-nowrap w-100 text-left\"\n                                                                                    onClick={() => { this.setState({ popup: { type: \"Update\", agentID, data } }) }}>Edit Branch</button></li>\n                                                                                <li><button type=\"button\" className=\"btn btn-sm text-nowrap w-100 text-left\"\n                                                                                    onClick={() => { this.setState({ deleteData: data[\"providerBranchID\"] }) }}>Delete Branch</button></li>\n                                                                            </ul>\n                                                                        </div>\n                                                                    </div>\n\n                                                                </td>\n                                                            </tr>\n                                                        )\n                                                    })}\n                                                {\n                                                    !this.state.isLoading && this.state.gridData &&\n                                                    this.state.gridData.length === 0 &&\n                                                    <tr>\n                                                        <td className=\"text-center\" colSpan={7}>No records found.</td>\n                                                    </tr>\n                                                }\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                                {this.state.deleteData &&\n                                    <>\n                                        <DeleteConfirmation\n                                            handleDelete={() => { this.handleDelete(this.state.deleteData); this.setState({ deleteData: null }) }}\n                                            handleClose={() => { this.setState({ deleteData: null }) }}\n                                        />\n                                    </>}\n\n                                <div className=\"col-lg-12 report-pagination\">\n                                    {!isLoading && (gridData &&\n                                        gridData.length > 0) && (\n                                            <Pagination\n                                                pageInfoIndex={pageInfoIndex}\n                                                handlePaginationResults={this.handlePaginationResults.bind(this)}\n                                            />\n                                        )}\n                                </div>\n                                {showMessage && <MessageBar\n                                    Message={`Branch ${showMessage} successfully.`}\n                                    handleClose={() => { this.setState({ showMessage: false }) }}\n                                />}\n                            </div>\n                            {popup &&\n                                <Modal\n                                    getBranch={() => { this.getBranch() }}\n                                    popup={popup}\n                                    handleClose={(val) => {\n                                        let x = this.state.popup;\n                                        this.setState({ popup: null, showMessage: val ? x.type === \"Add\" ? \"Added\" : \"Updated\" : null })\n                                    }}\n                                />\n                            }\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default BranchManagement\n","E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\collection-report.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\admin\\update-profile.jsx",["2058","2059","2060","2061","2062"],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\outstanding-report.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\admin\\agent-wallet-management.jsx",["2063"],"import React, { Component } from 'react'\nimport \"bootstrap-daterangepicker/daterangepicker.css\";\nimport { apiRequester } from \"../../services/requester-report\";\nimport Pagination from \"../../components/booking-management/booking-pagination\"\nimport TableLoading from \"../../components/loading/table-loading\";\nimport Filters from \"../../components/admin/agent-wallet-management-filtes\";\nimport WalletTransaction from \"../../components/admin/agent-wallet-transaction\";\nimport WalletLogs from \"../../components/admin/agent-wallet-logs\";\nimport QuotationMenu from \"../../components/quotation/quotation-menu\";\nimport SVGIcon from \"../../helpers/svg-icon\";\nclass AgentWalletManagement extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: false,\n            filter: {\n                ProviderID: this.props.userInfo.portalAgentID,\n                PageNumber: 1,\n                PageSize: 10,\n                AgencyName: \"\",\n                EmailId: \"\",\n                PhoneNumber: \"\",\n                CategoryId: \"\"\n            },\n            result: [],\n            pageInfo: {\n                currentPage: 0,\n                pageLength: 10,\n                hasNextPage: false,\n                hasPreviousPage: false,\n                totalResults: 0\n            },\n            CategoryList: [{ value: \"\", name: \"Select\" }],\n            showTransaction: false,\n            showLogs: false,\n            AgentId: null\n        };\n    }\n\n    componentDidMount() {\n        this.getCategoryList()\n        this.getAgentList();\n    }\n    getCategoryList = () => {\n        const { userInfo: { agentID } } = this.props;\n        let reqURL = `admin/class/list?providerid=${agentID}&type=agent&pagenumber=0&pagesize=0`;\n        apiRequester(\n            reqURL,\n            {},\n            function (data) {\n                if (data.error) {\n                    data.response = [];\n                }\n                if (data.response.length > 0) {\n                    const CategoryList = [{ value: \"\", name: \"Select\" }].concat(data.response.map((item) => { return { value: item.classID, name: item.categoryName } }));\n                    this.setState({ CategoryList })\n                }\n                else {\n                    this.setState({ CategoryList: [{ value: \"\", name: \"Select\" }] })\n                }\n            }.bind(this),\n            \"GET\"\n        );\n    }\n    getAgentList() {\n        let reqOBJ = { request: { ...this.state.filter } };\n        let reqURL = \"admin/agent/transaction\";\n        this.setState({ isLoading: true })\n        apiRequester(\n            reqURL,\n            reqOBJ,\n            function (data) {\n                if (data.error) {\n                    data.response = [];\n                }\n                if (data.response.length > 0) {\n                    let pageInfo = this.state.pageInfo;\n                    pageInfo[\"currentPage\"] = data?.pageInfo?.pageNumber - 1\n                    pageInfo[\"pageLength\"] = data?.pageInfo?.pageSize\n                    pageInfo[\"hasNextPage\"] = data?.pageInfo?.totalRecords > data?.pageInfo?.pageNumber * data?.pageInfo?.pageSize\n                    pageInfo[\"hasPreviousPage\"] = data?.pageInfo?.pageNumber > 1\n                    pageInfo[\"totalResults\"] = data?.pageInfo?.totalRecords\n                    this.setState({ result: data.response, pageInfo, isLoading: false })\n                }\n                else {\n                    this.setState({ result: [], isLoading: false });\n                }\n            }.bind(this),\n            \"POST\"\n        );\n    }\n    handleFilters(data) {\n        let filter = { ...this.state.filter, ...data };\n        filter[\"PageNumber\"] = 1;\n        this.setState({ filter }, () => { this.getAgentList(); });\n\n    }\n    handlePaginationResults(pageNumber, pageLength) {\n        let filter = this.state.filter;\n        filter[\"PageNumber\"] = parseInt(pageNumber) + 1;\n        filter[\"PageSize\"] = pageLength;\n        this.setState({ filter }, () => { this.getAgentList(); });\n    }\n    handleMenuClick = (req, redirect) => {\n        if (redirect) {\n            if (redirect === \"back-office\")\n                this.props.history.push(`/Backoffice/${req}`);\n            else {\n                this.props.history.push(`/Reports`);\n            }\n            window.location.reload();\n        } else {\n            this.props.history.push(`${req}`);\n        }\n    };\n    closePopup = (updateResult) => {\n        this.setState({ AgentId: null, showLogs: false, showTransaction: false });\n        if (updateResult) {\n            this.getAgentList();\n        }\n    }\n    showAgentLogs = (agentID, agencyName) => {\n        this.setState({ AgentId: agentID, AgencyName: agencyName, showLogs: true });\n    }\n    showTransactionModal = (agentID) => {\n        this.setState({ AgentId: agentID, showTransaction: true });\n    }\n    render() {\n        const { userInfo: { portalAgentID, userID, providerCurrency: { factor } } } = this.props;\n        const { pageInfo, isLoading, result, CategoryList, showTransaction, showLogs, AgentId, AgencyName } = this.state;\n        let pageInfoIndex = [{ item: pageInfo }];\n        return (\n            <div>\n                <div className=\"title-bg pt-3 pb-3 mb-3\">\n                    <div className=\"container\">\n                        <h1 className=\"text-white m-0 p-0 f30\">\n                            <SVGIcon\n                                name=\"file-text\"\n                                width=\"24\"\n                                height=\"24\"\n                                className=\"mr-3\"\n                            ></SVGIcon>\n                            Agent Wallet Management\n                        </h1>\n                    </div>\n                </div>\n                <div className=\"container\">\n                    {showTransaction && (\n                        <WalletTransaction ProviderId={portalAgentID} UserId={userID} ConversionFactor={factor} AgentId={AgentId} closePopup={this.closePopup} />\n                    )}\n                    {showLogs && (\n                        <WalletLogs AgentId={AgentId} AgencyName={AgencyName} closePopup={() => { this.closePopup() }} />\n                    )}\n\n                    <div className=\"row\">\n                        <div className=\"col-lg-3 hideMenu\">\n                            <QuotationMenu handleMenuClick={this.handleMenuClick} />\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <div className=\"row\">\n                                <div className=\"col-sm-12 col-md-12 col-lg-12 mb-2 mt-2\">\n                                    <Filters\n                                        handleFilters={this.handleFilters.bind(this)}\n                                        data={this.state.filter}\n                                        CategoryList={CategoryList}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"container col-lg-12\">\n                                    <div className=\"table-responsive-lg\">\n                                        <table className=\"table border\">\n                                            <thead className=\"thead-light\">\n                                                <tr>\n                                                    {[\"Agency Name\", \"Phone Number\", \"Email Address\",\n                                                        \"Category\", \"Credit Amount\", \"Credit Balance\", \"Balance\", \"Actions\"\n                                                    ].map((data, key) => {\n                                                        return (<th key={key} scope=\"col\">{data}</th>)\n                                                    })}\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {isLoading && (<TableLoading columns={8} />)}\n                                                {\n                                                    !isLoading && result &&\n                                                    result.length > 0 && result.map((data, key) => {\n                                                        return (<tr key={key}>\n                                                            <td>{data.agencyName}</td>\n                                                            <td>{data.phone}</td>\n                                                            <td>{data.email}</td>\n                                                            <td>{data.agentClassName}</td>\n                                                            <td>{data.creditAmount}</td>\n                                                            <td>{data.creditBalance}</td>\n                                                            <td>{data.balance}</td>\n                                                            <td>\n                                                                <div className=\"custom-dropdown-btn position-relative\">\n                                                                    <button className=\"btn btn-sm bg-light border align-items-center d-flex justify-content-center\">\n                                                                        <div className=\"border-right pr-2\">Actions</div>\n                                                                        <i className=\"align-middle\">\n                                                                            <svg width=\"8\" height=\"8\" className=\"align-baseline ml-2\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 284.929 284.929\" xmlns=\"http://www.w3.org/1999/xlink\"><g><path d=\"M282.082,76.511l-14.274-14.273c-1.902-1.906-4.093-2.856-6.57-2.856c-2.471,0-4.661,0.95-6.563,2.856L142.466,174.441 L30.262,62.241c-1.903-1.906-4.093-2.856-6.567-2.856c-2.475,0-4.665,0.95-6.567,2.856L2.856,76.515C0.95,78.417,0,80.607,0,83.082 c0,2.473,0.953,4.663,2.856,6.565l133.043,133.046c1.902,1.903,4.093,2.854,6.567,2.854s4.661-0.951,6.562-2.854L282.082,89.647 c1.902-1.903,2.847-4.093,2.847-6.565C284.929,80.607,283.984,78.417,282.082,76.511z\"></path></g></svg>\n                                                                        </i>\n                                                                    </button>\n                                                                    <div className=\"custom-dropdown-btn-menu position-absolute\">\n                                                                        <ul className=\"list-unstyled border bg-white shadow-sm p-2 rounded\">\n                                                                            <li><button type=\"button\" className=\"btn btn-sm text-nowrap w-100 text-left\" onClick={() => { this.showAgentLogs(data.agentID, data.agencyName) }}>Logs</button></li>\n                                                                            <li><button type=\"button\" className=\"btn btn-sm text-nowrap w-100 text-left\" onClick={() => { this.showTransactionModal(data.agentID) }}>Transact</button></li>\n                                                                        </ul>\n                                                                    </div>\n                                                                </div>\n                                                            </td>\n                                                        </tr>)\n                                                    })}\n                                                {\n                                                    !isLoading && result &&\n                                                    result.length === 0 &&\n                                                    <tr>\n                                                        <td className=\"text-center\" colSpan={8}>No records found.</td>\n                                                    </tr>\n                                                }\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div className=\"col-lg-12 report-pagination\">\n                                    {!isLoading && (result &&\n                                        result.length > 0) && (\n                                            <Pagination\n                                                pageInfoIndex={pageInfoIndex}\n                                                handlePaginationResults={this.handlePaginationResults.bind(this)}\n                                            />\n                                        )}\n                                </div>\n                            </div>\n                        </div>\n                    </div >\n                </div>\n            </div >\n        )\n\n\n    }\n}\n\nexport default AgentWalletManagement;\n","E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\revenue-report.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\sales-report.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\import-customer.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\supplier-payment-report.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\screens\\reports\\booking-report.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\admin\\category-add-update-modal.jsx",["2064","2065"],"import React from 'react'\nimport Form from \"../../components/common/form\"\nimport { apiRequester } from \"../../services/requester-report\";\nimport Loader from \"../common/loader\"\n\nexport class Modal extends Form {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {\n                Type: \"agent\",\n                CategoryName: null,\n                CategoryDescription: null,\n                IsActive: true\n            },\n            errors: {},\n            isSubmitLoading: false,\n            isLoading: false\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.popup.type === \"Update\") {\n            this.fetchData()\n        }\n    }\n\n    onRadiochange = (value) => {\n        const { data } = this.state;\n        data.Type = value;\n        this.setState({ data });\n    }\n    IsActiveChange = (value) => {\n        const { data } = this.state;\n        data.IsActive = value;\n        this.setState({ data });\n    }\n    fetchData = () => {\n        this.setState({ isLoading: true })\n        // admin/class/details?providerid=\n        let reqOBJ = {}\n\n        let reqURL = \"admin/class/details?providerid=\" + this.props.agentId + \"&classid=\" + this.props.popup.classID + \"&type=\" + this.props.popup.categoryType\n        apiRequester(\n            reqURL,\n            reqOBJ,\n            function (res) {\n                const { categoryName, categoryDescription, isActive } = res.response[0]\n                let data = {\n                    Type: this.props.popup.categoryType,\n                    CategoryName: categoryName,\n                    CategoryDescription: categoryDescription,\n                    IsActive: isActive\n                }\n                this.setState({ data, isLoading: false })\n            }.bind(this),\n            \"GET\"\n        );\n    }\n\n    handleSubmit = () => {\n        const errors = this.handleValidations();\n\n        this.setState({ errors: errors || {} });\n        if (errors) return;\n\n        this.setState({ isSubmitLoading: true })\n        if (this.props.popup.type === \"Add\") {\n            let reqOBJ = {\n                request: {\n                    ...this.state.data,\n                    ProviderId: this.props.agentId\n                }\n            }\n\n            let reqURL = \"admin/class/add\"\n            apiRequester(\n                reqURL,\n                reqOBJ,\n                function (data) {\n                    if (data.error) {\n                        let errors = this.state.errors\n                        errors[\"submit\"] = data.error\n                        this.setState({ isSubmitLoading: false, errors })\n                    }\n                    else {\n                        let errors = this.state.errors\n                        errors[\"submit\"] = null\n                        this.setState({ isSubmitLoading: false, errors }, () => {\n                            this.props.getCategory()\n                            this.props.handleClose(true)\n                        })\n                    }\n\n                }.bind(this),\n                \"POST\"\n            );\n        }\n        else {\n            let reqOBJ = {\n                request: {\n                    ...this.state.data,\n                    ClassId: this.props.popup.classID\n                }\n            }\n\n            let reqURL = \"admin/class/update\"\n            apiRequester(\n                reqURL,\n                reqOBJ,\n                function (data) {\n                    this.setState({ isSubmitLoading: false }, () => {\n                        this.props.getCategory()\n                        this.props.handleClose(true)\n                    })\n                }.bind(this),\n                \"POST\"\n            );\n        }\n    }\n\n    handleValidations = () => {\n        const errors = {};\n        const { data } = this.state;\n\n        if (!data.CategoryName || !this.validateFormData(data.CategoryName, \"require\"))\n            errors.CategoryName = \"Category Name required\";\n\n        if (!data.CategoryDescription || !this.validateFormData(data.CategoryDescription, \"require\"))\n            errors.CategoryDescription = \"Category Description required\";\n\n        return Object.keys(errors).length === 0 ? null : errors;\n    }\n\n    render() {\n        let { data, isLoading } = this.state\n        return (\n            <div>\n                <div className=\"model-popup\">\n                    <div className=\"modal fade show d-block\">\n                        <div\n                            className={\n                                \"modal-dialog modal-dialog-centered modal-dialog-scrollable md\"\n                            }\n                        >\n                            <div className=\"modal-content\">\n\n                                <div className=\"modal-header\">\n                                    <h5 className=\"modal-title\">{this.props.popup.type + \" Category\"} </h5>\n                                    <button\n                                        type=\"button\"\n                                        className=\"close\"\n                                        onClick={() => { this.props.handleClose() }}\n                                    >\n                                        <span aria-hidden=\"true\">&times;</span>\n                                    </button>\n                                </div>\n                                {isLoading ? <Loader /> :\n                                    <div className=\"modal-body\">\n                                        <div className=\"row\">\n                                            <div className=\"col-md-6\">\n                                                <div className={\"form-group \" + \"Type\"}>\n                                                    <label htmlFor={\"type\"}>{\"Type\"}</label>\n                                                    <div className=\"input-group\">\n                                                        <div className=\"form-check form-check-inline\">\n                                                            <input className=\"form-check-input\" type=\"radio\" name=\"Type\" id=\"agent\"\n                                                                onChange={() => this.onRadiochange(\"agent\")} value={data.Type}\n                                                                checked={data.Type === \"agent\"} />\n                                                            <label className=\"form-check-label\" htmlFor=\"IsActiveYes\">Agent</label>\n                                                        </div>\n                                                        <div className=\"form-check form-check-inline\">\n                                                            <input className=\"form-check-input\" type=\"radio\" name=\"Type\" id=\"Customer\"\n                                                                value={data.Type} onChange={() => this.onRadiochange(\"customer\")}\n                                                                checked={data.Type === \"customer\"} />\n                                                            <label className=\"form-check-label\" htmlFor=\"IsActiveNo\">Customer</label>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                            <div className=\"col-md-6\">\n                                                {this.renderInput(\"CategoryName\", \"Category Name\")}\n                                            </div>\n                                            <div className=\"col-md-6\">\n                                                {this.renderInput(\"CategoryDescription\", \"Category Description\")}\n                                            </div>\n                                            <div className=\"col-md-6\">\n                                                <div className={\"form-group \" + \"IsActive\"}>\n                                                    <label htmlFor={\"IsActive\"}>{\"Active\"}</label>\n                                                    <div className=\"input-group\">\n                                                        <div className=\"form-check form-check-inline\">\n                                                            <input className=\"form-check-input\" type=\"radio\" name=\"IsActive\" id=\"yes\" onChange={() => this.IsActiveChange(true)} value={data.IsActive} checked={data.IsActive === true} />\n                                                            <label className=\"form-check-label\" htmlFor=\"IsActiveYes\">Yes</label>\n                                                        </div>\n                                                        <div className=\"form-check form-check-inline\">\n                                                            <input className=\"form-check-input\" type=\"radio\" name=\"IsActive\" id=\"no\" value={data.IsActive} onChange={() => this.IsActiveChange(false)} checked={data.IsActive === false} />\n                                                            <label className=\"form-check-label\" htmlFor=\"IsActiveNo\">No</label>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                }\n                                <div class=\"modal-footer\">\n                                    {this.state.errors[\"submit\"] && <small className=\"alert alert-danger mt-2 p-1 d-inline-block\">\n                                        {this.state.errors[\"submit\"]} </small>}\n                                    <button type=\"button\"\n                                        onClick={() => { this.props.handleClose() }}\n                                        class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                                    <button type=\"button\" class=\"btn btn-primary\"\n                                        onClick={() => { this.handleSubmit() }}\n                                    >{this.props.popup.type}\n                                        {this.state.isSubmitLoading ? (\n                                            <span\n                                                className=\"spinner-border spinner-border-sm mr-2\"\n                                                role=\"status\"\n                                                aria-hidden=\"true\"\n                                            ></span>\n                                        ) : null}\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"modal-backdrop fade show\"></div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Modal\n","E:\\Amit\\Projects\\booking-engine\\src\\components\\admin\\branch-filters.jsx",["2066","2067","2068"],"import React from 'react'\nimport Form from \"../common/form\";\nimport { apiRequester } from \"../../services/requester-report\";\n\nexport class Filter extends Form {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {\n                BranchName: \"\",\n                ContactPerson: \"\",\n                CityId: 0,\n                StateId: 0,\n                CountryId: 0,\n            },\n            errors: {},\n            CountryList: [],\n            StateList: [],\n            CityList: []\n        };\n    }\n\n    componentDidMount() {\n        this.getCountry()\n    }\n\n    handleFilters = () => {\n        this.props.handleFilters(this.state.data)\n    }\n\n    handleResetFilters = () => {\n        this.setState({\n            data: {\n                BranchName: \"\",\n                ContactPerson: \"\",\n                CityId: 0,\n                StateId: 0,\n                CountryId: 0,\n            }\n        }, () => { this.handleFilters() })\n    }\n\n    getCountry = () => {\n\n        const reqOBJ = {\n            request: {\n                providerID: this.props.agentID\n            }\n        };\n        let reqURL = \"/admin/lookup/country\";\n        apiRequester(reqURL, reqOBJ, function (resonsedata) {\n            resonsedata.response = resonsedata.response.sort((a, b) => (a.countryName > b.countryName) ? 1 : ((b.countryName > a.countryName) ? -1 : 0));\n            this.setState({ CountryList: resonsedata.response })\n        }.bind(this), \"POST\");\n    }\n\n    getStateList = (countryId, isFirstCall) => {\n        let { data } = this.state;\n        // CityId: null,\n        // StateId: null,\n        // CountryId: null,\n        if (!isFirstCall) {\n            data.StateId = \"\";\n            data.CityId = \"\";\n        }\n\n        if (countryId === \"\") {\n            this.setState({ StateList: [], CityList: [], data });\n            return;\n        }\n        const reqOBJ = {\n            request: {\n                IsActive: \"true\",\n                CountryID: countryId\n            }\n        };\n        let reqURL = \"/admin/lookup/state\";\n        this.setState({ LoadingStateList: true });\n        apiRequester(reqURL, reqOBJ, function (resonsedata) {\n            this.setState({ StateList: resonsedata.response, CityList: [], data, LoadingStateList: false });\n            if (isFirstCall && data.StateId) {\n                this.getCityList(data.StateId, true);\n            }\n        }.bind(this), \"POST\");\n    }\n    getCityList = async (stateId, isFirstCall) => {\n        let { data } = this.state;\n        if (!isFirstCall) {\n            data.City = \"\";\n        }\n\n        if (stateId === \"\") {\n            this.setState({ CityList: [], data });\n            return;\n        }\n        const reqOBJ = {\n            request: {\n                IsActive: \"true\",\n                StateID: stateId,\n                CountryID: data.CountryId\n            }\n        };\n        let reqURL = \"/admin/lookup/city\";\n        this.setState({ LoadingCityList: true });\n        apiRequester(reqURL, reqOBJ, function (resonsedata) {\n            this.setState({ CityList: resonsedata.response, data, LoadingCityList: false });\n        }.bind(this), \"POST\");\n    }\n\n    handleDataChange = (e) => {\n        let { data } = this.state;\n        data[e.target.name] = e.target.value;\n        this.setState({ data });\n        if (e.target.name === \"CountryId\")\n            this.getStateList(e.target.value);\n        if (e.target.name === \"StateId\")\n            this.getCityList(e.target.value);\n    }\n\n    render() {\n        const { data, CountryList, StateList, CityList, errors, LoadingCityList, LoadingStateList } = this.state;\n        return (\n            <div className=\"border pt-2 pb-2 pl-3 pr-3 shadow-sm\">\n                <h5 className=\"text-primary border-bottom pb-2 mb-2\">\n                    Filters\n                </h5>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        {this.renderInput(\"BranchName\", \"Branch Name\")}\n                    </div>\n                    <div className=\"col-md-4\">\n                        {this.renderInput(\"ContactPerson\", \"Contact Person\")}\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className={\"form-group \" + \"Country\"}>\n                            <label htmlFor={\"Country\"}>{\"Country\"}</label>\n                            <div className=\"input-group\">\n                                <select\n                                    value={data.CountryId}\n                                    onChange={(e) => this.handleDataChange(e)}\n                                    name={\"CountryId\"}\n                                    id={\"CountryID\"}\n                                    //   disabled={disabled}\n                                    className={\"form-control\"}>\n                                    <option key={0} value={''}>Select</option>\n                                    {CountryList.map((option, key) => (\n\n                                        <option\n                                            key={key}\n                                            value={\n                                                option[\"countryId\"]\n                                            }\n                                        >\n                                            {option[\"countryName\"]}\n                                        </option>\n                                    ))}\n                                </select>\n                            </div>\n                            {errors[\"CountryID\"] && (\n                                <small className=\"alert alert-danger mt-2 p-1 d-inline-block\">\n                                    {errors[\"CountryID\"]}\n                                </small>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className={\"form-group \" + \"StateId\"}>\n                            <label htmlFor={\"StateId\"}>{\"State\"}</label>\n                            <div className=\"input-group\">\n                                <select\n                                    value={data.StateId}\n                                    onChange={(e) => this.handleDataChange(e)}\n                                    name={\"StateId\"}\n                                    id={\"StateID\"}\n                                    // disabled={disabled}\n                                    className={\"form-control\"}>\n                                    <option key={0} value={''}>Select</option>\n                                    {StateList.map((option, key) => (\n\n                                        <option\n                                            key={key}\n                                            value={\n                                                option[\"stateId\"]\n                                            }\n                                        >\n                                            {option[\"stateName\"]}\n                                        </option>\n                                    ))}\n                                </select>\n                                {LoadingStateList ? (\n                                    <div className=\"input-group-append\">\n                                        <div className=\"input-group-text\">\n                                            <span\n                                                className=\"spinner-border spinner-border-sm mr-2\"\n                                                role=\"status\"\n                                                aria-hidden=\"true\"\n                                            ></span>\n                                        </div>\n                                    </div>\n                                ) : null}\n                            </div>\n                            {errors[\"StateId\"] && (\n                                <small className=\"alert alert-danger mt-2 p-1 d-inline-block\">\n                                    {errors[\"StateID\"]}\n                                </small>\n                            )}\n                        </div>\n\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className={\"form-group \" + \"CityID\"}>\n                            <label htmlFor={\"CityID\"}>{\"City\"}</label>\n                            <div className=\"input-group\">\n                                <select\n                                    value={data.CityId}\n                                    onChange={(e) => this.handleDataChange(e)}\n                                    name={\"CityId\"}\n                                    id={\"CityId\"}\n                                    //disabled={disabled}\n                                    className={\"form-control\"}>\n                                    <option key={0} value={''}>Select</option>\n                                    {CityList && CityList.map((option, key) => (\n\n                                        <option\n                                            key={key}\n                                            value={\n                                                option[\"cityId\"]\n                                            }\n                                        >\n                                            {option[\"cityName\"]}\n                                        </option>\n                                    ))}\n                                </select>\n                                {LoadingCityList ? (\n                                    <div className=\"input-group-append\">\n                                        <div className=\"input-group-text\">\n                                            <span\n                                                className=\"spinner-border spinner-border-sm mr-2\"\n                                                role=\"status\"\n                                                aria-hidden=\"true\"\n                                            ></span>\n                                        </div>\n                                    </div>\n                                ) : null}\n                            </div>\n                            {errors[\"CityID\"] && (\n                                <small className=\"alert alert-danger mt-2 p-1 d-inline-block\">\n                                    {errors[\"CityID\"]}\n                                </small>\n                            )}\n                        </div>\n\n                    </div>\n                    <div className=\"col-lg-4\">\n                        <label className=\"d-block\">&nbsp;</label>\n                        <button\n                            name=\"Apply\"\n                            onClick={this.handleFilters.bind(this)}\n                            className=\"btn btn-primary\"\n                        >\n                            Search\n                            </button>\n                        <button\n                            name=\"reset\"\n                            onClick={this.handleResetFilters.bind(this)}\n                            className=\"btn btn-primary ml-2\"\n                        >\n                            Reset\n                            </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Filter\n","E:\\Amit\\Projects\\booking-engine\\src\\components\\admin\\branch-add-update-modal.jsx",["2069","2070","2071","2072","2073"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\admin\\agent-wallet-logs.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\admin\\agent-wallet-transaction.jsx",["2074","2075","2076","2077","2078","2079","2080","2081","2082"],"import React, { Component } from 'react'\nimport Form from \"../common/form\";\nimport { apiRequester } from \"../../services/requester-report\";\nimport Loader from \"../common/loader\";\nimport { Trans } from \"../../helpers/translate\";\nimport { parse } from 'libphonenumber-js';\nimport MessageBar from '../admin/message-bar';\nexport class WalletTransaction extends Form {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {\n                ProviderId: this.props.ProviderId,\n                AgentId: this.props.AgentId,\n                PaymentType: 1,\n                Amount: \"\",\n                ChildCurrencySymbol: \"\",\n                ParentCurrencySymbol: \"\",\n                Balance: \"\",\n                ConversionFactor: this.props.ConversionFactor,\n                Comment: \"\",\n                ReferenceNo: \"\",\n                ChequeBank: \"\",\n                ChequeBranch: \"\",\n                ChequeNumber: \"\",\n                ChequeDate: \"\",\n                UserId: this.props.UserId,\n                IsCredit: 1,\n                IsPrePaid: \"\",\n                SelectedCurrency: \"\",\n                AgentName: \"\"\n            },\n            errors: {},\n            currencyList: [],\n            isLoading: false,\n            isSaveInProgress: false,\n\n        };\n    }\n    componentDidMount() {\n        this.getData();\n    }\n    getData = () => {\n        this.setState({ isLoading: true });\n        let reqURL = \"admin/agent/transaction/details\";\n        const reqOBJ = {\n            \"request\": {\n                \"ProviderId\": this.props.ProviderId,\n                \"agentId\": this.props.AgentId,\n            }\n        }\n        apiRequester(\n            reqURL,\n            reqOBJ,\n            function (responsedata) {\n                let { data } = this.state;\n                let currencyList = [];\n                if (responsedata.response && responsedata.response.length > 0) {\n                    responsedata = responsedata.response[0];\n                    data[\"AgentName\"] = responsedata[\"name\"];\n                    data[\"Balance\"] = responsedata[\"balance\"];\n                    data[\"IsPrePaid\"] = responsedata[\"isPrePaid\"] === true ? 1 : 0;\n                    data[\"ChildCurrencySymbol\"] = responsedata[\"childCurrencySymbol\"];\n                    data[\"ParentCurrencySymbol\"] = responsedata[\"parentCurrencySymbol\"];\n                    data[\"CurrencySymbol\"] = responsedata[\"currencySymbol\"];\n                    data[\"SelectedCurrency\"] = responsedata[\"childCurrencySymbol\"];\n                    currencyList.push(responsedata[\"childCurrencySymbol\"]);\n                    if (responsedata[\"childCurrencySymbol\"] != responsedata[\"parentCurrencySymbol\"]) {\n                        currencyList.push(responsedata[\"parentCurrencySymbol\"]);\n                    }\n                }\n                this.setState({ data, currencyList, isLoading: false });\n            }.bind(this),\n            \"POST\"\n        );\n\n    }\n    handleSubmit = () => {\n        const errors = this.validateData();\n\n        this.setState({ errors: errors || {} });\n        if (errors) return;\n        this.setState({ isSaveInProgress: true, saveError: \"\" });\n        let reqURL = \"admin/agent/transaction/add\";\n        let reqOBJ = { ...this.state.data };\n        delete reqOBJ[\"AgentName\"];\n        delete reqOBJ[\"CurrencySymbol\"];\n        if (reqOBJ.PaymentType != 2) {\n            reqOBJ[\"ChequeBank\"] = \"\";\n            reqOBJ[\"ChequeBranch\"] = \"\";\n            reqOBJ[\"ChequeDate\"] = \"\";\n            reqOBJ[\"ChequeNumber\"] = \"\";\n        } else\n            reqOBJ[\"ReferenceNo\"] = \"\";\n        reqOBJ[\"Amount\"] = parseFloat(reqOBJ[\"Amount\"]);\n        apiRequester(\n            reqURL,\n            { request: reqOBJ },\n            function (data) {\n                this.setState({ isSaveInProgress: false })\n                if (data && data.response && data.response.status === \"Success\") {\n                    this.setState({ showSuccessMessage: true });\n                }\n                else {\n                    this.setState({ saveError: data.error })\n                }\n            }.bind(this)\n        );\n    }\n    validateData = () => {\n        const errors = {};\n        const { data } = this.state;\n        if (!this.validateFormData(data.Amount, \"require\"))\n            errors.Amount = \"Amount required\";\n        else if (parseFloat(data.Amount) <= 0)\n            errors.Amount = \"Amount can not be less or equal to 0\";\n        if (data.PaymentType == 2) {\n            if (!this.validateFormData(data.ChequeBank, \"require\"))\n                errors.ChequeBank = \"Bank Name required\";\n            if (!this.validateFormData(data.ChequeBranch, \"require\"))\n                errors.ChequeBranch = \"Branch Name required\";\n            if (!this.validateFormData(data.ChequeNumber, \"require\"))\n                errors.ChequeNumber = \"Cheque Number required\";\n            if (!this.validateFormData(data.ChequeDate, \"require_date\"))\n                errors.ChequeDate = \"Cheque Date required\";\n        }\n        else {\n            if (!this.validateFormData(data.ReferenceNo, \"require\"))\n                errors.ReferenceNo = \"Reference Number required\";\n        }\n        if (!this.validateFormData(data.Comment, \"require\"))\n            errors.Comment = \"Comment required\";\n        return Object.keys(errors).length === 0 ? null : errors;\n    }\n    PaymentTypeChange = (value) => {\n        const { data } = this.state;\n        data.IsCredit = value;\n        this.setState({ data });\n    }\n    CurrencyChange = (value) => {\n        const { data } = this.state;\n        data.SelectedCurrency = value;\n        this.setState({ data });\n    }\n    render() {\n        const { data, isLoading, isSaveInProgress, saveError, currencyList, showSuccessMessage } = this.state;\n        const PaymentMode = [{ value: 1, name: \"Cash\" }, { value: 2, name: \"Cheque\" }];\n\n        return (\n            <div>\n                <div>\n                    <div className=\"model-popup\">\n                        <div className=\"modal fade show d-block\">\n                            <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg\">\n                                <div className=\"modal-content\">\n                                    <div className=\"modal-header\">\n                                        <h5 className=\"modal-title text-capitalize\">\n                                            Wallet Transaction\n                                        </h5>\n                                        <button\n                                            type=\"button\"\n                                            className=\"close\"\n                                            onClick={() => { this.props.closePopup() }}\n                                        >\n                                            <span aria-hidden=\"true\">&times;</span>\n                                        </button>\n                                    </div>\n                                    {isLoading && (<Loader />)}\n                                    {!isLoading && <div className=\"modal-body\">\n                                        {showSuccessMessage &&\n                                            <MessageBar Message={`Wallet transaction saved successfully.`} handleClose={() => this.props.closePopup(true)} />\n                                        }\n                                        <div className=\"container\">\n                                            <div className=\"row\" >\n                                                <div className=\"col-lg-6 col-md-6 col-sm-12\">\n                                                    <div className={\"form-group \" + \"PaymentType\"}>\n                                                        <label htmlFor={\"PaymentType\"}>{\"Payment Type\"}</label>\n                                                        <div className=\"input-group\">\n                                                            <div className=\"form-check form-check-inline\">\n                                                                <input className=\"form-check-input\" type=\"radio\" name=\"PaymentType\" id=\"yes\" onClick={() => this.PaymentTypeChange(1)} value={1} checked={data.IsCredit === 1} />\n                                                                <label className=\"form-check-label\" htmlFor=\"PaymentTypeYes\">Credit</label>\n                                                            </div>\n                                                            <div className=\"form-check form-check-inline\">\n                                                                <input className=\"form-check-input\" type=\"radio\" name=\"PaymentType\" id=\"no\" value={0} onClick={() => this.PaymentTypeChange(0)} checked={data.IsCredit === 0} />\n                                                                <label className=\"form-check-label\" htmlFor=\"PaymentTypeNo\">Debit</label>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-lg-6 col-md-6 col-sm-12\">\n                                                    {this.renderInput(\"AgentName\", \"Agency Name\", \"text\", true)}\n                                                </div>\n                                                <div className=\"col-lg-6 col-md-6 col-sm-12\">\n                                                    <label htmlFor={\"CurrentBalance\"}>{\"Current Balance\"}</label>\n                                                    <div className=\"input-group\">\n                                                        <div className=\"input-group-prepend\">\n                                                            <div className=\"input-group-text\">{data.CurrencySymbol}</div>\n                                                        </div>\n                                                        <input type=\"number\" className=\"form-control\" value={data.Balance} disabled={true}></input>\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-lg-6 col-md-6 col-sm-12\">\n                                                    {this.renderInput(\"Amount\", \"Amount *\", \"number\")}\n                                                </div>\n                                                <div className=\"col-lg-6 col-md-6 col-sm-12\">\n                                                    <div className={\"form-group \" + \"PaymentType\"}>\n                                                        <label htmlFor={\"Currency\"}>{\"Currency *\"}</label>\n                                                        <div className=\"input-group\">\n                                                            {currencyList.map((item, key) => {\n                                                                return (\n                                                                    <div key={key} className=\"form-check form-check-inline\">\n                                                                        <input className=\"form-check-input\" type=\"radio\" name=\"Currency\" id={key} onClick={() => this.CurrencyChange(item)} value={item} checked={data.SelectedCurrency === item} />\n                                                                        <label className=\"form-check-label\" htmlFor=\"PaymentTypeYes\">{item}</label>\n                                                                    </div>\n                                                                )\n                                                            })}\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-lg-6 col-md-6 col-sm-12\">\n                                                    <label htmlFor={\"ClosingBalance\"}>{\"Closing Balance\"}</label>\n                                                    <div className=\"input-group\">\n                                                        <div className=\"input-group-prepend\">\n                                                            <div className=\"input-group-text\">{data.CurrencySymbol}</div>\n                                                        </div>\n                                                        <input type=\"number\" className=\"form-control\" value={data.Balance} disabled={true}></input>\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-lg-6 col-sm-12\">\n                                                    {this.renderSelect(\n                                                        \"PaymentType\",\n                                                        Trans(\"Payment Type *\"),\n                                                        PaymentMode\n                                                    )}\n                                                </div>\n\n                                                {data.PaymentType == 2 &&\n                                                    <React.Fragment>\n                                                        <div className=\"col-lg-6 col-sm-12\">\n                                                            {this.renderInput(\n                                                                \"ChequeBank\",\n                                                                Trans(\"Cheque Bank *\"),\n                                                                \"text\",\n                                                                false\n                                                            )}\n                                                        </div>\n                                                        <div className=\"col-lg-6 col-sm-12\">\n                                                            {this.renderInput(\n                                                                \"ChequeBranch\",\n                                                                Trans(\"Cheque Branch *\"),\n                                                                \"text\",\n                                                                false\n                                                            )}\n                                                        </div>\n                                                        <div className=\"col-lg-6 col-sm-12\">\n                                                            {this.renderInput(\n                                                                \"ChequeNumber\",\n                                                                Trans(\"Cheque Number *\"),\n                                                                \"text\",\n                                                                false\n                                                            )}\n                                                        </div>\n                                                        <div className=\"col-lg-6 col-sm-12\">\n                                                            {this.renderPaymentDate(\n                                                                \"ChequeDate\",\n                                                                Trans(\"Cheque Date *\")\n                                                            )}\n                                                        </div>\n                                                    </React.Fragment>\n                                                }\n                                                {data.PaymentType != 2 &&\n                                                    <div className=\"col-lg-6 col-sm-12\">\n                                                        {this.renderInput(\n                                                            \"ReferenceNo\",\n                                                            Trans(\"Reference Number *\"),\n                                                            \"text\",\n                                                            false\n                                                        )}\n                                                    </div>\n                                                }\n                                                <div className=\"col-lg-6 col-sm-6\">\n                                                    {this.renderTextarea(\"Comment\", Trans(\"Comment *\"))}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    }\n                                    <div className=\"modal-footer\">\n                                        {saveError && saveError.length > 0 &&\n                                            <small className=\"alert alert-danger mt-2 p-1 d-inline-block\">\n                                                {saveError}\n                                            </small>\n                                        }\n                                        <button\n                                            name=\"Cancel\"\n                                            onClick={() => { this.props.closePopup() }}\n                                            className=\"btn btn-secondary  float-left mr-2\"\n                                        >\n                                            {Trans(\"_cancel\")}\n                                        </button>\n                                        <button\n                                            name=\"Submit\"\n                                            onClick={this.handleSubmit}\n                                            className=\"btn btn-primary float-left\"\n                                        >\n                                            {isSaveInProgress ? (\n                                                <span\n                                                    className=\"spinner-border spinner-border-sm mr-2\"\n                                                    role=\"status\"\n                                                    aria-hidden=\"true\"\n                                                ></span>\n                                            ) : null}\n                                            {Trans(\"_save\")}\n                                        </button>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"modal-backdrop fade show\"></div>\n                    </div>\n                </div>\n            </div >\n        )\n    }\n}\n\nexport default WalletTransaction;\n","E:\\Amit\\Projects\\booking-engine\\src\\components\\admin\\category-filters.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\admin\\agent-wallet-management-filtes.jsx",["2083"],"import React from 'react'\nimport Form from \"../common/form\";\nexport class Filter extends Form {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {\n                \"AgencyName\": \"\",\n                \"EmailId\": \"\",\n                \"PhoneNumber\": \"\",\n                \"CategoryId\": \"\"\n            },\n            errors: {}\n        };\n    }\n    handleFilters = () => {        \n        this.props.handleFilters(this.state.data);\n    };\n    handleResetFilters = () => {\n        this.setState({\n            data: {\n                \"AgencyName\": \"\",\n                \"EmailId\": \"\",\n                \"PhoneNumber\": \"\",\n                \"CategoryId\": \"\"\n            }           \n        },()=>{this.props.handleFilters(this.state.data);});\n    };    \n    render() {\n        const {data} = this.state;\n        const {CategoryList} = this.props;\n        return (\n                <div className=\"border pt-2 pb-2 pl-3 pr-3 shadow-sm\">\n                    <h5 className=\"text-primary border-bottom pb-2 mb-2\">\n                        Filters\n            \n                    </h5>\n                    <div className=\"row\">\n                        <div className=\"col-lg-4\">\n                            {this.renderInput(\"AgencyName\", \"Agency Name\")}\n                        </div>\n                        <div className=\"col-lg-4\">\n                            {this.renderInput(\"PhoneNumber\", \"Phone Number\")}\n                        </div> \n                        <div className=\"col-lg-4\">\n                            {this.renderInput(\"EmailId\", \"Email Address\")}\n                        </div>\n                        <div className=\"col-lg-4\">\n                            {this.renderSelect(\"CategoryId\", \"Category\",CategoryList)}\n                        </div>                \n                        <div className=\"col-lg-4\">\n                            <label className=\"d-block\">&nbsp;</label>\n                            <button\n                                name=\"Apply\"\n                                onClick={this.handleFilters}\n                                className=\"btn btn-primary\"\n                            >\n                                Apply\n                            </button>\n                            <button\n                                name=\"reset\"\n                                onClick={this.handleResetFilters}\n                                className=\"btn btn-primary ml-2\"\n                            >\n                                Reset\n                            </button>\n                        </div>\n                    </div>\n                    </div>\n        )\n    }\n}\n\nexport default Filter\n","E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\inquiry-excel.jsx",[],"E:\\Amit\\Projects\\booking-engine\\src\\components\\reports\\booking-report-excel.jsx",["2084","2085"],"import React from \"react\";\nimport Datecomp from \"../../helpers/date\";\nimport XLSX from \"xlsx\";\nclass BookingReportExcel extends React.Component {\n    componentDidMount() {\n        let { data } = this.props;\n        const ExportData = [];\n        data.map((item) => {\n            const itinerary = item[Object.keys(item)[0]];\n            const bookingHeader = item[Object.keys(item)[0]][0];\n            itinerary.map((booking) => {\n                (\n                    ExportData.push({\n                        Itinerary: bookingHeader.itineraryRefNo,\n                        \"Business Name\": booking.businessShortDescription ===\n                            \"Excursion\"\n                            ? \"Activity\"\n                            : booking.businessShortDescription === \"GroundService\"\n                                ? \"Ground Service\"\n                                : booking.businessShortDescription\n\n                                + \" - \" + booking.details,\n                        \"Booking Reference Number\": booking.bookingRefNo,\n                        \"Booking Status\": (booking.bookingStatus === \"Amend Request\" ? \"AmendRequest\" : booking.bookingStatus),\n                        \"Booking Date\": Datecomp({ date: booking.bookingDate }),\n                        \"Check-In\": Datecomp({ date: booking.startDate }),\n                        \"Check-Out\": Datecomp({ date: booking.endDate }),\n                        \"Guest Name\":\n                            booking.firstName\n                            + \" \" +\n                            booking.lastName,\n                        \"Emial Address\": booking.email,\n                        \"Deadline Date\": Datecomp({ date: booking.deadlineDate }),\n                    }))\n            })\n        })\n        const workbook1 = XLSX.utils.json_to_sheet(ExportData);\n        workbook1['!cols'] = [{ wpx: 125 }, { wpx: 200 }, { wpx: 125 }, { wpx: 100 }, { wpx: 75 }, { wpx: 75 }, { wpx: 75 }, { wpx: 150 }, { wpx: 150 }, { wpx: 75 }];\n        const workbook = {\n            SheetNames: ['Booking Report'],\n            Sheets: {\n                'Booking Report': workbook1\n            }\n        };\n        this.props.onExportComplete();\n        return XLSX.writeFile(workbook, `${this.props.filename}.xlsx`);\n    }\n    render() {\n        return null;\n    }\n}\nexport default BookingReportExcel;","E:\\Amit\\Projects\\booking-engine\\src\\screens\\about.jsx",["2086","2087","2088","2089","2090"],"E:\\Amit\\Projects\\booking-engine\\src\\components\\admin\\show-logo.jsx",[],{"ruleId":"2091","severity":1,"message":"2092","line":45,"column":8,"nodeType":"2093","messageId":"2094","endLine":45,"endColumn":21},{"ruleId":"2095","severity":1,"message":"2096","line":316,"column":42,"nodeType":"2097","messageId":"2098","endLine":316,"endColumn":44},{"ruleId":"2099","severity":1,"message":"2100","line":6,"column":1,"nodeType":"2101","endLine":24,"endColumn":2},{"ruleId":"2102","severity":1,"message":"2103","line":11,"column":17,"nodeType":"2104","messageId":"2105","endLine":18,"endColumn":18},{"ruleId":"2106","severity":1,"message":"2107","line":20,"column":77,"nodeType":"2108","messageId":"2109","endLine":20,"endColumn":79},{"ruleId":"2110","severity":1,"message":"2111","line":168,"column":13,"nodeType":"2093","messageId":"2112","endLine":168,"endColumn":21},{"ruleId":"2110","severity":1,"message":"2111","line":177,"column":11,"nodeType":"2093","messageId":"2112","endLine":177,"endColumn":19},{"ruleId":"2106","severity":1,"message":"2107","line":663,"column":60,"nodeType":"2108","messageId":"2109","endLine":663,"endColumn":62},{"ruleId":"2113","severity":1,"message":"2114","line":215,"column":35,"nodeType":"2115","messageId":"2116","endLine":215,"endColumn":230,"fix":"2117"},{"ruleId":"2091","severity":1,"message":"2118","line":18,"column":8,"nodeType":"2093","messageId":"2094","endLine":18,"endColumn":23},{"ruleId":"2091","severity":1,"message":"2119","line":28,"column":8,"nodeType":"2093","messageId":"2094","endLine":28,"endColumn":18},{"ruleId":"2091","severity":1,"message":"2120","line":31,"column":8,"nodeType":"2093","messageId":"2094","endLine":31,"endColumn":21},{"ruleId":"2091","severity":1,"message":"2121","line":32,"column":8,"nodeType":"2093","messageId":"2094","endLine":32,"endColumn":21},{"ruleId":"2091","severity":1,"message":"2122","line":33,"column":8,"nodeType":"2093","messageId":"2094","endLine":33,"endColumn":21},{"ruleId":"2091","severity":1,"message":"2123","line":34,"column":8,"nodeType":"2093","messageId":"2094","endLine":34,"endColumn":21},{"ruleId":"2091","severity":1,"message":"2124","line":35,"column":8,"nodeType":"2093","messageId":"2094","endLine":35,"endColumn":21},{"ruleId":"2091","severity":1,"message":"2125","line":36,"column":8,"nodeType":"2093","messageId":"2094","endLine":36,"endColumn":21},{"ruleId":"2091","severity":1,"message":"2126","line":37,"column":8,"nodeType":"2093","messageId":"2094","endLine":37,"endColumn":24},{"ruleId":"2127","severity":1,"message":"2128","line":103,"column":43,"nodeType":"2129","messageId":"2130","endLine":103,"endColumn":44,"suggestions":"2131"},{"ruleId":"2127","severity":1,"message":"2128","line":103,"column":68,"nodeType":"2129","messageId":"2130","endLine":103,"endColumn":69,"suggestions":"2132"},{"ruleId":"2127","severity":1,"message":"2128","line":103,"column":77,"nodeType":"2129","messageId":"2130","endLine":103,"endColumn":78,"suggestions":"2133"},{"ruleId":"2127","severity":1,"message":"2128","line":103,"column":81,"nodeType":"2129","messageId":"2130","endLine":103,"endColumn":82,"suggestions":"2134"},{"ruleId":"2091","severity":1,"message":"2135","line":105,"column":27,"nodeType":"2093","messageId":"2094","endLine":105,"endColumn":41},{"ruleId":"2106","severity":1,"message":"2107","line":14,"column":77,"nodeType":"2108","messageId":"2109","endLine":14,"endColumn":79},{"ruleId":"2091","severity":1,"message":"2136","line":11,"column":18,"nodeType":"2093","messageId":"2094","endLine":11,"endColumn":22},{"ruleId":"2091","severity":1,"message":"2137","line":140,"column":11,"nodeType":"2093","messageId":"2094","endLine":140,"endColumn":25},{"ruleId":"2106","severity":1,"message":"2107","line":317,"column":60,"nodeType":"2108","messageId":"2109","endLine":317,"endColumn":62},{"ruleId":"2091","severity":1,"message":"2138","line":1,"column":17,"nodeType":"2093","messageId":"2094","endLine":1,"endColumn":26},{"ruleId":"2091","severity":1,"message":"2139","line":2,"column":8,"nodeType":"2093","messageId":"2094","endLine":2,"endColumn":19},{"ruleId":"2091","severity":1,"message":"2140","line":10,"column":8,"nodeType":"2093","messageId":"2094","endLine":10,"endColumn":23},{"ruleId":"2091","severity":1,"message":"2141","line":99,"column":22,"nodeType":"2093","messageId":"2094","endLine":99,"endColumn":27},{"ruleId":"2095","severity":1,"message":"2142","line":302,"column":17,"nodeType":"2097","messageId":"2098","endLine":302,"endColumn":19},{"ruleId":"2091","severity":1,"message":"2143","line":1117,"column":7,"nodeType":"2093","messageId":"2094","endLine":1117,"endColumn":22},{"ruleId":"2091","severity":1,"message":"2144","line":1118,"column":7,"nodeType":"2093","messageId":"2094","endLine":1118,"endColumn":19},{"ruleId":"2145","severity":1,"message":"2146","line":1206,"column":17,"nodeType":"2147","messageId":"2148","endLine":1206,"endColumn":28},{"ruleId":"2091","severity":1,"message":"2149","line":31,"column":9,"nodeType":"2093","messageId":"2094","endLine":31,"endColumn":17},{"ruleId":"2150","severity":1,"message":"2151","line":113,"column":9,"nodeType":"2152","messageId":"2098","endLine":113,"endColumn":13,"fix":"2153"},{"ruleId":"2113","severity":1,"message":"2114","line":46,"column":33,"nodeType":"2115","messageId":"2116","endLine":50,"endColumn":34,"fix":"2154"},{"ruleId":"2113","severity":1,"message":"2114","line":55,"column":33,"nodeType":"2115","messageId":"2116","endLine":59,"endColumn":34,"fix":"2155"},{"ruleId":"2113","severity":1,"message":"2114","line":64,"column":33,"nodeType":"2115","messageId":"2116","endLine":68,"endColumn":34,"fix":"2156"},{"ruleId":"2113","severity":1,"message":"2114","line":83,"column":15,"nodeType":"2115","messageId":"2116","endLine":87,"endColumn":16,"fix":"2157"},{"ruleId":"2091","severity":1,"message":"2158","line":2,"column":8,"nodeType":"2093","messageId":"2094","endLine":2,"endColumn":15},{"ruleId":"2106","severity":1,"message":"2107","line":100,"column":25,"nodeType":"2108","messageId":"2109","endLine":100,"endColumn":27},{"ruleId":"2159","severity":1,"message":"2160","line":311,"column":31,"nodeType":"2115","endLine":311,"endColumn":35},{"ruleId":"2091","severity":1,"message":"2138","line":1,"column":17,"nodeType":"2093","messageId":"2094","endLine":1,"endColumn":26},{"ruleId":"2106","severity":1,"message":"2107","line":23,"column":77,"nodeType":"2108","messageId":"2109","endLine":23,"endColumn":79},{"ruleId":"2110","severity":1,"message":"2111","line":201,"column":13,"nodeType":"2093","messageId":"2112","endLine":201,"endColumn":21},{"ruleId":"2110","severity":1,"message":"2111","line":210,"column":11,"nodeType":"2093","messageId":"2112","endLine":210,"endColumn":19},{"ruleId":"2106","severity":1,"message":"2107","line":1601,"column":62,"nodeType":"2108","messageId":"2109","endLine":1601,"endColumn":64},{"ruleId":"2091","severity":1,"message":"2161","line":8,"column":8,"nodeType":"2093","messageId":"2094","endLine":8,"endColumn":27},{"ruleId":"2091","severity":1,"message":"2162","line":10,"column":8,"nodeType":"2093","messageId":"2094","endLine":10,"endColumn":25},{"ruleId":"2091","severity":1,"message":"2163","line":154,"column":9,"nodeType":"2093","messageId":"2094","endLine":154,"endColumn":21},{"ruleId":"2150","severity":1,"message":"2151","line":258,"column":9,"nodeType":"2152","messageId":"2098","endLine":258,"endColumn":13,"fix":"2164"},{"ruleId":"2095","severity":1,"message":"2142","line":400,"column":19,"nodeType":"2097","messageId":"2098","endLine":400,"endColumn":21},{"ruleId":"2091","severity":1,"message":"2144","line":543,"column":7,"nodeType":"2093","messageId":"2094","endLine":543,"endColumn":19},{"ruleId":"2145","severity":1,"message":"2146","line":632,"column":19,"nodeType":"2147","messageId":"2148","endLine":632,"endColumn":30},{"ruleId":"2165","replacedBy":"2166"},{"ruleId":"2167","replacedBy":"2168"},{"ruleId":"2110","severity":1,"message":"2169","line":24,"column":9,"nodeType":"2093","messageId":"2112","endLine":24,"endColumn":14},{"ruleId":"2127","severity":1,"message":"2170","line":125,"column":25,"nodeType":"2129","messageId":"2130","endLine":125,"endColumn":26,"suggestions":"2171"},{"ruleId":"2091","severity":1,"message":"2138","line":1,"column":17,"nodeType":"2093","messageId":"2094","endLine":1,"endColumn":26},{"ruleId":"2091","severity":1,"message":"2172","line":3,"column":8,"nodeType":"2093","messageId":"2094","endLine":3,"endColumn":19},{"ruleId":"2091","severity":1,"message":"2173","line":76,"column":19,"nodeType":"2093","messageId":"2094","endLine":76,"endColumn":28},{"ruleId":"2091","severity":1,"message":"2174","line":14,"column":3,"nodeType":"2093","messageId":"2094","endLine":14,"endColumn":7},{"ruleId":"2091","severity":1,"message":"2175","line":15,"column":3,"nodeType":"2093","messageId":"2094","endLine":15,"endColumn":13},{"ruleId":"2091","severity":1,"message":"2176","line":16,"column":3,"nodeType":"2093","messageId":"2094","endLine":16,"endColumn":10},{"ruleId":"2091","severity":1,"message":"2177","line":17,"column":3,"nodeType":"2093","messageId":"2094","endLine":17,"endColumn":9},{"ruleId":"2091","severity":1,"message":"2178","line":19,"column":3,"nodeType":"2093","messageId":"2094","endLine":19,"endColumn":12},{"ruleId":"2091","severity":1,"message":"2179","line":22,"column":8,"nodeType":"2093","messageId":"2094","endLine":22,"endColumn":14},{"ruleId":"2180","severity":1,"message":"2181","line":457,"column":7,"nodeType":"2182","messageId":"2183","endLine":457,"endColumn":15},{"ruleId":"2180","severity":1,"message":"2184","line":710,"column":7,"nodeType":"2182","messageId":"2185","endLine":768,"endColumn":15},{"ruleId":"2106","severity":1,"message":"2107","line":856,"column":39,"nodeType":"2108","messageId":"2109","endLine":856,"endColumn":41},{"ruleId":"2095","severity":1,"message":"2096","line":1654,"column":47,"nodeType":"2097","messageId":"2098","endLine":1654,"endColumn":49},{"ruleId":"2095","severity":1,"message":"2096","line":1804,"column":45,"nodeType":"2097","messageId":"2098","endLine":1804,"endColumn":47},{"ruleId":"2106","severity":1,"message":"2107","line":1938,"column":34,"nodeType":"2108","messageId":"2109","endLine":1938,"endColumn":36},{"ruleId":"2095","severity":1,"message":"2096","line":1981,"column":46,"nodeType":"2097","messageId":"2098","endLine":1981,"endColumn":48},{"ruleId":"2095","severity":1,"message":"2096","line":2069,"column":46,"nodeType":"2097","messageId":"2098","endLine":2069,"endColumn":48},{"ruleId":"2091","severity":1,"message":"2186","line":2224,"column":13,"nodeType":"2093","messageId":"2094","endLine":2224,"endColumn":25},{"ruleId":"2187","severity":1,"message":"2188","line":2243,"column":24,"nodeType":"2093","messageId":"2189","endLine":2243,"endColumn":34},{"ruleId":"2190","severity":1,"message":"2191","line":2265,"column":20,"nodeType":"2097","messageId":"2192","endLine":2265,"endColumn":21},{"ruleId":"2190","severity":1,"message":"2191","line":2277,"column":20,"nodeType":"2097","messageId":"2192","endLine":2277,"endColumn":21},{"ruleId":"2190","severity":1,"message":"2191","line":2293,"column":19,"nodeType":"2097","messageId":"2192","endLine":2293,"endColumn":20},{"ruleId":"2190","severity":1,"message":"2191","line":2305,"column":19,"nodeType":"2097","messageId":"2192","endLine":2305,"endColumn":20},{"ruleId":"2190","severity":1,"message":"2191","line":2541,"column":54,"nodeType":"2097","messageId":"2192","endLine":2541,"endColumn":55},{"ruleId":"2190","severity":1,"message":"2191","line":2590,"column":54,"nodeType":"2097","messageId":"2192","endLine":2590,"endColumn":55},{"ruleId":"2190","severity":1,"message":"2191","line":2632,"column":54,"nodeType":"2097","messageId":"2192","endLine":2632,"endColumn":55},{"ruleId":"2091","severity":1,"message":"2193","line":37,"column":9,"nodeType":"2093","messageId":"2094","endLine":37,"endColumn":25},{"ruleId":"2091","severity":1,"message":"2194","line":44,"column":9,"nodeType":"2093","messageId":"2094","endLine":44,"endColumn":25},{"ruleId":"2150","severity":1,"message":"2151","line":122,"column":9,"nodeType":"2152","messageId":"2098","endLine":122,"endColumn":13,"fix":"2195"},{"ruleId":"2150","severity":1,"message":"2151","line":140,"column":9,"nodeType":"2152","messageId":"2098","endLine":140,"endColumn":13,"fix":"2196"},{"ruleId":"2150","severity":1,"message":"2151","line":158,"column":9,"nodeType":"2152","messageId":"2098","endLine":158,"endColumn":13,"fix":"2197"},{"ruleId":"2150","severity":1,"message":"2151","line":176,"column":9,"nodeType":"2152","messageId":"2098","endLine":176,"endColumn":13,"fix":"2198"},{"ruleId":"2091","severity":1,"message":"2199","line":2,"column":8,"nodeType":"2093","messageId":"2094","endLine":2,"endColumn":28},{"ruleId":"2091","severity":1,"message":"2200","line":3,"column":8,"nodeType":"2093","messageId":"2094","endLine":3,"endColumn":25},{"ruleId":"2091","severity":1,"message":"2201","line":4,"column":8,"nodeType":"2093","messageId":"2094","endLine":4,"endColumn":25},{"ruleId":"2091","severity":1,"message":"2202","line":5,"column":8,"nodeType":"2093","messageId":"2094","endLine":5,"endColumn":25},{"ruleId":"2091","severity":1,"message":"2203","line":6,"column":8,"nodeType":"2093","messageId":"2094","endLine":6,"endColumn":21},{"ruleId":"2091","severity":1,"message":"2204","line":56,"column":11,"nodeType":"2093","messageId":"2094","endLine":56,"endColumn":15},{"ruleId":"2145","severity":1,"message":"2146","line":72,"column":13,"nodeType":"2147","messageId":"2148","endLine":72,"endColumn":75},{"ruleId":"2145","severity":1,"message":"2146","line":109,"column":17,"nodeType":"2147","messageId":"2148","endLine":109,"endColumn":79},{"ruleId":"2091","severity":1,"message":"2201","line":3,"column":8,"nodeType":"2093","messageId":"2094","endLine":3,"endColumn":25},{"ruleId":"2091","severity":1,"message":"2138","line":1,"column":17,"nodeType":"2093","messageId":"2094","endLine":1,"endColumn":26},{"ruleId":"2091","severity":1,"message":"2179","line":19,"column":8,"nodeType":"2093","messageId":"2094","endLine":19,"endColumn":14},{"ruleId":"2091","severity":1,"message":"2205","line":39,"column":7,"nodeType":"2093","messageId":"2094","endLine":39,"endColumn":28},{"ruleId":"2206","severity":1,"message":"2207","line":131,"column":51,"nodeType":"2208","messageId":"2209","endLine":131,"endColumn":53},{"ruleId":"2206","severity":1,"message":"2207","line":131,"column":87,"nodeType":"2208","messageId":"2209","endLine":131,"endColumn":89},{"ruleId":"2095","severity":1,"message":"2142","line":191,"column":105,"nodeType":"2097","messageId":"2098","endLine":191,"endColumn":107},{"ruleId":"2095","severity":1,"message":"2142","line":192,"column":105,"nodeType":"2097","messageId":"2098","endLine":192,"endColumn":107},{"ruleId":"2095","severity":1,"message":"2142","line":258,"column":41,"nodeType":"2097","messageId":"2098","endLine":258,"endColumn":43},{"ruleId":"2095","severity":1,"message":"2142","line":267,"column":41,"nodeType":"2097","messageId":"2098","endLine":267,"endColumn":43},{"ruleId":"2091","severity":1,"message":"2210","line":29,"column":7,"nodeType":"2093","messageId":"2094","endLine":29,"endColumn":18},{"ruleId":"2206","severity":1,"message":"2207","line":124,"column":51,"nodeType":"2208","messageId":"2209","endLine":124,"endColumn":53},{"ruleId":"2206","severity":1,"message":"2207","line":124,"column":87,"nodeType":"2208","messageId":"2209","endLine":124,"endColumn":89},{"ruleId":"2095","severity":1,"message":"2142","line":183,"column":105,"nodeType":"2097","messageId":"2098","endLine":183,"endColumn":107},{"ruleId":"2095","severity":1,"message":"2142","line":184,"column":105,"nodeType":"2097","messageId":"2098","endLine":184,"endColumn":107},{"ruleId":"2095","severity":1,"message":"2142","line":250,"column":41,"nodeType":"2097","messageId":"2098","endLine":250,"endColumn":43},{"ruleId":"2095","severity":1,"message":"2142","line":259,"column":41,"nodeType":"2097","messageId":"2098","endLine":259,"endColumn":43},{"ruleId":"2091","severity":1,"message":"2211","line":2,"column":8,"nodeType":"2093","messageId":"2094","endLine":2,"endColumn":22},{"ruleId":"2091","severity":1,"message":"2212","line":10,"column":8,"nodeType":"2093","messageId":"2094","endLine":10,"endColumn":23},{"ruleId":"2106","severity":1,"message":"2107","line":149,"column":42,"nodeType":"2108","messageId":"2109","endLine":149,"endColumn":44},{"ruleId":"2106","severity":1,"message":"2107","line":13,"column":40,"nodeType":"2213","messageId":"2214","endLine":13,"endColumn":47},{"ruleId":"2095","severity":1,"message":"2096","line":23,"column":64,"nodeType":"2097","messageId":"2098","endLine":23,"endColumn":66},{"ruleId":"2095","severity":1,"message":"2096","line":23,"column":114,"nodeType":"2097","messageId":"2098","endLine":23,"endColumn":116},{"ruleId":"2095","severity":1,"message":"2096","line":24,"column":67,"nodeType":"2097","messageId":"2098","endLine":24,"endColumn":69},{"ruleId":"2095","severity":1,"message":"2096","line":24,"column":117,"nodeType":"2097","messageId":"2098","endLine":24,"endColumn":119},{"ruleId":"2095","severity":1,"message":"2096","line":24,"column":159,"nodeType":"2097","messageId":"2098","endLine":24,"endColumn":161},{"ruleId":"2095","severity":1,"message":"2096","line":24,"column":206,"nodeType":"2097","messageId":"2098","endLine":24,"endColumn":208},{"ruleId":"2113","severity":1,"message":"2114","line":69,"column":19,"nodeType":"2115","messageId":"2116","endLine":69,"endColumn":55,"fix":"2215"},{"ruleId":"2106","severity":1,"message":"2107","line":142,"column":42,"nodeType":"2108","messageId":"2109","endLine":142,"endColumn":44},{"ruleId":"2113","severity":1,"message":"2114","line":208,"column":31,"nodeType":"2115","messageId":"2116","endLine":216,"endColumn":32,"fix":"2216"},{"ruleId":"2106","severity":1,"message":"2107","line":100,"column":41,"nodeType":"2108","messageId":"2109","endLine":100,"endColumn":43},{"ruleId":"2091","severity":1,"message":"2138","line":1,"column":17,"nodeType":"2093","messageId":"2094","endLine":1,"endColumn":26},{"ruleId":"2217","severity":1,"message":"2218","line":125,"column":13,"nodeType":"2115","endLine":125,"endColumn":22},{"ruleId":"2106","severity":1,"message":"2107","line":156,"column":32,"nodeType":"2108","messageId":"2109","endLine":156,"endColumn":34},{"ruleId":"2106","severity":1,"message":"2107","line":187,"column":32,"nodeType":"2108","messageId":"2109","endLine":187,"endColumn":34},{"ruleId":"2091","severity":1,"message":"2138","line":1,"column":17,"nodeType":"2093","messageId":"2094","endLine":1,"endColumn":26},{"ruleId":"2091","severity":1,"message":"2219","line":7,"column":8,"nodeType":"2093","messageId":"2094","endLine":7,"endColumn":30},{"ruleId":"2091","severity":1,"message":"2220","line":11,"column":8,"nodeType":"2093","messageId":"2094","endLine":11,"endColumn":38},{"ruleId":"2091","severity":1,"message":"2138","line":1,"column":17,"nodeType":"2093","messageId":"2094","endLine":1,"endColumn":26},{"ruleId":"2091","severity":1,"message":"2221","line":43,"column":11,"nodeType":"2093","messageId":"2094","endLine":43,"endColumn":22},{"ruleId":"2091","severity":1,"message":"2222","line":44,"column":11,"nodeType":"2093","messageId":"2094","endLine":44,"endColumn":33},{"ruleId":"2127","severity":1,"message":"2128","line":290,"column":47,"nodeType":"2129","messageId":"2130","endLine":290,"endColumn":48,"suggestions":"2223"},{"ruleId":"2127","severity":1,"message":"2128","line":290,"column":72,"nodeType":"2129","messageId":"2130","endLine":290,"endColumn":73,"suggestions":"2224"},{"ruleId":"2127","severity":1,"message":"2128","line":290,"column":81,"nodeType":"2129","messageId":"2130","endLine":290,"endColumn":82,"suggestions":"2225"},{"ruleId":"2127","severity":1,"message":"2128","line":290,"column":85,"nodeType":"2129","messageId":"2130","endLine":290,"endColumn":86,"suggestions":"2226"},{"ruleId":"2091","severity":1,"message":"2138","line":1,"column":17,"nodeType":"2093","messageId":"2094","endLine":1,"endColumn":26},{"ruleId":"2106","severity":1,"message":"2107","line":50,"column":25,"nodeType":"2108","messageId":"2109","endLine":50,"endColumn":27},{"ruleId":"2095","severity":1,"message":"2142","line":75,"column":26,"nodeType":"2097","messageId":"2098","endLine":75,"endColumn":28},{"ruleId":"2095","severity":1,"message":"2142","line":88,"column":26,"nodeType":"2097","messageId":"2098","endLine":88,"endColumn":28},{"ruleId":"2095","severity":1,"message":"2142","line":135,"column":83,"nodeType":"2097","messageId":"2098","endLine":135,"endColumn":85},{"ruleId":"2159","severity":1,"message":"2160","line":169,"column":19,"nodeType":"2115","endLine":169,"endColumn":23},{"ruleId":"2091","severity":1,"message":"2138","line":1,"column":17,"nodeType":"2093","messageId":"2094","endLine":1,"endColumn":26},{"ruleId":"2095","severity":1,"message":"2142","line":726,"column":51,"nodeType":"2097","messageId":"2098","endLine":726,"endColumn":53},{"ruleId":"2091","severity":1,"message":"2138","line":1,"column":17,"nodeType":"2093","messageId":"2094","endLine":1,"endColumn":26},{"ruleId":"2095","severity":1,"message":"2142","line":63,"column":30,"nodeType":"2097","messageId":"2098","endLine":63,"endColumn":32},{"ruleId":"2110","severity":1,"message":"2227","line":102,"column":13,"nodeType":"2093","messageId":"2112","endLine":102,"endColumn":17},{"ruleId":"2095","severity":1,"message":"2096","line":317,"column":29,"nodeType":"2097","messageId":"2098","endLine":317,"endColumn":31},{"ruleId":"2095","severity":1,"message":"2096","line":501,"column":29,"nodeType":"2097","messageId":"2098","endLine":501,"endColumn":31},{"ruleId":"2228","severity":1,"message":"2229","line":502,"column":7,"nodeType":"2230","messageId":"2231","endLine":716,"endColumn":8},{"ruleId":"2106","severity":1,"message":"2107","line":503,"column":77,"nodeType":"2108","messageId":"2109","endLine":503,"endColumn":79},{"ruleId":"2228","severity":1,"message":"2229","line":508,"column":15,"nodeType":"2230","messageId":"2231","endLine":556,"endColumn":16},{"ruleId":"2106","severity":1,"message":"2107","line":509,"column":97,"nodeType":"2108","messageId":"2109","endLine":509,"endColumn":99},{"ruleId":"2091","severity":1,"message":"2232","line":511,"column":25,"nodeType":"2093","messageId":"2094","endLine":511,"endColumn":34},{"ruleId":"2228","severity":1,"message":"2229","line":560,"column":15,"nodeType":"2230","messageId":"2231","endLine":621,"endColumn":16},{"ruleId":"2106","severity":1,"message":"2107","line":561,"column":97,"nodeType":"2108","messageId":"2109","endLine":561,"endColumn":99},{"ruleId":"2228","severity":1,"message":"2229","line":628,"column":15,"nodeType":"2230","messageId":"2231","endLine":647,"endColumn":16},{"ruleId":"2106","severity":1,"message":"2107","line":629,"column":97,"nodeType":"2108","messageId":"2109","endLine":629,"endColumn":99},{"ruleId":"2228","severity":1,"message":"2229","line":651,"column":15,"nodeType":"2230","messageId":"2231","endLine":712,"endColumn":16},{"ruleId":"2106","severity":1,"message":"2107","line":652,"column":97,"nodeType":"2108","messageId":"2109","endLine":652,"endColumn":99},{"ruleId":"2095","severity":1,"message":"2096","line":717,"column":36,"nodeType":"2097","messageId":"2098","endLine":717,"endColumn":38},{"ruleId":"2106","severity":1,"message":"2107","line":724,"column":20,"nodeType":"2108","messageId":"2109","endLine":724,"endColumn":22},{"ruleId":"2095","severity":1,"message":"2096","line":730,"column":36,"nodeType":"2097","messageId":"2098","endLine":730,"endColumn":38},{"ruleId":"2228","severity":1,"message":"2229","line":731,"column":7,"nodeType":"2230","messageId":"2231","endLine":744,"endColumn":8},{"ruleId":"2106","severity":1,"message":"2107","line":732,"column":77,"nodeType":"2108","messageId":"2109","endLine":732,"endColumn":79},{"ruleId":"2228","severity":1,"message":"2229","line":733,"column":11,"nodeType":"2230","messageId":"2231","endLine":742,"endColumn":12},{"ruleId":"2106","severity":1,"message":"2107","line":734,"column":93,"nodeType":"2108","messageId":"2109","endLine":734,"endColumn":95},{"ruleId":"2095","severity":1,"message":"2096","line":747,"column":29,"nodeType":"2097","messageId":"2098","endLine":747,"endColumn":31},{"ruleId":"2095","severity":1,"message":"2096","line":747,"column":105,"nodeType":"2097","messageId":"2098","endLine":747,"endColumn":107},{"ruleId":"2106","severity":1,"message":"2233","line":1166,"column":50,"nodeType":"2108","messageId":"2234","endLine":1166,"endColumn":52},{"ruleId":"2095","severity":1,"message":"2142","line":1196,"column":89,"nodeType":"2097","messageId":"2098","endLine":1196,"endColumn":91},{"ruleId":"2095","severity":1,"message":"2142","line":1255,"column":96,"nodeType":"2097","messageId":"2098","endLine":1255,"endColumn":98},{"ruleId":"2091","severity":1,"message":"2235","line":1465,"column":7,"nodeType":"2093","messageId":"2094","endLine":1465,"endColumn":20},{"ruleId":"2091","severity":1,"message":"2236","line":5,"column":8,"nodeType":"2093","messageId":"2094","endLine":5,"endColumn":18},{"ruleId":"2206","severity":1,"message":"2207","line":105,"column":54,"nodeType":"2208","messageId":"2209","endLine":105,"endColumn":56},{"ruleId":"2206","severity":1,"message":"2207","line":105,"column":97,"nodeType":"2208","messageId":"2209","endLine":105,"endColumn":99},{"ruleId":"2228","severity":1,"message":"2237","line":152,"column":1,"nodeType":"2230","messageId":"2238","endLine":152,"endColumn":103},{"ruleId":"2228","severity":1,"message":"2237","line":153,"column":1,"nodeType":"2230","messageId":"2238","endLine":153,"endColumn":134},{"ruleId":"2239","severity":1,"message":"2240","line":62,"column":33,"nodeType":"2241","messageId":"2098","endLine":62,"endColumn":42},{"ruleId":"2239","severity":1,"message":"2242","line":63,"column":33,"nodeType":"2241","messageId":"2098","endLine":63,"endColumn":43},{"ruleId":"2239","severity":1,"message":"2240","line":438,"column":33,"nodeType":"2241","messageId":"2098","endLine":438,"endColumn":42},{"ruleId":"2239","severity":1,"message":"2242","line":439,"column":33,"nodeType":"2241","messageId":"2098","endLine":439,"endColumn":43},{"ruleId":"2095","severity":1,"message":"2142","line":578,"column":86,"nodeType":"2097","messageId":"2098","endLine":578,"endColumn":88},{"ruleId":"2095","severity":1,"message":"2142","line":716,"column":88,"nodeType":"2097","messageId":"2098","endLine":716,"endColumn":90},{"ruleId":"2106","severity":1,"message":"2107","line":157,"column":49,"nodeType":"2108","messageId":"2109","endLine":157,"endColumn":51},{"ruleId":"2095","severity":1,"message":"2142","line":1083,"column":53,"nodeType":"2097","messageId":"2098","endLine":1083,"endColumn":55},{"ruleId":"2091","severity":1,"message":"2243","line":10,"column":7,"nodeType":"2093","messageId":"2094","endLine":10,"endColumn":18},{"ruleId":"2239","severity":1,"message":"2240","line":60,"column":33,"nodeType":"2241","messageId":"2098","endLine":60,"endColumn":42},{"ruleId":"2239","severity":1,"message":"2242","line":61,"column":33,"nodeType":"2241","messageId":"2098","endLine":61,"endColumn":43},{"ruleId":"2239","severity":1,"message":"2240","line":417,"column":33,"nodeType":"2241","messageId":"2098","endLine":417,"endColumn":42},{"ruleId":"2239","severity":1,"message":"2242","line":418,"column":33,"nodeType":"2241","messageId":"2098","endLine":418,"endColumn":43},{"ruleId":"2091","severity":1,"message":"2244","line":462,"column":31,"nodeType":"2093","messageId":"2094","endLine":462,"endColumn":49},{"ruleId":"2091","severity":1,"message":"2245","line":16,"column":13,"nodeType":"2093","messageId":"2094","endLine":16,"endColumn":19},{"ruleId":"2095","severity":1,"message":"2142","line":116,"column":189,"nodeType":"2097","messageId":"2098","endLine":116,"endColumn":191},{"ruleId":"2095","severity":1,"message":"2142","line":117,"column":189,"nodeType":"2097","messageId":"2098","endLine":117,"endColumn":191},{"ruleId":"2091","severity":1,"message":"2138","line":1,"column":17,"nodeType":"2093","messageId":"2094","endLine":1,"endColumn":26},{"ruleId":"2095","severity":1,"message":"2142","line":162,"column":17,"nodeType":"2097","messageId":"2098","endLine":162,"endColumn":19},{"ruleId":"2106","severity":1,"message":"2107","line":231,"column":25,"nodeType":"2108","messageId":"2109","endLine":231,"endColumn":27},{"ruleId":"2106","severity":1,"message":"2107","line":239,"column":27,"nodeType":"2108","messageId":"2109","endLine":239,"endColumn":29},{"ruleId":"2091","severity":1,"message":"2246","line":5,"column":8,"nodeType":"2093","messageId":"2094","endLine":5,"endColumn":13},{"ruleId":"2091","severity":1,"message":"2247","line":13,"column":8,"nodeType":"2093","messageId":"2094","endLine":13,"endColumn":16},{"ruleId":"2113","severity":1,"message":"2114","line":27,"column":19,"nodeType":"2115","messageId":"2116","endLine":31,"endColumn":21,"fix":"2248"},{"ruleId":"2249","severity":1,"message":"2250","line":27,"column":19,"nodeType":"2115","endLine":31,"endColumn":21},{"ruleId":"2106","severity":1,"message":"2107","line":515,"column":102,"nodeType":"2108","messageId":"2109","endLine":515,"endColumn":104},{"ruleId":"2106","severity":1,"message":"2107","line":775,"column":89,"nodeType":"2108","messageId":"2109","endLine":775,"endColumn":91},{"ruleId":"2228","severity":1,"message":"2229","line":1082,"column":5,"nodeType":"2230","messageId":"2231","endLine":1095,"endColumn":6},{"ruleId":"2106","severity":1,"message":"2107","line":1098,"column":45,"nodeType":"2108","messageId":"2109","endLine":1098,"endColumn":47},{"ruleId":"2150","severity":1,"message":"2151","line":1388,"column":11,"nodeType":"2152","messageId":"2098","endLine":1388,"endColumn":15,"fix":"2251"},{"ruleId":"2150","severity":1,"message":"2151","line":1406,"column":11,"nodeType":"2152","messageId":"2098","endLine":1406,"endColumn":15,"fix":"2252"},{"ruleId":"2150","severity":1,"message":"2151","line":1490,"column":11,"nodeType":"2152","messageId":"2098","endLine":1490,"endColumn":15,"fix":"2253"},{"ruleId":"2150","severity":1,"message":"2151","line":1508,"column":11,"nodeType":"2152","messageId":"2098","endLine":1508,"endColumn":15,"fix":"2254"},{"ruleId":"2150","severity":1,"message":"2151","line":1526,"column":11,"nodeType":"2152","messageId":"2098","endLine":1526,"endColumn":15,"fix":"2255"},{"ruleId":"2145","severity":1,"message":"2146","line":153,"column":25,"nodeType":"2147","messageId":"2148","endLine":153,"endColumn":81},{"ruleId":"2145","severity":1,"message":"2146","line":167,"column":25,"nodeType":"2147","messageId":"2148","endLine":167,"endColumn":81},{"ruleId":"2091","severity":1,"message":"2256","line":11,"column":7,"nodeType":"2093","messageId":"2094","endLine":11,"endColumn":17},{"ruleId":"2091","severity":1,"message":"2257","line":15,"column":7,"nodeType":"2093","messageId":"2094","endLine":15,"endColumn":15},{"ruleId":"2091","severity":1,"message":"2138","line":1,"column":17,"nodeType":"2093","messageId":"2094","endLine":1,"endColumn":26},{"ruleId":"2091","severity":1,"message":"2246","line":5,"column":8,"nodeType":"2093","messageId":"2094","endLine":5,"endColumn":13},{"ruleId":"2091","severity":1,"message":"2247","line":13,"column":8,"nodeType":"2093","messageId":"2094","endLine":13,"endColumn":16},{"ruleId":"2091","severity":1,"message":"2258","line":15,"column":10,"nodeType":"2093","messageId":"2094","endLine":15,"endColumn":30},{"ruleId":"2091","severity":1,"message":"2259","line":32,"column":11,"nodeType":"2093","messageId":"2094","endLine":32,"endColumn":30},{"ruleId":"2091","severity":1,"message":"2259","line":17,"column":29,"nodeType":"2093","messageId":"2094","endLine":17,"endColumn":48},{"ruleId":"2091","severity":1,"message":"2260","line":29,"column":9,"nodeType":"2093","messageId":"2094","endLine":29,"endColumn":28},{"ruleId":"2091","severity":1,"message":"2245","line":5,"column":13,"nodeType":"2093","messageId":"2094","endLine":5,"endColumn":19},{"ruleId":"2159","severity":1,"message":"2160","line":84,"column":19,"nodeType":"2115","endLine":84,"endColumn":46},{"ruleId":"2091","severity":1,"message":"2245","line":5,"column":13,"nodeType":"2093","messageId":"2094","endLine":5,"endColumn":19},{"ruleId":"2091","severity":1,"message":"2261","line":3,"column":8,"nodeType":"2093","messageId":"2094","endLine":3,"endColumn":21},{"ruleId":"2106","severity":1,"message":"2107","line":69,"column":61,"nodeType":"2108","messageId":"2109","endLine":69,"endColumn":63},{"ruleId":"2091","severity":1,"message":"2262","line":161,"column":9,"nodeType":"2093","messageId":"2094","endLine":161,"endColumn":22},{"ruleId":"2159","severity":1,"message":"2160","line":511,"column":29,"nodeType":"2115","endLine":511,"endColumn":56},{"ruleId":"2145","severity":1,"message":"2146","line":614,"column":29,"nodeType":"2147","messageId":"2148","endLine":614,"endColumn":85},{"ruleId":"2145","severity":1,"message":"2146","line":827,"column":29,"nodeType":"2147","messageId":"2148","endLine":827,"endColumn":85},{"ruleId":"2145","severity":1,"message":"2146","line":838,"column":31,"nodeType":"2147","messageId":"2148","endLine":838,"endColumn":87},{"ruleId":"2091","severity":1,"message":"2263","line":5,"column":8,"nodeType":"2093","messageId":"2094","endLine":5,"endColumn":29},{"ruleId":"2190","severity":1,"message":"2191","line":29,"column":49,"nodeType":"2097","messageId":"2192","endLine":29,"endColumn":50},{"ruleId":"2095","severity":1,"message":"2142","line":214,"column":25,"nodeType":"2097","messageId":"2098","endLine":214,"endColumn":27},{"ruleId":"2145","severity":1,"message":"2146","line":605,"column":19,"nodeType":"2147","messageId":"2148","endLine":605,"endColumn":47},{"ruleId":"2145","severity":1,"message":"2146","line":627,"column":19,"nodeType":"2147","messageId":"2148","endLine":627,"endColumn":73},{"ruleId":"2145","severity":1,"message":"2146","line":652,"column":19,"nodeType":"2147","messageId":"2148","endLine":652,"endColumn":72},{"ruleId":"2190","severity":1,"message":"2191","line":623,"column":29,"nodeType":"2097","messageId":"2192","endLine":623,"endColumn":30},{"ruleId":"2190","severity":1,"message":"2191","line":626,"column":25,"nodeType":"2097","messageId":"2192","endLine":626,"endColumn":26},{"ruleId":"2190","severity":1,"message":"2191","line":629,"column":29,"nodeType":"2097","messageId":"2192","endLine":629,"endColumn":30},{"ruleId":"2190","severity":1,"message":"2191","line":634,"column":29,"nodeType":"2097","messageId":"2192","endLine":634,"endColumn":30},{"ruleId":"2190","severity":1,"message":"2191","line":635,"column":29,"nodeType":"2097","messageId":"2192","endLine":635,"endColumn":30},{"ruleId":"2190","severity":1,"message":"2191","line":637,"column":25,"nodeType":"2097","messageId":"2192","endLine":637,"endColumn":26},{"ruleId":"2190","severity":1,"message":"2191","line":638,"column":25,"nodeType":"2097","messageId":"2192","endLine":638,"endColumn":26},{"ruleId":"2190","severity":1,"message":"2191","line":640,"column":29,"nodeType":"2097","messageId":"2192","endLine":640,"endColumn":30},{"ruleId":"2190","severity":1,"message":"2191","line":641,"column":29,"nodeType":"2097","messageId":"2192","endLine":641,"endColumn":30},{"ruleId":"2190","severity":1,"message":"2191","line":647,"column":23,"nodeType":"2097","messageId":"2192","endLine":647,"endColumn":24},{"ruleId":"2190","severity":1,"message":"2191","line":650,"column":26,"nodeType":"2097","messageId":"2192","endLine":650,"endColumn":27},{"ruleId":"2190","severity":1,"message":"2191","line":653,"column":22,"nodeType":"2097","messageId":"2192","endLine":653,"endColumn":23},{"ruleId":"2190","severity":1,"message":"2191","line":658,"column":23,"nodeType":"2097","messageId":"2192","endLine":658,"endColumn":24},{"ruleId":"2190","severity":1,"message":"2191","line":659,"column":23,"nodeType":"2097","messageId":"2192","endLine":659,"endColumn":24},{"ruleId":"2190","severity":1,"message":"2191","line":661,"column":26,"nodeType":"2097","messageId":"2192","endLine":661,"endColumn":27},{"ruleId":"2190","severity":1,"message":"2191","line":662,"column":26,"nodeType":"2097","messageId":"2192","endLine":662,"endColumn":27},{"ruleId":"2190","severity":1,"message":"2191","line":664,"column":22,"nodeType":"2097","messageId":"2192","endLine":664,"endColumn":23},{"ruleId":"2190","severity":1,"message":"2191","line":665,"column":22,"nodeType":"2097","messageId":"2192","endLine":665,"endColumn":23},{"ruleId":"2190","severity":1,"message":"2191","line":729,"column":24,"nodeType":"2097","messageId":"2192","endLine":729,"endColumn":25},{"ruleId":"2190","severity":1,"message":"2191","line":732,"column":27,"nodeType":"2097","messageId":"2192","endLine":732,"endColumn":28},{"ruleId":"2190","severity":1,"message":"2191","line":735,"column":24,"nodeType":"2097","messageId":"2192","endLine":735,"endColumn":25},{"ruleId":"2190","severity":1,"message":"2191","line":740,"column":24,"nodeType":"2097","messageId":"2192","endLine":740,"endColumn":25},{"ruleId":"2190","severity":1,"message":"2191","line":741,"column":24,"nodeType":"2097","messageId":"2192","endLine":741,"endColumn":25},{"ruleId":"2190","severity":1,"message":"2191","line":743,"column":27,"nodeType":"2097","messageId":"2192","endLine":743,"endColumn":28},{"ruleId":"2190","severity":1,"message":"2191","line":744,"column":27,"nodeType":"2097","messageId":"2192","endLine":744,"endColumn":28},{"ruleId":"2190","severity":1,"message":"2191","line":746,"column":24,"nodeType":"2097","messageId":"2192","endLine":746,"endColumn":25},{"ruleId":"2190","severity":1,"message":"2191","line":747,"column":24,"nodeType":"2097","messageId":"2192","endLine":747,"endColumn":25},{"ruleId":"2239","severity":1,"message":"2264","line":186,"column":7,"nodeType":"2241","messageId":"2098","endLine":186,"endColumn":13},{"ruleId":"2106","severity":1,"message":"2107","line":202,"column":32,"nodeType":"2108","messageId":"2109","endLine":202,"endColumn":34},{"ruleId":"2106","severity":1,"message":"2107","line":229,"column":32,"nodeType":"2108","messageId":"2109","endLine":229,"endColumn":34},{"ruleId":"2091","severity":1,"message":"2138","line":1,"column":17,"nodeType":"2093","messageId":"2094","endLine":1,"endColumn":26},{"ruleId":"2091","severity":1,"message":"2265","line":7,"column":8,"nodeType":"2093","messageId":"2094","endLine":7,"endColumn":27},{"ruleId":"2091","severity":1,"message":"2266","line":11,"column":8,"nodeType":"2093","messageId":"2094","endLine":11,"endColumn":35},{"ruleId":"2091","severity":1,"message":"2138","line":1,"column":17,"nodeType":"2093","messageId":"2094","endLine":1,"endColumn":26},{"ruleId":"2091","severity":1,"message":"2138","line":1,"column":17,"nodeType":"2093","messageId":"2094","endLine":1,"endColumn":26},{"ruleId":"2106","severity":1,"message":"2107","line":37,"column":25,"nodeType":"2108","messageId":"2109","endLine":37,"endColumn":27},{"ruleId":"2159","severity":1,"message":"2160","line":143,"column":19,"nodeType":"2115","endLine":143,"endColumn":23},{"ruleId":"2091","severity":1,"message":"2138","line":1,"column":17,"nodeType":"2093","messageId":"2094","endLine":1,"endColumn":26},{"ruleId":"2091","severity":1,"message":"2138","line":1,"column":17,"nodeType":"2093","messageId":"2094","endLine":1,"endColumn":26},{"ruleId":"2091","severity":1,"message":"2179","line":3,"column":8,"nodeType":"2093","messageId":"2094","endLine":3,"endColumn":14},{"ruleId":"2091","severity":1,"message":"2267","line":2,"column":8,"nodeType":"2093","messageId":"2094","endLine":2,"endColumn":12},{"ruleId":"2228","severity":1,"message":"2229","line":67,"column":7,"nodeType":"2230","messageId":"2231","endLine":80,"endColumn":8},{"ruleId":"2091","severity":1,"message":"2138","line":1,"column":17,"nodeType":"2093","messageId":"2094","endLine":1,"endColumn":26},{"ruleId":"2095","severity":1,"message":"2142","line":166,"column":17,"nodeType":"2097","messageId":"2098","endLine":166,"endColumn":19},{"ruleId":"2106","severity":1,"message":"2107","line":237,"column":25,"nodeType":"2108","messageId":"2109","endLine":237,"endColumn":27},{"ruleId":"2106","severity":1,"message":"2107","line":245,"column":27,"nodeType":"2108","messageId":"2109","endLine":245,"endColumn":29},{"ruleId":"2095","severity":1,"message":"2142","line":224,"column":31,"nodeType":"2097","messageId":"2098","endLine":224,"endColumn":33},{"ruleId":"2091","severity":1,"message":"2268","line":238,"column":32,"nodeType":"2093","messageId":"2094","endLine":238,"endColumn":42},{"ruleId":"2091","severity":1,"message":"2269","line":238,"column":44,"nodeType":"2093","messageId":"2094","endLine":238,"endColumn":53},{"ruleId":"2091","severity":1,"message":"2270","line":240,"column":9,"nodeType":"2093","messageId":"2094","endLine":240,"endColumn":22},{"ruleId":"2091","severity":1,"message":"2271","line":11,"column":9,"nodeType":"2093","messageId":"2094","endLine":11,"endColumn":24},{"ruleId":"2091","severity":1,"message":"2272","line":15,"column":9,"nodeType":"2093","messageId":"2094","endLine":15,"endColumn":16},{"ruleId":"2106","severity":1,"message":"2233","line":27,"column":74,"nodeType":"2108","messageId":"2234","endLine":27,"endColumn":76},{"ruleId":"2091","severity":1,"message":"2273","line":4,"column":8,"nodeType":"2093","messageId":"2094","endLine":4,"endColumn":14},{"ruleId":"2113","severity":1,"message":"2114","line":110,"column":27,"nodeType":"2115","messageId":"2116","endLine":110,"endColumn":66,"fix":"2274"},{"ruleId":"2091","severity":1,"message":"2179","line":2,"column":8,"nodeType":"2093","messageId":"2094","endLine":2,"endColumn":14},{"ruleId":"2091","severity":1,"message":"2275","line":3,"column":8,"nodeType":"2093","messageId":"2094","endLine":3,"endColumn":16},{"ruleId":"2091","severity":1,"message":"2158","line":4,"column":8,"nodeType":"2093","messageId":"2094","endLine":4,"endColumn":15},{"ruleId":"2091","severity":1,"message":"2245","line":5,"column":13,"nodeType":"2093","messageId":"2094","endLine":5,"endColumn":19},{"ruleId":"2091","severity":1,"message":"2236","line":6,"column":8,"nodeType":"2093","messageId":"2094","endLine":6,"endColumn":18},{"ruleId":"2091","severity":1,"message":"2276","line":7,"column":8,"nodeType":"2093","messageId":"2094","endLine":7,"endColumn":12},{"ruleId":"2095","severity":1,"message":"2142","line":86,"column":47,"nodeType":"2097","messageId":"2098","endLine":86,"endColumn":49},{"ruleId":"2091","severity":1,"message":"2179","line":2,"column":8,"nodeType":"2093","messageId":"2094","endLine":2,"endColumn":14},{"ruleId":"2106","severity":1,"message":"2233","line":22,"column":25,"nodeType":"2108","messageId":"2234","endLine":22,"endColumn":27},{"ruleId":"2190","severity":1,"message":"2191","line":60,"column":35,"nodeType":"2097","messageId":"2192","endLine":60,"endColumn":36},{"ruleId":"2190","severity":1,"message":"2191","line":60,"column":52,"nodeType":"2097","messageId":"2192","endLine":60,"endColumn":53},{"ruleId":"2190","severity":1,"message":"2191","line":143,"column":47,"nodeType":"2097","messageId":"2192","endLine":143,"endColumn":48},{"ruleId":"2277","severity":1,"message":"2278","line":105,"column":39,"nodeType":"2108","messageId":"2279","endLine":105,"endColumn":80},{"ruleId":"2277","severity":1,"message":"2278","line":108,"column":23,"nodeType":"2108","messageId":"2279","endLine":108,"endColumn":64},{"ruleId":"2277","severity":1,"message":"2278","line":110,"column":23,"nodeType":"2108","messageId":"2279","endLine":110,"endColumn":64},{"ruleId":"2277","severity":1,"message":"2278","line":113,"column":23,"nodeType":"2108","messageId":"2279","endLine":113,"endColumn":64},{"ruleId":"2106","severity":1,"message":"2107","line":107,"column":9,"nodeType":"2213","messageId":"2214","endLine":107,"endColumn":16},{"ruleId":"2106","severity":1,"message":"2107","line":176,"column":9,"nodeType":"2213","messageId":"2214","endLine":176,"endColumn":15},{"ruleId":"2106","severity":1,"message":"2107","line":205,"column":58,"nodeType":"2108","messageId":"2109","endLine":205,"endColumn":60},{"ruleId":"2091","severity":1,"message":"2280","line":34,"column":7,"nodeType":"2093","messageId":"2094","endLine":34,"endColumn":22},{"ruleId":"2091","severity":1,"message":"2281","line":35,"column":7,"nodeType":"2093","messageId":"2094","endLine":35,"endColumn":14},{"ruleId":"2110","severity":1,"message":"2282","line":36,"column":11,"nodeType":"2093","messageId":"2112","endLine":36,"endColumn":32},{"ruleId":"2113","severity":1,"message":"2114","line":81,"column":19,"nodeType":"2115","messageId":"2116","endLine":81,"endColumn":122,"fix":"2283"},{"ruleId":"2091","severity":1,"message":"2261","line":3,"column":8,"nodeType":"2093","messageId":"2094","endLine":3,"endColumn":21},{"ruleId":"2106","severity":1,"message":"2107","line":69,"column":61,"nodeType":"2108","messageId":"2109","endLine":69,"endColumn":63},{"ruleId":"2091","severity":1,"message":"2243","line":10,"column":7,"nodeType":"2093","messageId":"2094","endLine":10,"endColumn":18},{"ruleId":"2239","severity":1,"message":"2240","line":60,"column":33,"nodeType":"2241","messageId":"2098","endLine":60,"endColumn":42},{"ruleId":"2239","severity":1,"message":"2242","line":61,"column":33,"nodeType":"2241","messageId":"2098","endLine":61,"endColumn":43},{"ruleId":"2239","severity":1,"message":"2240","line":417,"column":33,"nodeType":"2241","messageId":"2098","endLine":417,"endColumn":42},{"ruleId":"2239","severity":1,"message":"2242","line":418,"column":33,"nodeType":"2241","messageId":"2098","endLine":418,"endColumn":43},{"ruleId":"2091","severity":1,"message":"2244","line":462,"column":31,"nodeType":"2093","messageId":"2094","endLine":462,"endColumn":49},{"ruleId":"2239","severity":1,"message":"2240","line":62,"column":33,"nodeType":"2241","messageId":"2098","endLine":62,"endColumn":42},{"ruleId":"2239","severity":1,"message":"2242","line":63,"column":33,"nodeType":"2241","messageId":"2098","endLine":63,"endColumn":43},{"ruleId":"2239","severity":1,"message":"2240","line":438,"column":33,"nodeType":"2241","messageId":"2098","endLine":438,"endColumn":42},{"ruleId":"2239","severity":1,"message":"2242","line":439,"column":33,"nodeType":"2241","messageId":"2098","endLine":439,"endColumn":43},{"ruleId":"2095","severity":1,"message":"2142","line":578,"column":86,"nodeType":"2097","messageId":"2098","endLine":578,"endColumn":88},{"ruleId":"2095","severity":1,"message":"2142","line":716,"column":88,"nodeType":"2097","messageId":"2098","endLine":716,"endColumn":90},{"ruleId":"2091","severity":1,"message":"2284","line":8,"column":10,"nodeType":"2093","messageId":"2094","endLine":8,"endColumn":16},{"ruleId":"2106","severity":1,"message":"2107","line":136,"column":49,"nodeType":"2108","messageId":"2109","endLine":136,"endColumn":51},{"ruleId":"2095","severity":1,"message":"2142","line":1016,"column":51,"nodeType":"2097","messageId":"2098","endLine":1016,"endColumn":53},{"ruleId":"2095","severity":1,"message":"2142","line":66,"column":63,"nodeType":"2097","messageId":"2098","endLine":66,"endColumn":65},{"ruleId":"2095","severity":1,"message":"2142","line":226,"column":100,"nodeType":"2097","messageId":"2098","endLine":226,"endColumn":102},{"ruleId":"2095","severity":1,"message":"2096","line":337,"column":29,"nodeType":"2097","messageId":"2098","endLine":337,"endColumn":31},{"ruleId":"2095","severity":1,"message":"2096","line":337,"column":54,"nodeType":"2097","messageId":"2098","endLine":337,"endColumn":56},{"ruleId":"2095","severity":1,"message":"2096","line":396,"column":29,"nodeType":"2097","messageId":"2098","endLine":396,"endColumn":31},{"ruleId":"2095","severity":1,"message":"2142","line":475,"column":61,"nodeType":"2097","messageId":"2098","endLine":475,"endColumn":63},{"ruleId":"2095","severity":1,"message":"2142","line":508,"column":27,"nodeType":"2097","messageId":"2098","endLine":508,"endColumn":29},{"ruleId":"2106","severity":1,"message":"2233","line":580,"column":61,"nodeType":"2108","messageId":"2234","endLine":580,"endColumn":63},{"ruleId":"2091","severity":1,"message":"2285","line":63,"column":9,"nodeType":"2093","messageId":"2094","endLine":63,"endColumn":14},{"ruleId":"2091","severity":1,"message":"2286","line":64,"column":9,"nodeType":"2093","messageId":"2094","endLine":64,"endColumn":14},{"ruleId":"2091","severity":1,"message":"2287","line":65,"column":9,"nodeType":"2093","messageId":"2094","endLine":65,"endColumn":15},{"ruleId":"2091","severity":1,"message":"2288","line":147,"column":15,"nodeType":"2093","messageId":"2094","endLine":147,"endColumn":26},{"ruleId":"2277","severity":1,"message":"2278","line":38,"column":54,"nodeType":"2108","messageId":"2279","endLine":38,"endColumn":95},{"ruleId":"2277","severity":1,"message":"2278","line":39,"column":25,"nodeType":"2108","messageId":"2279","endLine":39,"endColumn":66},{"ruleId":"2277","severity":1,"message":"2278","line":40,"column":9,"nodeType":"2108","messageId":"2279","endLine":40,"endColumn":50},{"ruleId":"2277","severity":1,"message":"2278","line":42,"column":25,"nodeType":"2108","messageId":"2279","endLine":42,"endColumn":66},{"ruleId":"2145","severity":1,"message":"2146","line":75,"column":25,"nodeType":"2147","messageId":"2148","endLine":75,"endColumn":81},{"ruleId":"2145","severity":1,"message":"2146","line":89,"column":25,"nodeType":"2147","messageId":"2148","endLine":89,"endColumn":81},{"ruleId":"2091","severity":1,"message":"2289","line":62,"column":19,"nodeType":"2093","messageId":"2094","endLine":62,"endColumn":44},{"ruleId":"2228","severity":1,"message":"2229","line":106,"column":9,"nodeType":"2230","messageId":"2231","endLine":118,"endColumn":10},{"ruleId":"2106","severity":1,"message":"2107","line":108,"column":99,"nodeType":"2108","messageId":"2109","endLine":108,"endColumn":101},{"ruleId":"2228","severity":1,"message":"2229","line":109,"column":15,"nodeType":"2230","messageId":"2231","endLine":116,"endColumn":16},{"ruleId":"2106","severity":1,"message":"2107","line":110,"column":115,"nodeType":"2108","messageId":"2109","endLine":110,"endColumn":117},{"ruleId":"2106","severity":1,"message":"2107","line":123,"column":91,"nodeType":"2108","messageId":"2109","endLine":123,"endColumn":93},{"ruleId":"2228","severity":1,"message":"2229","line":274,"column":5,"nodeType":"2230","messageId":"2231","endLine":286,"endColumn":6},{"ruleId":"2106","severity":1,"message":"2107","line":276,"column":95,"nodeType":"2108","messageId":"2109","endLine":276,"endColumn":97},{"ruleId":"2228","severity":1,"message":"2229","line":277,"column":11,"nodeType":"2230","messageId":"2231","endLine":283,"endColumn":12},{"ruleId":"2106","severity":1,"message":"2107","line":278,"column":111,"nodeType":"2108","messageId":"2109","endLine":278,"endColumn":113},{"ruleId":"2106","severity":1,"message":"2107","line":293,"column":18,"nodeType":"2108","messageId":"2109","endLine":293,"endColumn":20},{"ruleId":"2091","severity":1,"message":"2290","line":355,"column":11,"nodeType":"2093","messageId":"2094","endLine":355,"endColumn":19},{"ruleId":"2091","severity":1,"message":"2291","line":462,"column":13,"nodeType":"2093","messageId":"2094","endLine":462,"endColumn":29},{"ruleId":"2091","severity":1,"message":"2292","line":462,"column":31,"nodeType":"2093","messageId":"2094","endLine":462,"endColumn":46},{"ruleId":"2091","severity":1,"message":"2293","line":471,"column":9,"nodeType":"2093","messageId":"2094","endLine":471,"endColumn":17},{"ruleId":"2091","severity":1,"message":"2294","line":472,"column":9,"nodeType":"2093","messageId":"2094","endLine":472,"endColumn":17},{"ruleId":"2091","severity":1,"message":"2295","line":473,"column":9,"nodeType":"2093","messageId":"2094","endLine":473,"endColumn":23},{"ruleId":"2091","severity":1,"message":"2296","line":474,"column":9,"nodeType":"2093","messageId":"2094","endLine":474,"endColumn":23},{"ruleId":"2091","severity":1,"message":"2297","line":475,"column":9,"nodeType":"2093","messageId":"2094","endLine":475,"endColumn":20},{"ruleId":"2091","severity":1,"message":"2298","line":476,"column":9,"nodeType":"2093","messageId":"2094","endLine":476,"endColumn":22},{"ruleId":"2091","severity":1,"message":"2299","line":484,"column":23,"nodeType":"2093","messageId":"2094","endLine":484,"endColumn":29},{"ruleId":"2091","severity":1,"message":"2299","line":540,"column":23,"nodeType":"2093","messageId":"2094","endLine":540,"endColumn":29},{"ruleId":"2091","severity":1,"message":"2300","line":14,"column":8,"nodeType":"2093","messageId":"2094","endLine":14,"endColumn":18},{"ruleId":"2110","severity":1,"message":"2301","line":32,"column":9,"nodeType":"2093","messageId":"2112","endLine":32,"endColumn":15},{"ruleId":"2187","severity":1,"message":"2302","line":90,"column":21,"nodeType":"2303","messageId":"2189","endLine":90,"endColumn":34},{"ruleId":"2239","severity":1,"message":"2304","line":197,"column":7,"nodeType":"2241","messageId":"2098","endLine":197,"endColumn":11},{"ruleId":"2305","severity":1,"message":"2306","line":81,"column":19,"nodeType":"2115","endLine":88,"endColumn":21},{"ruleId":"2091","severity":1,"message":"2307","line":6,"column":8,"nodeType":"2093","messageId":"2094","endLine":6,"endColumn":19},{"ruleId":"2091","severity":1,"message":"2308","line":7,"column":8,"nodeType":"2093","messageId":"2094","endLine":7,"endColumn":20},{"ruleId":"2091","severity":1,"message":"2309","line":8,"column":8,"nodeType":"2093","messageId":"2094","endLine":8,"endColumn":21},{"ruleId":"2091","severity":1,"message":"2310","line":9,"column":8,"nodeType":"2093","messageId":"2094","endLine":9,"endColumn":22},{"ruleId":"2091","severity":1,"message":"2311","line":10,"column":8,"nodeType":"2093","messageId":"2094","endLine":10,"endColumn":22},{"ruleId":"2091","severity":1,"message":"2312","line":11,"column":8,"nodeType":"2093","messageId":"2094","endLine":11,"endColumn":21},{"ruleId":"2091","severity":1,"message":"2313","line":12,"column":8,"nodeType":"2093","messageId":"2094","endLine":12,"endColumn":20},{"ruleId":"2091","severity":1,"message":"2314","line":13,"column":8,"nodeType":"2093","messageId":"2094","endLine":13,"endColumn":16},{"ruleId":"2091","severity":1,"message":"2315","line":14,"column":8,"nodeType":"2093","messageId":"2094","endLine":14,"endColumn":15},{"ruleId":"2091","severity":1,"message":"2316","line":15,"column":8,"nodeType":"2093","messageId":"2094","endLine":15,"endColumn":24},{"ruleId":"2091","severity":1,"message":"2317","line":16,"column":8,"nodeType":"2093","messageId":"2094","endLine":16,"endColumn":25},{"ruleId":"2091","severity":1,"message":"2318","line":17,"column":8,"nodeType":"2093","messageId":"2094","endLine":17,"endColumn":21},{"ruleId":"2091","severity":1,"message":"2319","line":18,"column":8,"nodeType":"2093","messageId":"2094","endLine":18,"endColumn":22},{"ruleId":"2091","severity":1,"message":"2320","line":19,"column":8,"nodeType":"2093","messageId":"2094","endLine":19,"endColumn":23},{"ruleId":"2091","severity":1,"message":"2321","line":20,"column":8,"nodeType":"2093","messageId":"2094","endLine":20,"endColumn":22},{"ruleId":"2091","severity":1,"message":"2322","line":21,"column":8,"nodeType":"2093","messageId":"2094","endLine":21,"endColumn":16},{"ruleId":"2091","severity":1,"message":"2323","line":22,"column":8,"nodeType":"2093","messageId":"2094","endLine":22,"endColumn":17},{"ruleId":"2091","severity":1,"message":"2324","line":23,"column":8,"nodeType":"2093","messageId":"2094","endLine":23,"endColumn":25},{"ruleId":"2091","severity":1,"message":"2325","line":24,"column":8,"nodeType":"2093","messageId":"2094","endLine":24,"endColumn":25},{"ruleId":"2091","severity":1,"message":"2326","line":25,"column":8,"nodeType":"2093","messageId":"2094","endLine":25,"endColumn":27},{"ruleId":"2091","severity":1,"message":"2327","line":26,"column":8,"nodeType":"2093","messageId":"2094","endLine":26,"endColumn":27},{"ruleId":"2091","severity":1,"message":"2328","line":27,"column":8,"nodeType":"2093","messageId":"2094","endLine":27,"endColumn":27},{"ruleId":"2091","severity":1,"message":"2329","line":28,"column":8,"nodeType":"2093","messageId":"2094","endLine":28,"endColumn":27},{"ruleId":"2330","severity":1,"message":"2331","line":70,"column":75,"nodeType":"2332","messageId":"2333","endLine":70,"endColumn":76},{"ruleId":"2106","severity":1,"message":"2107","line":115,"column":34,"nodeType":"2108","messageId":"2109","endLine":115,"endColumn":36},{"ruleId":"2330","severity":1,"message":"2331","line":154,"column":31,"nodeType":"2332","messageId":"2333","endLine":154,"endColumn":32},{"ruleId":"2106","severity":1,"message":"2107","line":169,"column":48,"nodeType":"2108","messageId":"2109","endLine":169,"endColumn":50},{"ruleId":"2091","severity":1,"message":"2334","line":213,"column":9,"nodeType":"2093","messageId":"2094","endLine":213,"endColumn":20},{"ruleId":"2091","severity":1,"message":"2335","line":214,"column":11,"nodeType":"2093","messageId":"2094","endLine":214,"endColumn":15},{"ruleId":"2095","severity":1,"message":"2096","line":74,"column":21,"nodeType":"2097","messageId":"2098","endLine":74,"endColumn":23},{"ruleId":"2336","severity":1,"message":"2337","line":269,"column":45,"nodeType":"2115","endLine":269,"endColumn":115},{"ruleId":"2338","severity":1,"message":"2339","line":270,"column":49,"nodeType":"2115","endLine":270,"endColumn":128},{"ruleId":"2336","severity":1,"message":"2337","line":272,"column":45,"nodeType":"2115","endLine":272,"endColumn":113},{"ruleId":"2338","severity":1,"message":"2339","line":273,"column":49,"nodeType":"2115","endLine":273,"endColumn":124},{"ruleId":"2336","severity":1,"message":"2337","line":310,"column":65,"nodeType":"2115","endLine":310,"endColumn":148},{"ruleId":"2338","severity":1,"message":"2339","line":311,"column":69,"nodeType":"2115","endLine":311,"endColumn":144},{"ruleId":"2091","severity":1,"message":"2174","line":2,"column":10,"nodeType":"2093","messageId":"2094","endLine":2,"endColumn":14},{"ruleId":"2091","severity":1,"message":"2340","line":6,"column":8,"nodeType":"2093","messageId":"2094","endLine":6,"endColumn":18},{"ruleId":"2091","severity":1,"message":"2245","line":12,"column":13,"nodeType":"2093","messageId":"2094","endLine":12,"endColumn":19},{"ruleId":"2091","severity":1,"message":"2341","line":5,"column":8,"nodeType":"2093","messageId":"2094","endLine":5,"endColumn":21},{"ruleId":"2305","severity":1,"message":"2306","line":64,"column":13,"nodeType":"2115","endLine":71,"endColumn":15},{"ruleId":"2336","severity":1,"message":"2337","line":122,"column":160,"nodeType":"2115","endLine":122,"endColumn":218},{"ruleId":"2336","severity":1,"message":"2337","line":141,"column":37,"nodeType":"2115","endLine":141,"endColumn":157},{"ruleId":"2336","severity":1,"message":"2337","line":150,"column":41,"nodeType":"2115","endLine":150,"endColumn":169},{"ruleId":"2336","severity":1,"message":"2337","line":159,"column":41,"nodeType":"2115","endLine":159,"endColumn":169},{"ruleId":"2336","severity":1,"message":"2337","line":166,"column":37,"nodeType":"2115","endLine":166,"endColumn":136},{"ruleId":"2095","severity":1,"message":"2096","line":45,"column":21,"nodeType":"2097","messageId":"2098","endLine":45,"endColumn":23},{"ruleId":"2106","severity":1,"message":"2107","line":87,"column":33,"nodeType":"2108","messageId":"2109","endLine":87,"endColumn":35},{"ruleId":"2336","severity":1,"message":"2337","line":154,"column":38,"nodeType":"2115","endLine":154,"endColumn":112},{"ruleId":"2338","severity":1,"message":"2339","line":155,"column":41,"nodeType":"2115","endLine":155,"endColumn":129},{"ruleId":"2095","severity":1,"message":"2096","line":417,"column":62,"nodeType":"2097","messageId":"2098","endLine":417,"endColumn":64},{"ruleId":"2190","severity":1,"message":"2191","line":616,"column":75,"nodeType":"2097","messageId":"2192","endLine":616,"endColumn":76},{"ruleId":"2190","severity":1,"message":"2191","line":626,"column":75,"nodeType":"2097","messageId":"2192","endLine":626,"endColumn":76},{"ruleId":"2091","severity":1,"message":"2342","line":4,"column":10,"nodeType":"2093","messageId":"2094","endLine":4,"endColumn":15},{"ruleId":"2095","severity":1,"message":"2096","line":193,"column":64,"nodeType":"2097","messageId":"2098","endLine":193,"endColumn":66},{"ruleId":"2102","severity":1,"message":"2103","line":223,"column":9,"nodeType":"2104","messageId":"2105","endLine":235,"endColumn":10},{"ruleId":"2190","severity":1,"message":"2191","line":310,"column":71,"nodeType":"2097","messageId":"2192","endLine":310,"endColumn":72},{"ruleId":"2190","severity":1,"message":"2191","line":320,"column":71,"nodeType":"2097","messageId":"2192","endLine":320,"endColumn":72},{"ruleId":"2091","severity":1,"message":"2343","line":6,"column":10,"nodeType":"2093","messageId":"2094","endLine":6,"endColumn":36},{"ruleId":"2095","severity":1,"message":"2096","line":260,"column":43,"nodeType":"2097","messageId":"2098","endLine":260,"endColumn":45},{"ruleId":"2095","severity":1,"message":"2096","line":294,"column":60,"nodeType":"2097","messageId":"2098","endLine":294,"endColumn":62},{"ruleId":"2150","severity":1,"message":"2151","line":399,"column":15,"nodeType":"2152","messageId":"2098","endLine":399,"endColumn":19,"fix":"2344"},{"ruleId":"2190","severity":1,"message":"2191","line":484,"column":79,"nodeType":"2097","messageId":"2192","endLine":484,"endColumn":80},{"ruleId":"2190","severity":1,"message":"2191","line":527,"column":79,"nodeType":"2097","messageId":"2192","endLine":527,"endColumn":80},{"ruleId":"2190","severity":1,"message":"2191","line":570,"column":79,"nodeType":"2097","messageId":"2192","endLine":570,"endColumn":80},{"ruleId":"2190","severity":1,"message":"2191","line":613,"column":79,"nodeType":"2097","messageId":"2192","endLine":613,"endColumn":80},{"ruleId":"2190","severity":1,"message":"2191","line":657,"column":79,"nodeType":"2097","messageId":"2192","endLine":657,"endColumn":80},{"ruleId":"2095","severity":1,"message":"2096","line":96,"column":21,"nodeType":"2097","messageId":"2098","endLine":96,"endColumn":23},{"ruleId":"2336","severity":1,"message":"2337","line":272,"column":42,"nodeType":"2115","endLine":272,"endColumn":122},{"ruleId":"2338","severity":1,"message":"2339","line":273,"column":45,"nodeType":"2115","endLine":273,"endColumn":133},{"ruleId":"2145","severity":1,"message":"2146","line":310,"column":220,"nodeType":"2147","messageId":"2148","endLine":310,"endColumn":256},{"ruleId":"2095","severity":1,"message":"2096","line":65,"column":21,"nodeType":"2097","messageId":"2098","endLine":65,"endColumn":23},{"ruleId":"2106","severity":1,"message":"2107","line":99,"column":50,"nodeType":"2108","messageId":"2109","endLine":99,"endColumn":52},{"ruleId":"2106","severity":1,"message":"2107","line":110,"column":52,"nodeType":"2108","messageId":"2109","endLine":110,"endColumn":54},{"ruleId":"2336","severity":1,"message":"2337","line":236,"column":46,"nodeType":"2115","endLine":236,"endColumn":120},{"ruleId":"2338","severity":1,"message":"2339","line":237,"column":49,"nodeType":"2115","endLine":237,"endColumn":137},{"ruleId":"2336","severity":1,"message":"2337","line":208,"column":23,"nodeType":"2115","endLine":213,"endColumn":24},{"ruleId":"2338","severity":1,"message":"2339","line":214,"column":25,"nodeType":"2115","endLine":214,"endColumn":93},{"ruleId":"2145","severity":1,"message":"2146","line":268,"column":43,"nodeType":"2147","messageId":"2148","endLine":268,"endColumn":79},{"ruleId":"2095","severity":1,"message":"2096","line":88,"column":21,"nodeType":"2097","messageId":"2098","endLine":88,"endColumn":23},{"ruleId":"2336","severity":1,"message":"2337","line":201,"column":33,"nodeType":"2115","endLine":201,"endColumn":108},{"ruleId":"2338","severity":1,"message":"2339","line":202,"column":37,"nodeType":"2115","endLine":202,"endColumn":125},{"ruleId":"2091","severity":1,"message":"2345","line":3,"column":10,"nodeType":"2093","messageId":"2094","endLine":3,"endColumn":22},{"ruleId":"2091","severity":1,"message":"2342","line":4,"column":10,"nodeType":"2093","messageId":"2094","endLine":4,"endColumn":15},{"ruleId":"2346","severity":1,"message":"2347","line":4,"column":5,"nodeType":"2348","messageId":"2349","endLine":6,"endColumn":6},{"ruleId":"2091","severity":1,"message":"2138","line":1,"column":17,"nodeType":"2093","messageId":"2094","endLine":1,"endColumn":26},{"ruleId":"2190","severity":1,"message":"2191","line":305,"column":79,"nodeType":"2097","messageId":"2192","endLine":305,"endColumn":80},{"ruleId":"2190","severity":1,"message":"2191","line":337,"column":79,"nodeType":"2097","messageId":"2192","endLine":337,"endColumn":80},{"ruleId":"2190","severity":1,"message":"2191","line":380,"column":79,"nodeType":"2097","messageId":"2192","endLine":380,"endColumn":80},{"ruleId":"2091","severity":1,"message":"2158","line":3,"column":8,"nodeType":"2093","messageId":"2094","endLine":3,"endColumn":15},{"ruleId":"2106","severity":1,"message":"2350","line":15,"column":61,"nodeType":"2108","messageId":"2234","endLine":15,"endColumn":63},{"ruleId":"2338","severity":1,"message":"2339","line":35,"column":29,"nodeType":"2115","endLine":35,"endColumn":293},{"ruleId":"2338","severity":1,"message":"2339","line":38,"column":29,"nodeType":"2115","endLine":38,"endColumn":277},{"ruleId":"2190","severity":1,"message":"2191","line":58,"column":59,"nodeType":"2097","messageId":"2192","endLine":58,"endColumn":60},{"ruleId":"2106","severity":1,"message":"2107","line":14,"column":25,"nodeType":"2108","messageId":"2109","endLine":14,"endColumn":27},{"ruleId":"2091","severity":1,"message":"2345","line":5,"column":10,"nodeType":"2093","messageId":"2094","endLine":5,"endColumn":22},{"ruleId":"2091","severity":1,"message":"2273","line":6,"column":8,"nodeType":"2093","messageId":"2094","endLine":6,"endColumn":14},{"ruleId":"2095","severity":1,"message":"2096","line":39,"column":52,"nodeType":"2097","messageId":"2098","endLine":39,"endColumn":54},{"ruleId":"2190","severity":1,"message":"2191","line":60,"column":59,"nodeType":"2097","messageId":"2192","endLine":60,"endColumn":60},{"ruleId":"2095","severity":1,"message":"2096","line":31,"column":94,"nodeType":"2097","messageId":"2098","endLine":31,"endColumn":96},{"ruleId":"2106","severity":1,"message":"2107","line":19,"column":57,"nodeType":"2108","messageId":"2109","endLine":19,"endColumn":59},{"ruleId":"2091","severity":1,"message":"2342","line":4,"column":10,"nodeType":"2093","messageId":"2094","endLine":4,"endColumn":15},{"ruleId":"2106","severity":1,"message":"2107","line":43,"column":49,"nodeType":"2108","messageId":"2109","endLine":43,"endColumn":51},{"ruleId":"2106","severity":1,"message":"2107","line":49,"column":38,"nodeType":"2108","messageId":"2109","endLine":49,"endColumn":40},{"ruleId":"2336","severity":1,"message":"2337","line":179,"column":57,"nodeType":"2115","endLine":179,"endColumn":165},{"ruleId":"2338","severity":1,"message":"2339","line":180,"column":61,"nodeType":"2115","endLine":180,"endColumn":140},{"ruleId":"2336","severity":1,"message":"2337","line":182,"column":57,"nodeType":"2115","endLine":182,"endColumn":167},{"ruleId":"2338","severity":1,"message":"2339","line":183,"column":61,"nodeType":"2115","endLine":183,"endColumn":136},{"ruleId":"2091","severity":1,"message":"2275","line":5,"column":8,"nodeType":"2093","messageId":"2094","endLine":5,"endColumn":16},{"ruleId":"2091","severity":1,"message":"2351","line":7,"column":10,"nodeType":"2093","messageId":"2094","endLine":7,"endColumn":15},{"ruleId":"2336","severity":1,"message":"2337","line":19,"column":41,"nodeType":"2115","endLine":19,"endColumn":144},{"ruleId":"2095","severity":1,"message":"2096","line":23,"column":74,"nodeType":"2097","messageId":"2098","endLine":23,"endColumn":76},{"ruleId":"2336","severity":1,"message":"2337","line":27,"column":41,"nodeType":"2115","endLine":27,"endColumn":154},{"ruleId":"2336","severity":1,"message":"2337","line":36,"column":45,"nodeType":"2115","endLine":36,"endColumn":158},{"ruleId":"2336","severity":1,"message":"2337","line":43,"column":41,"nodeType":"2115","endLine":43,"endColumn":140},{"ruleId":"2091","severity":1,"message":"2245","line":3,"column":13,"nodeType":"2093","messageId":"2094","endLine":3,"endColumn":19},{"ruleId":"2091","severity":1,"message":"2342","line":4,"column":10,"nodeType":"2093","messageId":"2094","endLine":4,"endColumn":15},{"ruleId":"2106","severity":1,"message":"2107","line":33,"column":49,"nodeType":"2108","messageId":"2109","endLine":33,"endColumn":51},{"ruleId":"2106","severity":1,"message":"2107","line":40,"column":38,"nodeType":"2108","messageId":"2109","endLine":40,"endColumn":40},{"ruleId":"2091","severity":1,"message":"2352","line":93,"column":36,"nodeType":"2093","messageId":"2094","endLine":93,"endColumn":42},{"ruleId":"2091","severity":1,"message":"2353","line":3,"column":10,"nodeType":"2093","messageId":"2094","endLine":3,"endColumn":24},{"ruleId":"2091","severity":1,"message":"2354","line":22,"column":13,"nodeType":"2093","messageId":"2094","endLine":22,"endColumn":14},{"ruleId":"2095","severity":1,"message":"2142","line":41,"column":47,"nodeType":"2097","messageId":"2098","endLine":41,"endColumn":49},{"ruleId":"2095","severity":1,"message":"2096","line":41,"column":94,"nodeType":"2097","messageId":"2098","endLine":41,"endColumn":96},{"ruleId":"2091","severity":1,"message":"2342","line":3,"column":10,"nodeType":"2093","messageId":"2094","endLine":3,"endColumn":15},{"ruleId":"2106","severity":1,"message":"2107","line":31,"column":64,"nodeType":"2108","messageId":"2109","endLine":31,"endColumn":66},{"ruleId":"2091","severity":1,"message":"2355","line":7,"column":7,"nodeType":"2093","messageId":"2094","endLine":7,"endColumn":12},{"ruleId":"2091","severity":1,"message":"2354","line":19,"column":13,"nodeType":"2093","messageId":"2094","endLine":19,"endColumn":14},{"ruleId":"2091","severity":1,"message":"2138","line":1,"column":17,"nodeType":"2093","messageId":"2094","endLine":1,"endColumn":26},{"ruleId":"2095","severity":1,"message":"2142","line":163,"column":17,"nodeType":"2097","messageId":"2098","endLine":163,"endColumn":19},{"ruleId":"2106","severity":1,"message":"2107","line":192,"column":25,"nodeType":"2108","messageId":"2109","endLine":192,"endColumn":27},{"ruleId":"2106","severity":1,"message":"2107","line":200,"column":27,"nodeType":"2108","messageId":"2109","endLine":200,"endColumn":29},{"ruleId":"2091","severity":1,"message":"2356","line":13,"column":13,"nodeType":"2093","messageId":"2094","endLine":13,"endColumn":17},{"ruleId":"2106","severity":1,"message":"2107","line":42,"column":49,"nodeType":"2108","messageId":"2109","endLine":42,"endColumn":51},{"ruleId":"2106","severity":1,"message":"2107","line":48,"column":38,"nodeType":"2108","messageId":"2109","endLine":48,"endColumn":40},{"ruleId":"2336","severity":1,"message":"2337","line":178,"column":49,"nodeType":"2115","endLine":178,"endColumn":147},{"ruleId":"2338","severity":1,"message":"2339","line":179,"column":53,"nodeType":"2115","endLine":179,"endColumn":132},{"ruleId":"2336","severity":1,"message":"2337","line":180,"column":49,"nodeType":"2115","endLine":180,"endColumn":145},{"ruleId":"2338","severity":1,"message":"2339","line":181,"column":53,"nodeType":"2115","endLine":181,"endColumn":128},{"ruleId":"2091","severity":1,"message":"2275","line":5,"column":8,"nodeType":"2093","messageId":"2094","endLine":5,"endColumn":16},{"ruleId":"2095","severity":1,"message":"2096","line":202,"column":66,"nodeType":"2097","messageId":"2098","endLine":202,"endColumn":68},{"ruleId":"2106","severity":1,"message":"2107","line":34,"column":49,"nodeType":"2108","messageId":"2109","endLine":34,"endColumn":51},{"ruleId":"2106","severity":1,"message":"2107","line":41,"column":38,"nodeType":"2108","messageId":"2109","endLine":41,"endColumn":40},{"ruleId":"2091","severity":1,"message":"2353","line":3,"column":10,"nodeType":"2093","messageId":"2094","endLine":3,"endColumn":24},{"ruleId":"2091","severity":1,"message":"2357","line":29,"column":13,"nodeType":"2093","messageId":"2094","endLine":29,"endColumn":22},{"ruleId":"2091","severity":1,"message":"2354","line":32,"column":13,"nodeType":"2093","messageId":"2094","endLine":32,"endColumn":14},{"ruleId":"2106","severity":1,"message":"2107","line":15,"column":32,"nodeType":"2108","messageId":"2109","endLine":15,"endColumn":34},{"ruleId":"2091","severity":1,"message":"2358","line":1,"column":8,"nodeType":"2093","messageId":"2094","endLine":1,"endColumn":13},{"ruleId":"2095","severity":1,"message":"2096","line":22,"column":69,"nodeType":"2097","messageId":"2098","endLine":22,"endColumn":71},{"ruleId":"2091","severity":1,"message":"2138","line":1,"column":17,"nodeType":"2093","messageId":"2094","endLine":1,"endColumn":26},{"ruleId":"2091","severity":1,"message":"2359","line":193,"column":11,"nodeType":"2093","messageId":"2094","endLine":193,"endColumn":23},{"ruleId":"2091","severity":1,"message":"2360","line":202,"column":11,"nodeType":"2093","messageId":"2094","endLine":202,"endColumn":24},{"ruleId":"2091","severity":1,"message":"2361","line":213,"column":11,"nodeType":"2093","messageId":"2094","endLine":213,"endColumn":21},{"ruleId":"2091","severity":1,"message":"2362","line":223,"column":11,"nodeType":"2093","messageId":"2094","endLine":223,"endColumn":25},{"ruleId":"2336","severity":1,"message":"2337","line":24,"column":29,"nodeType":"2115","endLine":24,"endColumn":142},{"ruleId":"2336","severity":1,"message":"2337","line":27,"column":33,"nodeType":"2115","endLine":27,"endColumn":166},{"ruleId":"2091","severity":1,"message":"2345","line":3,"column":10,"nodeType":"2093","messageId":"2094","endLine":3,"endColumn":22},{"ruleId":"2095","severity":1,"message":"2096","line":43,"column":41,"nodeType":"2097","messageId":"2098","endLine":43,"endColumn":43},{"ruleId":"2106","severity":1,"message":"2107","line":75,"column":45,"nodeType":"2108","messageId":"2109","endLine":75,"endColumn":47},{"ruleId":"2106","severity":1,"message":"2107","line":125,"column":35,"nodeType":"2108","messageId":"2109","endLine":125,"endColumn":37},{"ruleId":"2110","severity":1,"message":"2301","line":42,"column":13,"nodeType":"2093","messageId":"2112","endLine":42,"endColumn":19},{"ruleId":"2091","severity":1,"message":"2363","line":58,"column":25,"nodeType":"2093","messageId":"2094","endLine":58,"endColumn":39},{"ruleId":"2145","severity":1,"message":"2146","line":215,"column":224,"nodeType":"2147","messageId":"2148","endLine":215,"endColumn":260},{"ruleId":"2091","severity":1,"message":"2138","line":1,"column":17,"nodeType":"2093","messageId":"2094","endLine":1,"endColumn":26},{"ruleId":"2190","severity":1,"message":"2191","line":275,"column":75,"nodeType":"2097","messageId":"2192","endLine":275,"endColumn":76},{"ruleId":"2190","severity":1,"message":"2191","line":307,"column":75,"nodeType":"2097","messageId":"2192","endLine":307,"endColumn":76},{"ruleId":"2190","severity":1,"message":"2191","line":350,"column":75,"nodeType":"2097","messageId":"2192","endLine":350,"endColumn":76},{"ruleId":"2336","severity":1,"message":"2337","line":446,"column":57,"nodeType":"2115","endLine":446,"endColumn":114},{"ruleId":"2145","severity":1,"message":"2146","line":200,"column":220,"nodeType":"2147","messageId":"2148","endLine":200,"endColumn":256},{"ruleId":"2190","severity":1,"message":"2191","line":162,"column":79,"nodeType":"2097","messageId":"2192","endLine":162,"endColumn":80},{"ruleId":"2190","severity":1,"message":"2191","line":188,"column":79,"nodeType":"2097","messageId":"2192","endLine":188,"endColumn":80},{"ruleId":"2190","severity":1,"message":"2191","line":135,"column":55,"nodeType":"2097","messageId":"2192","endLine":135,"endColumn":56},{"ruleId":"2190","severity":1,"message":"2191","line":167,"column":55,"nodeType":"2097","messageId":"2192","endLine":167,"endColumn":56},{"ruleId":"2190","severity":1,"message":"2191","line":211,"column":55,"nodeType":"2097","messageId":"2192","endLine":211,"endColumn":56},{"ruleId":"2091","severity":1,"message":"2138","line":1,"column":17,"nodeType":"2093","messageId":"2094","endLine":1,"endColumn":26},{"ruleId":"2190","severity":1,"message":"2191","line":300,"column":79,"nodeType":"2097","messageId":"2192","endLine":300,"endColumn":80},{"ruleId":"2190","severity":1,"message":"2191","line":344,"column":79,"nodeType":"2097","messageId":"2192","endLine":344,"endColumn":80},{"ruleId":"2190","severity":1,"message":"2191","line":377,"column":79,"nodeType":"2097","messageId":"2192","endLine":377,"endColumn":80},{"ruleId":"2190","severity":1,"message":"2191","line":420,"column":79,"nodeType":"2097","messageId":"2192","endLine":420,"endColumn":80},{"ruleId":"2091","severity":1,"message":"2138","line":1,"column":17,"nodeType":"2093","messageId":"2094","endLine":1,"endColumn":26},{"ruleId":"2091","severity":1,"message":"2351","line":6,"column":10,"nodeType":"2093","messageId":"2094","endLine":6,"endColumn":15},{"ruleId":"2095","severity":1,"message":"2096","line":68,"column":61,"nodeType":"2097","messageId":"2098","endLine":68,"endColumn":63},{"ruleId":"2095","severity":1,"message":"2096","line":88,"column":32,"nodeType":"2097","messageId":"2098","endLine":88,"endColumn":34},{"ruleId":"2095","severity":1,"message":"2142","line":117,"column":30,"nodeType":"2097","messageId":"2098","endLine":117,"endColumn":32},{"ruleId":"2190","severity":1,"message":"2191","line":176,"column":83,"nodeType":"2097","messageId":"2192","endLine":176,"endColumn":84},{"ruleId":"2190","severity":1,"message":"2191","line":206,"column":83,"nodeType":"2097","messageId":"2192","endLine":206,"endColumn":84},{"ruleId":"2095","severity":1,"message":"2142","line":237,"column":67,"nodeType":"2097","messageId":"2098","endLine":237,"endColumn":69},{"ruleId":"2095","severity":1,"message":"2096","line":271,"column":67,"nodeType":"2097","messageId":"2098","endLine":271,"endColumn":69},{"ruleId":"2091","severity":1,"message":"2364","line":30,"column":16,"nodeType":"2093","messageId":"2094","endLine":30,"endColumn":20},{"ruleId":"2106","severity":1,"message":"2107","line":8,"column":25,"nodeType":"2108","messageId":"2109","endLine":8,"endColumn":27},{"ruleId":"2106","severity":1,"message":"2107","line":11,"column":37,"nodeType":"2108","messageId":"2109","endLine":11,"endColumn":39},{"ruleId":"2127","severity":1,"message":"2128","line":50,"column":43,"nodeType":"2129","messageId":"2130","endLine":50,"endColumn":44,"suggestions":"2365"},{"ruleId":"2127","severity":1,"message":"2128","line":50,"column":68,"nodeType":"2129","messageId":"2130","endLine":50,"endColumn":69,"suggestions":"2366"},{"ruleId":"2127","severity":1,"message":"2128","line":50,"column":77,"nodeType":"2129","messageId":"2130","endLine":50,"endColumn":78,"suggestions":"2367"},{"ruleId":"2127","severity":1,"message":"2128","line":50,"column":81,"nodeType":"2129","messageId":"2130","endLine":50,"endColumn":82,"suggestions":"2368"},{"ruleId":"2095","severity":1,"message":"2142","line":293,"column":27,"nodeType":"2097","messageId":"2098","endLine":293,"endColumn":29},"no-unused-vars","'ManualBooking' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-redeclare","'copyData' is already defined.","redeclared","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"2369","text":"2370"},"'FrustratedAgent' is defined but never used.","'TourwizBox' is defined but never used.","'HowItWorkImg1' is defined but never used.","'HowItWorkImg2' is defined but never used.","'HowItWorkImg3' is defined but never used.","'HowItWorkImg4' is defined but never used.","'HowItWorkImg5' is defined but never used.","'HowItWorkImg6' is defined but never used.","'CheckCircleWhite' is defined but never used.","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["2371","2372"],["2373","2374"],["2375","2376"],["2377","2378"],"'currencySymbol' is assigned a value but never used.","'lang' is defined but never used.","'recaptchaValue' is assigned a value but never used.","'Component' is defined but never used.","'BookingBase' is defined but never used.","'DateRangePicker' is defined but never used.","'dates' is assigned a value but never used.","Expected '===' and instead saw '=='.","'isSaveSucessMsg' is assigned a value but never used.","'isBtnLoading' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'portalId' is assigned a value but never used.","no-extra-bind","The function binding is unnecessary.","CallExpression",{"range":"2379","text":"2380"},{"range":"2381","text":"2370"},{"range":"2382","text":"2370"},{"range":"2383","text":"2370"},{"range":"2384","text":"2370"},"'SVGIcon' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'UmrahPackageDetails' is defined but never used.","'UmrahPackageEmail' is defined but never used.","'HotelMadinah' is assigned a value but never used.",{"range":"2385","text":"2380"},"no-native-reassign",["2386"],"no-negated-in-lhs",["2387"],"'token' is already defined.","Unnecessary escape character: \\[.",["2388","2389"],"'Environment' is defined but never used.","'isLoading' is assigned a value but never used.","'Link' is defined but never used.","'DirectLink' is defined but never used.","'Element' is defined but never used.","'Events' is defined but never used.","'scrollSpy' is defined but never used.","'Amount' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","Expected a 'break' statement before 'case'.","case","'printContent' is assigned a value but never used.","no-self-assign","'PolicyHTML' is assigned to itself.","selfAssignment","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'currencyFormatIN' is assigned a value but never used.","'currencyFormatDE' is assigned a value but never used.",{"range":"2390","text":"2380"},{"range":"2391","text":"2380"},{"range":"2392","text":"2380"},{"range":"2393","text":"2380"},"'ResultItemAirDetails' is defined but never used.","'ResultItemAirItem' is defined but never used.","'ResultItemAirFare' is defined but never used.","'ResultItemAirTabs' is defined but never used.","'Advertisement' is defined but never used.","'advt' is assigned a value but never used.","'ShowSupplierWisePrice' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'isQuickBook' is assigned a value but never used.","'FilterCheckBox' is defined but never used.","'FilterRangeList' is defined but never used.","ReturnStatement","expectedReturnValue",{"range":"2394","text":"2370"},{"range":"2395","text":"2370"},"jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.","'UmrahPackageEmailItems' is defined but never used.","'UmrahPackageEmailItemsFromList' is defined but never used.","'timeSeconds' is assigned a value but never used.","'timeSecondsCustomColon' is assigned a value but never used.",["2396","2397"],["2398","2399"],["2400","2401"],["2402","2403"],"'data' is already defined.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'elementid' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'isAllSelected' is assigned a value but never used.","'HtmlParser' is defined but never used.","Block is redundant.","redundantBlock","no-dupe-keys","Duplicate key 'textAlign'.","ObjectExpression","Duplicate key 'fontWeight'.","'totalAmount' is assigned a value but never used.","'getOnErrorImageURL' is assigned a value but never used.","'Global' is defined but never used.","'Rooms' is defined but never used.","'Schedule' is defined but never used.",{"range":"2404","text":"2370"},"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.",{"range":"2405","text":"2380"},{"range":"2406","text":"2380"},{"range":"2407","text":"2380"},{"range":"2408","text":"2380"},{"range":"2409","text":"2380"},"'isWishList' is assigned a value but never used.","'wishList' is assigned a value but never used.","'convertNodeToElement' is defined but never used.","'availableBusinesses' is assigned a value but never used.","'umrahPackageDetails' is assigned a value but never used.","'ImageNotFound' is defined but never used.","'requestObject' is assigned a value but never used.","'ResultItemAirFareRule' is defined but never used.","Duplicate key 'imgUrl'.","'QuotationEmailItems' is defined but never used.","'QuotationEmailItemsFromList' is defined but never used.","'Room' is defined but never used.","'noOfAdults' is assigned a value but never used.","'noOfChild' is assigned a value but never used.","'tempNoOfRooms' is assigned a value but never used.","'transactionDate' is assigned a value but never used.","'comment' is assigned a value but never used.","'moment' is defined but never used.",{"range":"2410","text":"2370"},"'Datecomp' is defined but never used.","'Date' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","unsafeRefs","'visaFeeQuantity' is assigned a value but never used.","'visafee' is assigned a value but never used.","'umrahMutamerRequestID' is already defined.",{"range":"2411","text":"2370"},"'Button' is defined but never used.","'adult' is assigned a value but never used.","'child' is assigned a value but never used.","'infant' is assigned a value but never used.","'tmpBusiness' is assigned a value but never used.","'isvalidAdditionalQuantity' is assigned a value but never used.","'business' is assigned a value but never used.","'isSpecialRequest' is assigned a value but never used.","'isFrequentFlyer' is assigned a value but never used.","'seatList' is assigned a value but never used.","'mealList' is assigned a value but never used.","'baggageListDep' is assigned a value but never used.","'baggageListArr' is assigned a value but never used.","'requestList' is assigned a value but never used.","'flyerCardList' is assigned a value but never used.","'inputs' is assigned a value but never used.","'ComingSoon' is defined but never used.","'reqURL' is already defined.","'deleteItem.id' is assigned to itself.","MemberExpression","Duplicate key 'name'.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'CompanyProf' is defined but never used.","'ManageAgents' is defined but never used.","'ManageBooking' is defined but never used.","'ManageCustomer' is defined but never used.","'ManageEmployee' is defined but never used.","'ManageRevenue' is defined but never used.","'ManageWallet' is defined but never used.","'MyWallet' is defined but never used.","'Reports' is defined but never used.","'AffiliatePortals' is defined but never used.","'ContentManagement' is defined but never used.","'CustomerClass' is defined but never used.","'EmailTemplates' is defined but never used.","'MarketingCenter' is defined but never used.","'PortalPolicies' is defined but never used.","'Settings' is defined but never used.","'Suppliers' is defined but never used.","'CreateInquiryIcon' is defined but never used.","'ManageInquiryIcon' is defined but never used.","'CreateItineraryIcon' is defined but never used.","'ManageItineraryIcon' is defined but never used.","'CreateQuotationIcon' is defined but never used.","'ManageQuotationIcon' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'IsQuotation' is assigned a value but never used.","'role' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Travellers' is defined but never used.","'QuotationMenu' is defined but never used.","'Trans' is defined but never used.","'parsePhoneNumberFromString' is defined but never used.",{"range":"2412","text":"2380"},"'apiRequester' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","Array.prototype.filter() expects a value to be returned at the end of arrow function.","'parse' is defined but never used.","'BRNTab' is assigned a value but never used.","'renderToString' is defined but never used.","'x' is assigned a value but never used.","'style' is assigned a value but never used.","'type' is assigned a value but never used.","'printData' is assigned a value but never used.","'React' is defined but never used.","'durationList' is assigned a value but never used.","'typethemeList' is assigned a value but never used.","'budgetList' is assigned a value but never used.","'inclusionsList' is assigned a value but never used.","'resultsDeleted' is assigned a value but never used.","'data' is assigned a value but never used.",["2413","2414"],["2415","2416"],["2417","2418"],["2419","2420"],[8696,8696]," rel=\"noreferrer\"",{"messageId":"2421","fix":"2422","desc":"2423"},{"messageId":"2424","fix":"2425","desc":"2426"},{"messageId":"2421","fix":"2427","desc":"2423"},{"messageId":"2424","fix":"2428","desc":"2426"},{"messageId":"2421","fix":"2429","desc":"2423"},{"messageId":"2424","fix":"2430","desc":"2426"},{"messageId":"2421","fix":"2431","desc":"2423"},{"messageId":"2424","fix":"2432","desc":"2426"},[3126,3137],"",[1953,1953],[2374,2374],[2791,2791],[3433,3433],[9720,9731],"no-global-assign","no-unsafe-negation",{"messageId":"2421","fix":"2433","desc":"2423"},{"messageId":"2424","fix":"2434","desc":"2426"},[4649,4660],[5247,5258],[5851,5862],[6446,6457],[2998,2998],[9490,9490],{"messageId":"2421","fix":"2435","desc":"2423"},{"messageId":"2424","fix":"2436","desc":"2426"},{"messageId":"2421","fix":"2437","desc":"2423"},{"messageId":"2424","fix":"2438","desc":"2426"},{"messageId":"2421","fix":"2439","desc":"2423"},{"messageId":"2424","fix":"2440","desc":"2426"},{"messageId":"2421","fix":"2441","desc":"2423"},{"messageId":"2424","fix":"2442","desc":"2426"},[966,966],[54494,54505],[55146,55157],[58501,58512],[59141,59152],[59772,59783],[4898,4898],[3680,3680],[16162,16173],{"messageId":"2421","fix":"2443","desc":"2423"},{"messageId":"2424","fix":"2444","desc":"2426"},{"messageId":"2421","fix":"2445","desc":"2423"},{"messageId":"2424","fix":"2446","desc":"2426"},{"messageId":"2421","fix":"2447","desc":"2423"},{"messageId":"2424","fix":"2448","desc":"2426"},{"messageId":"2421","fix":"2449","desc":"2423"},{"messageId":"2424","fix":"2450","desc":"2426"},"removeEscape",{"range":"2451","text":"2380"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"2452","text":"2453"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"2454","text":"2380"},{"range":"2455","text":"2453"},{"range":"2456","text":"2380"},{"range":"2457","text":"2453"},{"range":"2458","text":"2380"},{"range":"2459","text":"2453"},{"range":"2460","text":"2380"},{"range":"2461","text":"2453"},{"range":"2462","text":"2380"},{"range":"2463","text":"2453"},{"range":"2464","text":"2380"},{"range":"2465","text":"2453"},{"range":"2466","text":"2380"},{"range":"2467","text":"2453"},{"range":"2468","text":"2380"},{"range":"2469","text":"2453"},{"range":"2470","text":"2380"},{"range":"2471","text":"2453"},{"range":"2472","text":"2380"},{"range":"2473","text":"2453"},{"range":"2474","text":"2380"},{"range":"2475","text":"2453"},{"range":"2476","text":"2380"},{"range":"2477","text":"2453"},[4611,4612],[4611,4611],"\\",[4636,4637],[4636,4636],[4645,4646],[4645,4645],[4649,4650],[4649,4649],[4151,4152],[4151,4151],[8521,8522],[8521,8521],[8546,8547],[8546,8546],[8555,8556],[8555,8555],[8559,8560],[8559,8559],[1347,1348],[1347,1347],[1372,1373],[1372,1372],[1381,1382],[1381,1381],[1385,1386],[1385,1385]]